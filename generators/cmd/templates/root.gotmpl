// Code generated by soracom-cli generate-cmd. DO NOT EDIT.
package cmd

import (
  "github.com/spf13/cobra"
)

// RootCmd defines 'soracom' command
var RootCmd = &cobra.Command{
  Use: "{{.Use}}",
  Short: "{{.Short}}",
  Long: `{{.Long}}`,
}

var specifiedProfileName string
var specifiedCoverageType string
var providedAPIKey string
var providedAPIToken string
var providedAuthKeyID string
var providedAuthKey string
var providedProfileCommand string
var rawOutput bool
var noRetryOnError bool

func InitRootCmd() {
  RootCmd.PersistentFlags().StringVar(&specifiedProfileName, "profile", "", TRCLI("cli.global-flags.profile"))
  RootCmd.PersistentFlags().StringVar(&specifiedCoverageType, "coverage-type", "", TRCLI("cli.global-flags.coverage-type"))
  RootCmd.PersistentFlags().StringVar(&providedAPIKey, "api-key", "", TRCLI("cli.global-flags.api-key"))
  RootCmd.PersistentFlags().StringVar(&providedAPIToken, "api-token", "", TRCLI("cli.global-flags.api-token"))
  RootCmd.PersistentFlags().StringVar(&providedAuthKeyID, "auth-key-id", "", TRCLI("cli.global-flags.auth-key-id"))
  RootCmd.PersistentFlags().StringVar(&providedAuthKey, "auth-key", "", TRCLI("cli.global-flags.auth-key"))
  RootCmd.PersistentFlags().StringVar(&providedProfileCommand, "profile-command", "", TRCLI("cli.global-flags.profile-command"))
  RootCmd.PersistentFlags().BoolVar(&rawOutput, "raw-output", false, TRCLI("cli.global-flags.raw-output"))
  RootCmd.PersistentFlags().BoolVar(&noRetryOnError, "no-retry-on-error", false, TRCLI("cli.global-flags.no-retry-on-error"))

  InitAllSubCommands()
}

func InitAllSubCommands() {
{{- range .Subcommands }}
  Init{{.CommandVariableName}}()
{{end}}
}
