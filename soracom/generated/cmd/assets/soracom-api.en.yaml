swagger: '2.0'
info:
  description: SORACOM API v1
  title: SORACOM API
  version: VERSION_PLACEHOLDER
host: api.soracom.io
basePath: /v1
schemes:
  - https
paths:
  /audit_logs/api:
    get:
      produces:
        - application/json
      parameters:
        - description: Filter item for audit log retrieval by API kind (e.g. `/v1/auth`).
          in: query
          name: api_kind
          required: false
          type: string
        - description: Start time for the log search range (unixtime milliseconds).
          in: query
          name: from_epoch_ms
          required: false
          type: integer
        - description: End time for the log search range (unixtime milliseconds).
          in: query
          name: to_epoch_ms
          required: false
          type: integer
        - description: Maximum number of log entries to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The value of `requestedTimeEpochMs` in the last log entry retrieved
            in the previous page. By specifying this parameter, you can continue
            to retrieve the list from the next page onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of API audit log entries.
          schema:
            items:
              $ref: '#/definitions/APIAuditLogEntry'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - AuditLog
      description: Retrieve audit logs for API calls.
      operationId: getApiAuditLogs
      summary: Retrieve audit logs for API calls
      x-soracom-cli:
        - audit-logs api get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /audit_logs/napter:
    get:
      produces:
        - application/json
      parameters:
        - description: Type of the target resource to query Napter audit log entries.
          enum:
            - Subscriber
          in: query
          name: resource_type
          required: false
          type: string
        - description: Identity of the target resource to query log entries.
          in: query
          name: resource_id
          required: false
          type: string
        - description: Start time for the log search range (unixtime milliseconds).
          in: query
          name: from
          required: false
          type: integer
        - description: End time for the log search range (unixtime milliseconds).
          in: query
          name: to
          required: false
          type: integer
        - description: Maximum number of log entries to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The value of `time` in the last log entry retrieved in the previous
            page. By specifying this parameter, you can continue to retrieve the
            list from the next page onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of Napter audit log entries.
          schema:
            items:
              $ref: '#/definitions/NapterAuditLogEntry'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - AuditLog
      description: Retrieve audit logs for Napter.
      operationId: getNapterAuditLogs
      summary: Retrieve audit logs for Napter
      x-soracom-cli:
        - audit-logs napter get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /auth:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Authentication request.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AuthRequest'
      responses:
        '200':
          description: Authentication successful.
          schema:
            $ref: '#/definitions/AuthResponse'
        '401':
          description: Authentication failed.
      tags:
        - Auth
      description: >-
        Performs authentication to access to the SORACOM API. To perform
        authentication by a root account, specify `email` and `password`. To
        perform authentication by an AuthKey, specify `authKeyId` and `authKey`.
        To perform authentication by a SAM user, specify `operatorId`,
        `userName` and `password`. An API Key and an API Token will be included
        in the response if successful. Specify the API Key and the API Token to
        requests afterwards
      operationId: auth
      summary: Performs authentication to access to the SORACOM API.
      x-soracom-cli:
        - auth
  /auth/password_reset_token/issue:
    post:
      consumes:
        - application/json
      parameters:
        - description: email address
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/IssuePasswordResetTokenRequest'
      responses:
        '200':
          description: OK.
        '400':
          description: Invalid email address.
      tags:
        - Auth
      description: >-
        Generates a password reset token and send it to the operator's mail
        address. After receiving the password reset token, call
        /v1/auth/password_reset_token/verify API with the token to update
        operator's password.
      operationId: issuePasswordResetToken
      summary: Issues a password reset token for the operator.
      x-soracom-cli:
        - auth issue-password-reset-token
  /auth/password_reset_token/verify:
    post:
      consumes:
        - application/json
      parameters:
        - description: 'token, password'
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VerifyPasswordResetTokenRequest'
      responses:
        '200':
          description: OK.
        '400':
          description: Invalid token.
        '404':
          description: Token expired.
      tags:
        - Auth
      description: Updates the operator's password if the password reset token is verified.
      operationId: verifyPasswordResetToken
      summary: Verifies the password reset token and updates password.
      x-soracom-cli:
        - auth verify-password-reset-token
  /bills:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GetBillingHistoryResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Billing
      description: >-
        Returns past billing history (after applied discounts such as free
        tiers, etc., inclusive of tax). This API only returns the billing
        amounts that have been finalized at the end of the month.
      operationId: getBillingHistory
      summary: Get billing history.
      x-soracom-cli:
        - bills list
  /bills/latest:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetLatestBill'
      security:
        - api_key: []
          api_token: []
      tags:
        - Billing
      description: >-
        Returns the latest billing amounts after applied discounts such as free
        tiers, etc. The amounts retrieved using this API correspond to the
        values before the invoice was finalized.
      operationId: getLatestBilling
      summary: Get latest bill.
      x-soracom-cli:
        - bills get-latest
  /bills/latest/export:
    post:
      produces:
        - application/json
      parameters:
        - description: 'export_mode (async, sync)'
          enum:
            - async
            - sync
          in: query
          name: export_mode
          required: false
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Billing
      description: >-
        Returns detailed information of the billing amounts for the latest
        month. This detailed information includes billing amounts per day,
        subscriber, and billing item. The amounts retrieved using this API
        correspond to the values before the invoice was finalized.
      operationId: exportLatestBilling
      summary: Export latest billing CSV file to S3.
      x-soracom-cli:
        - bills export-latest
  '/bills/{yyyyMM}':
    get:
      produces:
        - application/json
      parameters:
        - description: year and month
          in: path
          name: yyyyMM
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/MonthlyBill'
      security:
        - api_key: []
          api_token: []
      tags:
        - Billing
      description: >-
        Returns the billing history for the specified month (after applied
        discounts such as free tiers, etc., inclusive of tax). The amounts
        retrieved using this API correspond to the values before the invoice was
        finalized.
      operationId: getBilling
      summary: Get bill.
      x-soracom-cli:
        - bills get
  '/bills/{yyyyMM}/daily':
    get:
      produces:
        - application/json
      parameters:
        - description: year and month
          in: path
          name: yyyyMM
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/DailyBillResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Billing
      description: >-
        Returns detailed information of billing amounts per day for the
        specified month. This API only returns the billing amounts that have
        been finalized.
      operationId: getBillingPerDay
      summary: Get bill per day.
      x-soracom-cli:
        - bills get-daily
  '/bills/{yyyyMM}/export':
    post:
      produces:
        - application/json
      parameters:
        - description: yyyyMM
          in: path
          name: yyyyMM
          required: true
          type: string
        - description: 'export_mode (async, sync)'
          enum:
            - async
            - sync
          in: query
          name: export_mode
          required: false
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Billing
      description: >-
        Returns detailed information for the billing amounts for the specified
        month. This detailed information includes billing amounts per day,
        subscriber, and billing item.
      operationId: exportBilling
      summary: Output billing CSV file to S3.
      x-soracom-cli:
        - bills export
  /cell_locations:
    get:
      produces:
        - application/json
      parameters:
        - description: MCC - Mobile Country Code
          in: query
          name: mcc
          required: true
          type: string
        - description: MNC - Mobile Network Code
          in: query
          name: mnc
          required: true
          type: string
        - description: LAC - Location Area Code (for 3G)
          in: query
          name: lac
          required: false
          type: string
        - description: CID - Cell ID (for 3G)
          in: query
          name: cid
          required: false
          type: string
        - description: TAC - Tracking Area Code (for 4G)
          in: query
          name: tac
          required: false
          type: string
        - description: ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci`
          in: query
          name: ecid
          required: false
          type: string
        - description: ECID - Enhanced Cell ID (for 4G) - specify either `ecid` or `eci`
          in: query
          name: eci
          required: false
          type: string
      responses:
        '200':
          description: Location information for the cell tower
          schema:
            $ref: '#/definitions/CellLocation'
        '404':
          description: Location information is not found for the cell tower
      security:
        - api_key: []
          api_token: []
      tags:
        - CellLocation
      description: >-
        Retrieves location information (latitude / longitude) for a cell tower
        which is identified by Cell ID etc. Please specify MCC, MNC, LAC and CID
        when the access radio technology is 3G. It is possible to retrieve
        location information without CID, but the location information will be
        low accuracy.  For LTE (4G), please specify MCC, MNC, TAC and ECID. As
        it is based on an open database to convert cell information into
        location information, the location information does not exist or might
        be incorrect.
      operationId: getCellLocation
      summary: Get location information for a cell tower.
      x-soracom-cli:
        - cell-locations get
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: List of cell identifiers.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/CellIdentifier'
            type: array
      responses:
        '200':
          description: List of location information for the specified cell towers
          schema:
            items:
              $ref: '#/definitions/CellLocation'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - CellLocation
      description: >-
        Retrieves a list of location information (latitude / longitude) for
        multiple cell towers which are identified by Cell IDs etc.
      operationId: batchGetCellLocations
      summary: List location information for multiple cell towers.
      x-soracom-cli:
        - cell-locations batch-get
  /coupons:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters: []
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/ListCouponResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Payment
      description: Returns a list of currently registered coupons.
      operationId: listCoupons
      summary: List coupons.
      x-soracom-cli:
        - coupons list
    post:
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: Coupon details
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateEstimatedCouponRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/EstimatedCouponModel'
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: >-
        Creates a new coupon quotation. If the orderId is put in /confirm, the
        order is complete.
      operationId: createCouponQuotation
      summary: Create coupon quotation.
      x-soracom-cli:
        - coupons create
  '/coupons/{coupon_code}/register':
    post:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: Coupon code
          in: path
          name: coupon_code
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CouponResponse'
        '400':
          description: >-
            The coupon code is invalid or the coupon code registration limit has
            been reached.
      security:
        - api_key: []
          api_token: []
      tags:
        - Payment
      description: Registers a coupon.
      operationId: registerCoupon
      summary: Register Coupon.
      x-soracom-cli:
        - coupons register
  '/coupons/{order_id}/confirm':
    put:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: order_id
          in: path
          name: order_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CouponResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: >-
        Performs a credit limit and confirms the order if no problems are
        encountered.
      operationId: confirmCouponOrder
      summary: Confirm coupon order.
      x-soracom-cli:
        - coupons confirm
  /credentials:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/CredentialsModel'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Credential
      description: Returns a list of credentials.
      operationId: listCredentials
      summary: List of credentials.
      x-soracom-cli:
        - credentials list
  '/credentials/{credentials_id}':
    delete:
      parameters:
        - description: Credentials ID
          in: path
          name: credentials_id
          required: true
          type: string
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
      security:
        - api_key: []
          api_token: []
      tags:
        - Credential
      description: Deletes a credential.
      operationId: deleteCredential
      summary: Delete a credential.
      x-soracom-cli:
        - credentials delete
    post:
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json
      parameters:
        - description: credentials_id
          in: path
          name: credentials_id
          required: true
          type: string
        - description: credentials
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateAndUpdateCredentialsModel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/CredentialsModel'
      security:
        - api_key: []
          api_token: []
      tags:
        - Credential
      description: Creates a new credential.
      operationId: createCredential
      summary: Create a credential.
      x-soracom-cli:
        - credentials create
    put:
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json
      parameters:
        - description: credentials_id
          in: path
          name: credentials_id
          required: true
          type: string
        - description: credentials
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateAndUpdateCredentialsModel'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CredentialsModel'
        '400':
          description: >-
            There was an error in the request or the specified token has already
            expired. (In the latter case, you will need to use the /auth API to
            do authentication once again.)
      security:
        - api_key: []
          api_token: []
      tags:
        - Credential
      description: Updates a credential.
      operationId: updateCredential
      summary: Update a credential.
      x-soracom-cli:
        - credentials update
  /data/resources:
    get:
      produces:
        - application/json
      parameters:
        - description: Type of data source resource
          enum:
            - Subscriber
            - LoraDevice
            - SubscriberIdentityModule
            - SigfoxDevice
            - Device
          in: query
          name: resource_type
          required: false
          type: string
        - description: Maximum number of data entries to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The value of `resourceId` in the last log entry retrieved in the
            previous page. By specifying this parameter, you can continue to
            retrieve the list from the next page onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of data source resources.
          schema:
            items:
              $ref: '#/definitions/DataSourceResourceMetadata'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - DataEntry
      description: >-
        Returns a list of data source resources that have sent data from
        resources that belong to the operator. If the total number of entries
        does not fit in one page, a URL for accessing the next page is returned
        in the 'Link' header of the response.
      operationId: listDataSourceResources
      summary: Get the list of data source resources
      x-soracom-cli:
        - data list-source-resources
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/data/{resource_type}/{resource_id}':
    get:
      produces:
        - application/json
      parameters:
        - description: Type of data source resource
          enum:
            - Subscriber
            - LoraDevice
            - SubscriberIdentityModule
            - SigfoxDevice
            - Device
          in: path
          name: resource_type
          required: true
          type: string
        - description: ID of data source resource
          in: path
          name: resource_id
          required: true
          type: string
        - description: >-
            Start time for the data entries search range (unixtime in
            milliseconds).
          in: query
          name: from
          required: false
          type: integer
        - description: >-
            End time for the data entries search range (unixtime in
            milliseconds).
          in: query
          name: to
          required: false
          type: integer
        - default: desc
          description: >-
            Sort order of the data entries. Either descending (latest data entry
            first) or ascending (oldest data entry first).
          enum:
            - desc
            - asc
          in: query
          name: sort
          required: false
          type: string
        - description: Maximum number of data entries to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The value of `time` in the last log entry retrieved in the previous
            page. By specifying this parameter, you can continue to retrieve the
            list from the next page onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of data entries.
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - DataEntry
      description: >-
        Returns a list of data entries sent from a resource that match certain
        criteria. If the total number of entries does not fit in one page, a URL
        for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: getDataEntries
      summary: Get data sent from a resource.
      x-soracom-cli:
        - data get-entries
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/data/{resource_type}/{resource_id}/{time}':
    delete:
      parameters:
        - description: Type of data source resource
          enum:
            - Subscriber
            - LoraDevice
            - SubscriberIdentityModule
            - SigfoxDevice
            - Device
          in: path
          name: resource_type
          required: true
          type: string
        - description: ID of data source resource
          in: path
          name: resource_id
          required: true
          type: string
        - description: >-
            Timestamp of the target data entry to delete (unixtime in
            milliseconds).
          in: path
          name: time
          required: true
          type: integer
      responses:
        '204':
          description: The data entry has been successfully deleted
      security:
        - api_key: []
          api_token: []
      tags:
        - DataEntry
      description: Deletes a data entry identified with resource ID and timestamp
      operationId: deleteDataEntry
      summary: Deletes a data entry
      x-soracom-cli:
        - data delete-entry
    get:
      parameters:
        - description: Type of data source resource
          enum:
            - Subscriber
            - LoraDevice
            - SubscriberIdentityModule
            - SigfoxDevice
            - Device
          in: path
          name: resource_type
          required: true
          type: string
        - description: ID of data source resource
          in: path
          name: resource_id
          required: true
          type: string
        - description: >-
            Timestamp of the target data entry to get (unixtime in
            milliseconds).
          in: path
          name: time
          required: true
          type: integer
      responses:
        '200':
          description: The data entry specified with resource ID and timestamp
        '404':
          description: No such entry found
      security:
        - api_key: []
          api_token: []
      tags:
        - DataEntry
      description: Gets a data entry identified with resource ID and timestamp
      operationId: getDataEntry
      summary: Gets a data entry
      x-soracom-cli:
        - data get-entry
  /device_object_models:
    get:
      produces:
        - application/json
      parameters:
        - description: ID of the last device object model in the previous page
          in: query
          name: last_evaluated_key
          required: false
          type: string
        - default: -1
          description: Max number of device object models in a response
          format: int32
          in: query
          name: limit
          required: false
          type: integer
      responses:
        '200':
          description: List of device object models
          schema:
            items:
              $ref: '#/definitions/DeviceObjectModel'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - DeviceObjectModel
      description: Returns a list of device object models
      operationId: listDeviceObjectModels
      summary: Returns a list of device object models
      x-soracom-cli:
        - devices list-object-models
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
      parameters:
        - description: Device object model definition in either XML or JSON format.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeviceObjectModel'
      responses:
        '200':
          description: Device object model created
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        '400':
          description: Failed to parse device object model definition
      security:
        - api_key: []
          api_token: []
      tags:
        - DeviceObjectModel
      description: Creates a new device object model
      operationId: createDeviceObjectModel
      summary: Creates a new device object model
      x-soracom-cli:
        - devices create-object-model
  '/device_object_models/{model_id}':
    delete:
      parameters:
        - description: Device object model ID
          in: path
          name: model_id
          required: true
          type: string
      responses:
        '204':
          description: Successfully deleted
        '404':
          description: No such device object model found
      security:
        - api_key: []
          api_token: []
      tags:
        - DeviceObjectModel
      description: Deletes a device object model
      operationId: deleteDeviceObjectModel
      summary: Deletes a device object model
      x-soracom-cli:
        - devices delete-object-model
    get:
      produces:
        - application/json
      parameters:
        - description: Device object model ID
          in: path
          name: model_id
          required: true
          type: string
      responses:
        '200':
          description: Device object model
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        '404':
          description: No such device object model found
      security:
        - api_key: []
          api_token: []
      tags:
        - DeviceObjectModel
      description: Gets a device object model
      operationId: getDeviceObjectModel
      summary: Gets a device object model
      x-soracom-cli:
        - devices get-object-model
    post:
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
      parameters:
        - description: Device object model ID
          in: path
          name: model_id
          required: true
          type: string
        - description: Device object model definition in either XML or JSON format.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeviceObjectModel'
      responses:
        '200':
          description: Device object model updated
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        '400':
          description: Failed to parse device object model definition
        '404':
          description: No such device object model found
      security:
        - api_key: []
          api_token: []
      tags:
        - DeviceObjectModel
      description: Updates a device object model
      operationId: updateDeviceObjectModel
      summary: Updates a device object model
      x-soracom-cli:
        - devices update-object-model
  '/device_object_models/{model_id}/set_scope':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Target device object model ID
          in: path
          name: model_id
          required: true
          type: string
        - description: Scope value that is applied to the target device object model
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetDeviceObjectModelScopeRequest'
      responses:
        '200':
          description: Scope is set to the target device object model
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        '404':
          description: No such device object model found
      security:
        - api_key: []
          api_token: []
      tags:
        - DeviceObjectModel
      description: Sets scope for a device object model
      operationId: setDeviceObjectModelScope
      summary: Sets scope for a device object model
      x-soracom-cli:
        - devices set-object-model-scope
  /devices:
    get:
      produces:
        - application/json
      parameters:
        - description: Tag name
          in: query
          name: tag_name
          required: false
          type: string
        - description: Tag value
          in: query
          name: tag_value
          required: false
          type: string
        - description: Tag value match mode (exact | prefix)
          in: query
          name: tag_value_match_mode
          required: false
          type: string
        - description: ID of the last Device in the previous page
          in: query
          name: last_evaluated_key
          required: false
          type: string
        - default: -1
          description: Max number of Devices in a response
          format: int32
          in: query
          name: limit
          required: false
          type: integer
      responses:
        '200':
          description: List of Devices
          schema:
            items:
              $ref: '#/definitions/Device'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Returns a list of Devices
      operationId: listDevices
      summary: Returns a list of Devices
      x-soracom-cli:
        - devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Device to create
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Device'
      responses:
        '201':
          description: Device created
          schema:
            $ref: '#/definitions/Device'
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Creates a new Device
      operationId: createDevice
      summary: Creates a new Device
      x-soracom-cli:
        - devices create
  '/devices/{device_id}':
    delete:
      parameters:
        - description: Device to delete
          in: path
          name: device_id
          required: true
          type: string
      responses:
        '204':
          description: Device deleted
        '404':
          description: No such device found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Delete Device
      operationId: deleteDevice
      summary: Delete Device
      x-soracom-cli:
        - devices delete
    get:
      produces:
        - application/json
      parameters:
        - description: Device ID
          in: path
          name: device_id
          required: true
          type: string
        - default: false
          description: Whether or not to add model information
          in: query
          name: model
          required: false
          type: boolean
      responses:
        '200':
          description: A Device identified by device ID
          schema:
            $ref: '#/definitions/Device'
        '404':
          description: No such device found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Returns a Device identified by device ID
      operationId: getDevice
      summary: Returns a Device identified by device ID
      x-soracom-cli:
        - devices get
  '/devices/{device_id}/data':
    get:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target subscriber that generated data entries.
          in: path
          name: device_id
          required: true
          type: string
        - description: >-
            Start time for the data entries search range (unixtime in
            milliseconds).
          in: query
          name: from
          required: false
          type: integer
        - description: >-
            End time for the data entries search range (unixtime in
            milliseconds).
          in: query
          name: to
          required: false
          type: integer
        - default: desc
          description: >-
            Sort order of the data entries. Either descending (latest data entry
            first) or ascending (oldest data entry first).
          enum:
            - desc
            - asc
          in: query
          name: sort
          required: false
          type: string
        - description: Maximum number of data entries to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The value of `time` in the last log entry retrieved in the previous
            page. By specifying this parameter, you can continue to retrieve the
            list from the next page onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of data entries.
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: >-
        Returns a list of data entries sent from a device that match certain
        criteria. If the total number of entries does not fit in one page, a URL
        for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: getDataFromDevice
      summary: Get data sent from a device.
      x-soracom-cli:
        - devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/devices/{device_id}/set_group':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Device to update
          in: path
          name: device_id
          required: true
          type: string
        - in: body
          name: body
          schema:
            properties:
              groupId:
                type: string
            type: object
      responses:
        '200':
          description: Device updated
          schema:
            $ref: '#/definitions/Device'
        '404':
          description: No such device found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Lets a device join a group
      operationId: setDeviceGroup
      summary: Lets a device join a group
      x-soracom-cli:
        - devices set-group
  '/devices/{device_id}/tags':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Device to update
          in: path
          name: device_id
          required: true
          type: string
        - description: Array of values for tags to be updated.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/TagUpdateRequest'
            type: array
      responses:
        '200':
          description: Device updated
          schema:
            $ref: '#/definitions/Device'
        '404':
          description: No such device found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Updates device tags
      operationId: putDeviceTags
      summary: Updates device tags
      x-soracom-cli:
        - devices put-device-tags
  '/devices/{device_id}/tags/{tag_name}':
    delete:
      parameters:
        - description: Device to update
          in: path
          name: device_id
          required: true
          type: string
        - description: Name of tag to delete
          in: path
          name: tag_name
          required: true
          type: string
      responses:
        '204':
          description: Device tag deleted
        '404':
          description: No such device or tag found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Delete device tag
      operationId: deleteDeviceTag
      summary: Delete device tag
      x-soracom-cli:
        - devices delete-device-tag
  '/devices/{device_id}/unset_group':
    post:
      produces:
        - application/json
      parameters:
        - description: Device to update
          in: path
          name: device_id
          required: true
          type: string
      responses:
        '200':
          description: Device updated
          schema:
            $ref: '#/definitions/Device'
        '404':
          description: No such device found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Lets a device leave from a group
      operationId: unsetDeviceGroup
      summary: Lets a device leave from a group
      x-soracom-cli:
        - devices unset-group
  '/devices/{device_id}/{object}/{instance}':
    get:
      produces:
        - application/json
      parameters:
        - description: Target device
          in: path
          name: device_id
          required: true
          type: string
        - description: Object ID
          in: path
          name: object
          required: true
          type: string
        - description: Instance ID
          in: path
          name: instance
          required: true
          type: string
        - default: false
          description: Whether or not to add model information
          in: query
          name: model
          required: false
          type: boolean
      responses:
        '200':
          description: Resources under the specified object instance
          schema:
            $ref: '#/definitions/ObjectInstance'
        '400':
          description: Object instance is not readable
        '404':
          description: Object instance is not found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Get resources under an object instance of a device
      operationId: readDeviceResources
      summary: Get resources under an object instance of a device
      x-soracom-cli:
        - devices get-instance
  '/devices/{device_id}/{object}/{instance}/observe':
    post:
      parameters:
        - description: Target device
          in: path
          name: device_id
          required: true
          type: string
        - description: Object ID
          in: path
          name: object
          required: true
          type: string
        - description: Instance ID
          in: path
          name: instance
          required: true
          type: string
        - default: false
          description: Whether or not to add model information
          in: query
          name: model
          required: false
          type: boolean
      responses:
        '202':
          description: Observation started.
        '400':
          description: Resource is not readable
        '404':
          description: Resource is not found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Triggers observation of resources under an object instance of a device
      operationId: observeDeviceResources
      summary: Triggers observation of resources under an object instance of a device
      x-soracom-cli:
        - devices observe-resources
  '/devices/{device_id}/{object}/{instance}/unobserve':
    post:
      parameters:
        - description: Target device
          in: path
          name: device_id
          required: true
          type: string
        - description: Object ID
          in: path
          name: object
          required: true
          type: string
        - description: Instance ID
          in: path
          name: instance
          required: true
          type: string
      responses:
        '204':
          description: Observation cancelled
        '404':
          description: Resource is not found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Stops observation of resources under an object instance of a device
      operationId: unobserveDeviceResources
      summary: Stops observation of resources under an object instance of a device
      x-soracom-cli:
        - devices unobserve-resources
  '/devices/{device_id}/{object}/{instance}/{resource}':
    get:
      produces:
        - application/json
      parameters:
        - description: Target device
          in: path
          name: device_id
          required: true
          type: string
        - description: Object ID
          in: path
          name: object
          required: true
          type: string
        - description: Instance ID
          in: path
          name: instance
          required: true
          type: string
        - description: Resource ID
          in: path
          name: resource
          required: true
          type: string
        - default: false
          description: Whether or not to add model information
          in: query
          name: model
          required: false
          type: boolean
      responses:
        '200':
          description: Resource
          schema:
            $ref: '#/definitions/ResourceInstance'
        '400':
          description: Resource is not readable
        '404':
          description: Resource is not found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Get the specified resource of a device
      operationId: readDeviceResource
      summary: Get the specified resource of a device
      x-soracom-cli:
        - devices get-resource
    put:
      consumes:
        - application/json
      parameters:
        - description: Target device
          in: path
          name: device_id
          required: true
          type: string
        - description: Object ID
          in: path
          name: object
          required: true
          type: string
        - description: Instance ID
          in: path
          name: instance
          required: true
          type: string
        - description: Resource ID
          in: path
          name: resource
          required: true
          type: string
        - description: >-
            Value(s) to write to the resource. This value accepts LwM2M basic
            data types. You have to use the property name `values` (instead of
            `value`) with an array value if the resource model is multiple-mode.
          in: body
          name: body
          required: true
          schema:
            properties:
              value: {}
            type: object
      responses:
        '202':
          description: Updating resource is accepted
        '400':
          description: >-
            Specified Resource does not support write (Including case of
            connection error such as offline device)
        '404':
          description: Resource is not found
        '500':
          description: >-
            Error response from the device. (It includes the case where the
            LwM2M response message is error from the device, and the error
            message from the device is included in the response 'message'.)
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Write value to a resource of a device
      operationId: writeDeviceResource
      summary: Write value to a resource of a device
      x-soracom-cli:
        - devices put-resource
  '/devices/{device_id}/{object}/{instance}/{resource}/execute':
    post:
      consumes:
        - application/json
      parameters:
        - description: Target device
          in: path
          name: device_id
          required: true
          type: string
        - description: Object ID
          in: path
          name: object
          required: true
          type: string
        - description: Instance ID
          in: path
          name: instance
          required: true
          type: string
        - description: Resource ID
          in: path
          name: resource
          required: true
          type: string
        - description: Argument string when executing the resource
          in: body
          name: body
          schema:
            properties:
              value:
                type: string
            type: object
      responses:
        '202':
          description: Execution request is accepted
        '400':
          description: Resource is not executable
        '404':
          description: Resource is not found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Executes a resource of a device
      operationId: executeDeviceResource
      summary: Executes a resource of a device
      x-soracom-cli:
        - devices execute-resource
  '/devices/{device_id}/{object}/{instance}/{resource}/observe':
    post:
      parameters:
        - description: Target device
          in: path
          name: device_id
          required: true
          type: string
        - description: Object ID
          in: path
          name: object
          required: true
          type: string
        - description: Instance ID
          in: path
          name: instance
          required: true
          type: string
        - description: Resource ID
          in: path
          name: resource
          required: true
          type: string
        - default: false
          description: Whether or not to add model information
          in: query
          name: model
          required: false
          type: boolean
      responses:
        '202':
          description: Observation started.
        '400':
          description: Resource is not readable
        '404':
          description: Resource is not found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Triggers observation of the specified resource of a device
      operationId: observeDeviceResource
      summary: Triggers observation of the specified resource of a device
      x-soracom-cli:
        - devices observe-resource
  '/devices/{device_id}/{object}/{instance}/{resource}/unobserve':
    post:
      parameters:
        - description: Target device
          in: path
          name: device_id
          required: true
          type: string
        - description: Object ID
          in: path
          name: object
          required: true
          type: string
        - description: Instance ID
          in: path
          name: instance
          required: true
          type: string
        - description: Resource ID
          in: path
          name: resource
          required: true
          type: string
      responses:
        '204':
          description: Observation cancelled
        '404':
          description: Resource is not found
      security:
        - api_key: []
          api_token: []
      tags:
        - Device
      description: Stops observation of a resource of a device
      operationId: unobserveDeviceResource
      summary: Stops observation of a resource of a device
      x-soracom-cli:
        - devices unobserve-resource
  /diagnostics:
    post:
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DiagnosticRequest'
      responses:
        '201':
          description: Successfully accepted a diagnostic request.
          schema:
            items:
              $ref: '#/definitions/DiagnosticResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Diagnostic
      description: Send a diagnostic request.
      operationId: sendDiagnosticRequest
      summary: Send diagnostic request
      x-soracom-cli:
        - diagnostics send-request
  '/diagnostics/{diagnostic_id}':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: The identifier of diagnostic request.
          in: path
          name: diagnostic_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/DiagnosticResponse'
        '404':
          description: The specified diagnostic_id is not found.
      security:
        - api_key: []
          api_token: []
      tags:
        - Diagnostic
      description: Returns a diagnostic.
      operationId: getDiagnostic
      summary: Get diagnostic
      x-soracom-cli:
        - diagnostics get
  /event_handlers:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: target
          enum:
            - operator
            - imsi
            - sim
            - group
          in: query
          name: target
          required: false
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/EventHandlerModel'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - EventHandler
      description: Returns a list of event handlers.
      operationId: listEventHandlers
      summary: List Event Handlers.
      x-soracom-cli:
        - event-handlers list
    post:
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: event handler settings
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateEventHandlerRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/EventHandlerModel'
      security:
        - api_key: []
          api_token: []
      tags:
        - EventHandler
      description: >-
        Creates a new event handler. Please see also
        https://developers.soracom.io/en/docs/air/event-handler/
      operationId: createEventHandler
      summary: Create Event Handler.
      x-soracom-cli:
        - event-handlers create
  '/event_handlers/subscribers/{imsi}':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: imsi
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/EventHandlerModel'
            type: array
        '404':
          description: not found
      security:
        - api_key: []
          api_token: []
      tags:
        - EventHandler
      description: Returns a list of event handlers related to the specified IMSI.
      operationId: listEventHandlersBySubscriber
      summary: List Event Handlers related to Subscriber.
      x-soracom-cli:
        - event-handlers list-for-subscriber
  '/event_handlers/{handler_id}':
    delete:
      parameters:
        - description: handler ID
          in: path
          name: handler_id
          required: true
          type: string
      responses:
        '204':
          description: OK.
        '404':
          description: EventHandler not found.
      security:
        - api_key: []
          api_token: []
      tags:
        - EventHandler
      description: Deletes the specified event handler.
      operationId: deleteEventHandler
      summary: Delete Event Handler.
      x-soracom-cli:
        - event-handlers delete
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: handler ID
          in: path
          name: handler_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/EventHandlerModel'
        '404':
          description: Handler not found.
      security:
        - api_key: []
          api_token: []
      tags:
        - EventHandler
      description: Returns information about the specified event handler.
      operationId: getEventHandler
      summary: Get Event Handler.
      x-soracom-cli:
        - event-handlers get
    put:
      consumes:
        - application/json
      parameters:
        - description: handler ID
          in: path
          name: handler_id
          required: true
          type: string
        - description: event handler settings
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateEventHandlerRequest'
      responses:
        '200':
          description: OK.
        '400':
          description: Invalid handlerId.
      security:
        - api_key: []
          api_token: []
      tags:
        - EventHandler
      description: >-
        Updates the specified event handler. Please see also
        https://developers.soracom.io/en/docs/air/event-handler/
      operationId: updateEventHandler
      summary: Update Event Handler.
      x-soracom-cli:
        - event-handlers update
  '/event_handlers/{handler_id}/subscribers/{imsi}/ignore':
    delete:
      parameters:
        - description: imsi
          in: path
          name: imsi
          required: true
          type: string
        - description: handler_id
          in: path
          name: handler_id
          required: true
          type: string
      responses:
        '204':
          description: OK
        '404':
          description: not found
      security:
        - api_key: []
          api_token: []
      tags:
        - EventHandler
      description: >-
        Deletes the setting for ignoring the specified event handler of the
        specified IMSI.
      operationId: deleteIgnoreEventHandler
      summary: Delete Ignore Event Handler.
      x-soracom-cli:
        - event-handlers unignore
    post:
      parameters:
        - description: imsi
          in: path
          name: imsi
          required: true
          type: string
        - description: handler_id
          in: path
          name: handler_id
          required: true
          type: string
      responses:
        '200':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - EventHandler
      description: >-
        Adds a setting for ignoring the specified event handler of the specified
        IMSI.
      operationId: setIgnoreEventHandler
      summary: Ignore Event Handler.
      x-soracom-cli:
        - event-handlers ignore
  /files:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: Scope of the request
          enum:
            - private
            - public
          in: query
          name: scope
          required: true
          type: string
        - description: Prefix to match with file path
          in: query
          name: prefix
          required: true
          type: string
        - default: 10
          description: Num of entries
          in: query
          name: limit
          required: false
          type: string
        - description: >-
            The filePath of the last file entry retrieved on the current page.
            By specifying this parameter, you can continue to retrieve the list
            from the next file entry onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: >-
            List of file entries found with query parameters, which can be empty
            if the prefix does not match with any paths of file entries.
          schema:
            items:
              $ref: '#/definitions/FileEntry'
            type: array
        '404':
          description: The specified scope does not exist
      security:
        - api_key: []
          api_token: []
      tags:
        - FileEntry
      description: >-
        Returns a list of file entries which beginnings of their file paths are
        matched with the `prefix` query string in the ascending sorted UTF-8
        bytes order of their file paths. An empty list is returned if the prefix
        does not match with any paths of file entries.
      operationId: findFiles
      summary: Find files with prefix query parameter in the scope
      x-soracom-cli:
        - files find
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/files/exported/{exported_file_id}':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: file export id
          in: path
          name: exported_file_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetExportedFileResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Files
      description: >-
        Get an exported file. The `url` field in the response will contain a URL
        to download the exported file.
      operationId: getExportedFile
      summary: Get an exported file.
      x-soracom-cli:
        - files get-exported
  '/files/{scope}/{path}':
    delete:
      parameters:
        - default: private
          description: Scope of the request
          enum:
            - private
          in: path
          name: scope
          required: true
          type: string
        - description: Target path
          in: path
          name: path
          required: true
          type: string
      responses:
        '204':
          description: The specified file is successfully deleted
        '404':
          description: No such file
      security:
        - api_key: []
          api_token: []
      tags:
        - FileEntry
      description: >-
        Deletes the specified file in the scope. Only `private` scope is allowed
        for the operation.
      operationId: deleteFile
      summary: Delete specified file in the scope.
      x-soracom-cli:
        - files delete
    get:
      parameters:
        - default: private
          description: Scope of the request
          enum:
            - private
            - public
          in: path
          name: scope
          required: true
          type: string
        - description: Target path
          in: path
          name: path
          required: true
          type: string
      responses:
        '302':
          description: Client is redirected to the link to download the file.
        '404':
          description: No such file
      security:
        - api_key: []
          api_token: []
      tags:
        - FileEntry
      description: >-
        Redirects the client to URL for the link to download the file specified
        by the scope and the path. By issuing HTTP GET request to the link
        returned in the response, the client is able to download the file.
      operationId: getFile
      summary: Download file specified by the path and the scope
      x-soracom-cli:
        - files get
    head:
      produces:
        - application/json
      parameters:
        - default: private
          description: Scope of the request
          enum:
            - private
            - public
          in: path
          name: scope
          required: true
          type: string
        - description: Target path
          in: path
          name: path
          required: true
          type: string
      responses:
        '200':
          description: Metadata of the file
          schema:
            $ref: '#/definitions/FileEntry'
        '404':
          description: No such file
      security:
        - api_key: []
          api_token: []
      tags:
        - FileEntry
      description: Gets metadata of the file specified by the path and the scope.
      operationId: getFileMetadata
      summary: Get the metadata of the file specified by the path and the scope
      x-soracom-cli:
        - files get-metadata
    put:
      consumes: []
      parameters:
        - default: private
          description: Scope of the request
          enum:
            - private
          in: path
          name: scope
          required: true
          type: string
        - description: Target path
          in: path
          name: path
          required: true
          type: string
        - description: Content type of the file to upload
          in: header
          name: content-type
          type: string
        - description: Content of the file to upload
          in: body
          name: body
          required: true
          schema:
            format: binary
            type: string
      responses:
        '200':
          description: File is successfully updated with the content
        '201':
          description: File is successfully created
      security:
        - api_key: []
          api_token: []
      tags:
        - FileEntry
      description: >-
        Uploads the file to the specified path in the scope. Only `private`
        scope is allowed for the operation.
      operationId: putFile
      summary: Upload file to the path in the scope.
      x-soracom-cli:
        - files put
  '/files/{scope}/{path}/':
    delete:
      parameters:
        - default: private
          description: Scope of the request
          enum:
            - private
          in: path
          name: scope
          required: true
          type: string
        - description: Target directory path
          in: path
          name: path
          required: true
          type: string
      responses:
        '204':
          description: The specified directory is successfully deleted
        '400':
          description: The specified directory is not empty
        '404':
          description: No such directory
      security:
        - api_key: []
          api_token: []
      tags:
        - FileEntry
      description: >-
        Deletes the specified directory in the scope. Only `private` scope is
        allowed for the operation.
      operationId: deleteDirectory
      summary: Delete specified directory in the scope.
      x-soracom-cli:
        - files delete-directory
    get:
      produces:
        - application/json
      parameters:
        - default: private
          description: Scope of the request
          enum:
            - private
            - public
          in: path
          name: scope
          required: true
          type: string
        - default: /
          description: Target path
          in: path
          name: path
          required: true
          type: string
        - default: 10
          description: Num of entries
          in: query
          name: limit
          required: false
          type: string
        - description: >-
            The filename  of the last file entry retrieved on the current page.
            By specifying this parameter, you can continue to retrieve the list
            from the next file entry onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of file entries.
          schema:
            items:
              $ref: '#/definitions/FileEntry'
            type: array
        '404':
          description: No such directory
      security:
        - api_key: []
          api_token: []
      tags:
        - FileEntry
      description: >-
        Returns a list of file entries under the path in the scope. This
        operation works only for directories and an error will be retrurned if
        the file entry corresponds to the given path is not a directory. If the
        total number of entries does not fit in one page, a URL for accessing
        the next page is returned in the 'Link' header of the response.
      operationId: listFiles
      summary: List files and directories on the path in the scope
      x-soracom-cli:
        - files list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /gadgets:
    get:
      produces:
        - application/json
      parameters:
        - description: Product ID for filtering the search.
          in: query
          name: product_id
          required: false
          type: string
        - description: Tag name for filtering the search (exact match).
          in: query
          name: tag_name
          required: false
          type: string
        - description: >-
            Tag search string for filtering the search. Required when `tag_name`
            has been specified.
          in: query
          name: tag_value
          required: false
          type: string
        - default: exact
          description: Tag match mode.
          enum:
            - exact
            - prefix
          in: query
          name: tag_value_match_mode
          required: false
          type: string
        - description: Maximum number of gadgets to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The ID ({product_id}/{serial_number}) of the last gadget retrieved
            on the current page. By specifying this parameter, you can continue
            to retrieve the list from the next device onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of Gadgets.
          schema:
            items:
              $ref: '#/definitions/Gadget'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Gadget
      description: >-
        Returns a list of gadgets that match certain criteria. If the total
        number of gadgets does not fit in one page, a URL for accessing the next
        page is returned in the 'Link' header of the response.
      operationId: listGadgets
      summary: List gadgets.
      x-soracom-cli:
        - gadgets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/gadgets/{product_id}/{serial_number}':
    get:
      produces:
        - application/json
      parameters:
        - description: Product ID of the target gadget.
          in: path
          name: product_id
          required: true
          type: string
        - description: Serial Number of the target gadget.
          in: path
          name: serial_number
          required: true
          type: string
      responses:
        '200':
          description: The gadget's detailed information.
          schema:
            $ref: '#/definitions/Gadget'
        '404':
          description: The specified gadget does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Gadget
      description: Returns information about the specified gadget.
      operationId: getGadget
      summary: Get gadget.
      x-soracom-cli:
        - gadgets get
  '/gadgets/{product_id}/{serial_number}/disable_termination':
    post:
      produces:
        - application/json
      parameters:
        - description: Product ID of the target gadget.
          in: path
          name: product_id
          required: true
          type: string
        - description: Serial Number of the target gadget.
          in: path
          name: serial_number
          required: true
          type: string
      responses:
        '200':
          description: The gadget's detailed information after the update.
          schema:
            $ref: '#/definitions/Gadget'
        '404':
          description: The specified gadget does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Gadget
      description: Disables termination of specified gadget.
      operationId: disableTerminationOnGadget
      summary: Disable Termination of gadget.
      x-soracom-cli:
        - gadgets disable-termination
  '/gadgets/{product_id}/{serial_number}/enable_termination':
    post:
      produces:
        - application/json
      parameters:
        - description: Product ID of the target gadget.
          in: path
          name: product_id
          required: true
          type: string
        - description: Serial Number of the target gadget.
          in: path
          name: serial_number
          required: true
          type: string
      responses:
        '200':
          description: The gadget's detailed information after the update.
          schema:
            $ref: '#/definitions/Gadget'
        '404':
          description: The specified gadget does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Gadget
      description: Enables termination of specified gadget.
      operationId: enableTerminationOnGadget
      summary: Enable Termination of gadget.
      x-soracom-cli:
        - gadgets enable-termination
  '/gadgets/{product_id}/{serial_number}/register':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Product ID of the target gadget.
          in: path
          name: product_id
          required: true
          type: string
        - description: Serial Number of the target gadget.
          in: path
          name: serial_number
          required: true
          type: string
        - description: Gadget registration request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GadgetRegistrationRequest'
      responses:
        '200':
          description: Gadget successfully registered
          schema:
            $ref: '#/definitions/Gadget'
        '404':
          description: No such resource found.
      security:
        - api_key: []
          api_token: []
      tags:
        - Gadget
      description: Registers a gadget
      operationId: registerGadget
      summary: Register a gadget.
      x-soracom-cli:
        - gadgets register
  '/gadgets/{product_id}/{serial_number}/set_group':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Product ID of the target gadget.
          in: path
          name: product_id
          required: true
          type: string
        - description: Serial Number of the target gadget.
          in: path
          name: serial_number
          required: true
          type: string
        - description: Group (may include ID only).
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '200':
          description: The gadget's detailed information after the update.
          schema:
            $ref: '#/definitions/Gadget'
        '404':
          description: The specified gadget does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Gadget
      description: Sets or overwrites a group for the specified gadget.
      operationId: setGadgetGroup
      summary: Set Group of gadget.
      x-soracom-cli:
        - gadgets set-group
  '/gadgets/{product_id}/{serial_number}/tags':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Product ID of the target gadget.
          in: path
          name: product_id
          required: true
          type: string
        - description: Serial Number of the target gadget.
          in: path
          name: serial_number
          required: true
          type: string
        - description: Array of tags to be inserted/updated.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/TagUpdateRequest'
            type: array
      responses:
        '200':
          description: The gadget's detailed information after the update.
          schema:
            $ref: '#/definitions/Gadget'
        '404':
          description: The specified gadget does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Gadget
      description: Inserts/updates tags for the specified gadget.
      operationId: putGadgetTags
      summary: Bulk Insert or Update gadget Tags.
      x-soracom-cli:
        - gadgets put-tags
  '/gadgets/{product_id}/{serial_number}/tags/{tag_name}':
    delete:
      parameters:
        - description: Product ID of the target gadget.
          in: path
          name: product_id
          required: true
          type: string
        - description: Serial Number of the target gadget.
          in: path
          name: serial_number
          required: true
          type: string
        - description: >-
            Tag name to be deleted. (This will be part of a URL path, so it
            needs to be percent-encoded. In JavaScript, specify the name after
            it has been encoded using encodeURIComponent().)
          in: path
          name: tag_name
          required: true
          type: string
      responses:
        '204':
          description: Deletion of specified tag complete.
        '404':
          description: The specified gadget or the tag does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Gadget
      description: Deletes a tag from the specified gadget.
      operationId: deleteGadgetTag
      summary: Delete gadget Tag.
      x-sam-operationId: deleteTag
      x-soracom-cli:
        - gadgets delete-tag
  '/gadgets/{product_id}/{serial_number}/terminate':
    post:
      produces:
        - application/json
      parameters:
        - description: Product ID of the target gadget.
          in: path
          name: product_id
          required: true
          type: string
        - description: Serial Number of the target gadget.
          in: path
          name: serial_number
          required: true
          type: string
      responses:
        '200':
          description: The gadget's detailed information after the update.
          schema:
            $ref: '#/definitions/Gadget'
        '404':
          description: The specified gadget does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Gadget
      description: Terminates the specified gadget
      operationId: terminateGadget
      summary: Terminate gadget.
      x-soracom-cli:
        - gadgets terminate
  '/gadgets/{product_id}/{serial_number}/unset_group':
    post:
      produces:
        - application/json
      parameters:
        - description: Product ID of the target gadget.
          in: path
          name: product_id
          required: true
          type: string
        - description: Serial Number of the target gadget.
          in: path
          name: serial_number
          required: true
          type: string
      responses:
        '200':
          description: The gadget's detailed information after the update.
          schema:
            $ref: '#/definitions/Gadget'
        '404':
          description: >-
            The specified gadget does not exist or the gadget does not belong to
            a group.
      security:
        - api_key: []
          api_token: []
      tags:
        - Gadget
      description: Removes the group configuration from the specified gadget.
      operationId: unsetGadgetGroup
      summary: Unset Group of gadget.
      x-soracom-cli:
        - gadgets unset-group
  /groups:
    get:
      produces:
        - application/json
      parameters:
        - description: >-
            Tag name of the group. Filters through all groups that exactly match
            the tag name. When tag_name is specified, tag_value is required.
          in: query
          name: tag_name
          required: false
          type: string
        - description: Tag value of the groups.
          in: query
          name: tag_value
          required: false
          type: string
        - default: exact
          description: Tag match mode.
          enum:
            - exact
            - prefix
          in: query
          name: tag_value_match_mode
          required: false
          type: string
        - description: Maximum number of results per response page.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The last Group ID retrieved on the current page. By specifying this
            parameter, you can continue to retrieve the list from the next group
            onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of groups.
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Group
      description: Returns a list of groups.
      operationId: listGroups
      summary: List Groups.
      x-soracom-cli:
        - groups list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Tags for group to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateGroupRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Group'
      security:
        - api_key: []
          api_token: []
      tags:
        - Group
      description: Create a new group.
      operationId: createGroup
      summary: Create Group.
      x-soracom-cli:
        - groups create
  '/groups/{group_id}':
    delete:
      parameters:
        - description: Target group ID.
          in: path
          name: group_id
          required: true
          type: string
      responses:
        '204':
          description: Deletion of specified group complete.
        '404':
          description: The specified group does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Group
      description: Deletes the specified group by group ID
      operationId: deleteGroup
      summary: Delete Group.
      x-soracom-cli:
        - groups delete
    get:
      produces:
        - application/json
      parameters:
        - description: Target group ID.
          in: path
          name: group_id
          required: true
          type: string
      responses:
        '200':
          description: The specified group.
          schema:
            $ref: '#/definitions/Group'
        '404':
          description: The specified group does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Group
      description: Returns the group specified by the group ID.
      operationId: getGroup
      summary: Get Group.
      x-soracom-cli:
        - groups get
  '/groups/{group_id}/configuration/{namespace}':
    delete:
      parameters:
        - description: Target group.
          in: path
          name: group_id
          required: true
          type: string
        - description: Namespace to be deleted.
          enum:
            - SoracomAir
            - SoracomBeam
            - SoracomEndorse
            - SoracomFunk
            - SoracomFunnel
            - SoracomHarvest
            - SoracomHarvestFiles
            - SoracomKrypton
            - UnifiedEndpoint
          in: path
          name: namespace
          required: true
          type: string
      responses:
        '204':
          description: The namespace was successfully deleted.
        '400':
          description: The specified namespace does not exist.
        '404':
          description: The specified group does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Group
      description: Delete a namespace for the specified group.
      operationId: deleteConfigurationNamespace
      summary: Delete Group Configuration Namespace.
      x-soracom-cli:
        - groups delete-config-namespace
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Target group.
          in: path
          name: group_id
          required: true
          type: string
        - description: Target configuration.
          enum:
            - SoracomAir
            - SoracomBeam
            - SoracomEndorse
            - SoracomFunk
            - SoracomFunnel
            - SoracomHarvest
            - SoracomHarvestFiles
            - SoracomKrypton
            - SoracomOrbit
            - UnifiedEndpoint
          in: path
          name: namespace
          required: true
          type: string
        - description: Array of values for target object to be updated.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/GroupConfigurationUpdateRequest'
            type: array
      responses:
        '200':
          description: The group after the update.
          schema:
            $ref: '#/definitions/Group'
        '404':
          description: The specified group does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Group
      description: Adds/updates parameters for the specified group.
      operationId: putConfigurationParameters
      summary: Update Group Configuration Parameters.
      x-soracom-cli:
        - groups put-config
  '/groups/{group_id}/configuration/{namespace}/{name}':
    delete:
      parameters:
        - description: Target group.
          in: path
          name: group_id
          required: true
          type: string
        - description: Namespace of target parameters.
          enum:
            - SoracomAir
            - SoracomBeam
            - SoracomEndorse
            - SoracomFunk
            - SoracomFunnel
            - SoracomHarvest
            - SoracomHarvestFiles
            - SoracomKrypton
            - UnifiedEndpoint
          in: path
          name: namespace
          required: true
          type: string
        - description: >-
            Parameter name to be deleted. (This will be part of a URL path, so
            it needs to be percent-encoded. In JavaScript, specify the name
            after it has been encoded using encodeURIComponent().)
          in: path
          name: name
          required: true
          type: string
      responses:
        '204':
          description: The parameter was successfully deleted.
        '404':
          description: The specified group does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Group
      description: Delete parameters for the specified group.
      operationId: deleteConfigurationParameter
      summary: Delete Group Configuration Parameters.
      x-soracom-cli:
        - groups delete-config
  '/groups/{group_id}/subscribers':
    get:
      produces:
        - application/json
      parameters:
        - description: Target group ID.
          in: path
          name: group_id
          required: true
          type: string
        - description: Maximum number of results per response page.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The IMSI of the last subscriber retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next subscriber onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: Target group ID
          schema:
            $ref: '#/definitions/Group'
        '404':
          description: The specified group does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Group
      description: >-
        Returns a list of subscribers that belong to the specified group by
        group ID.
      operationId: listSubscribersInGroup
      summary: List Subscribers in a group.
      x-sam-operationId: listSubscribers
      x-soracom-cli:
        - groups list-subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/groups/{group_id}/tags':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Target group ID.
          in: path
          name: group_id
          required: true
          type: string
        - description: Array of values for tags to be updated.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/TagUpdateRequest'
            type: array
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Group
      description: Adds/updates tags of specified configuration group.
      operationId: putGroupTags
      summary: Update Group Tags.
      x-sam-operationId: putTags
      x-soracom-cli:
        - groups put-tags
  '/groups/{group_id}/tags/{tag_name}':
    delete:
      parameters:
        - description: Target group ID.
          in: path
          name: group_id
          required: true
          type: string
        - description: >-
            Tag name to be deleted. (This will be part of a URL path, so it
            needs to be percent-encoded. In JavaScript, specify the name after
            it has been encoded using encodeURIComponent().)
          in: path
          name: tag_name
          required: true
          type: string
      responses:
        '204':
          description: Tag deletion complete.
        '404':
          description: The specified subscriber or the tag does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Group
      description: Deletes tag from the specified group.
      operationId: deleteGroupTag
      summary: Delete Group Tag.
      x-sam-operationId: deleteTag
      x-soracom-cli:
        - groups delete-tag
  /lagoon/dashboards/permissions:
    get:
      produces:
        - application/json
      parameters:
        - description: >-
            If the value is true, a request will be issued to Lagoon Classic.
            This is only valid if both Lagoon and Lagoon Classic are enabled.
          in: query
          name: classic
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/LagoonDashboardPermissionsResponse'
            type: array
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - Lagoon
      description: List permissions for all SORACOM Lagoon dashboards
      operationId: listLagoonDashboardsPermissions
      summary: List permissions for all SORACOM Lagoon dashboards
      x-soracom-cli:
        - lagoon dashboards list-permissions
  '/lagoon/dashboards/{dashboard_id}/permissions':
    put:
      consumes:
        - application/json
      parameters:
        - description: dashboard_id
          format: int64
          in: path
          name: dashboard_id
          required: true
          type: integer
        - description: >-
            If the value is true, a request will be issued to Lagoon Classic.
            This is only valid if both Lagoon and Lagoon Classic are enabled.
          in: query
          name: classic
          required: false
          type: boolean
        - description: req
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LagoonDashboardPermissionsUpdatingRequest'
      responses:
        '204':
          description: Updated
        '400':
          description: Bad request
        '403':
          description: Unauthorized operation
      tags:
        - Lagoon
      description: Update permissions for a dashboard of SORACOM Lagoon
      operationId: updateLagoonDashboardPermissions
      summary: Update permissions for a dashboard of SORACOM Lagoon
      x-soracom-cli:
        - lagoon dashboards update-permissions
  '/lagoon/dashboards/{dashboard_id}/permissions/init':
    post:
      parameters:
        - description: dashboard_id
          format: int64
          in: path
          name: dashboard_id
          required: true
          type: integer
        - description: >-
            If the value is true, a request will be issued to Lagoon Classic.
            This is only valid if both Lagoon and Lagoon Classic are enabled.
          in: query
          name: classic
          required: false
          type: boolean
      responses:
        '204':
          description: Updated
        '400':
          description: Bad request
        '403':
          description: Unauthorized operation
      tags:
        - Lagoon
      description: >-
        Update permissions to the initial state for a dashboard of SORACOM
        Lagoon
      operationId: initializeLagoonDashboardPermissions
      summary: >-
        Update permissions to the initial state for a dashboard of SORACOM
        Lagoon
      x-soracom-cli:
        - lagoon dashboards init-permissions
  /lagoon/image/link:
    get:
      produces:
        - application/json
      parameters:
        - description: >-
            If the value is true, a request will be issued to Lagoon Classic.
            This is only valid if both Lagoon and Lagoon Classic are enabled.
          in: query
          name: classic
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            type: string
        '400':
          description: Bad request
      tags:
        - Lagoon
      description: Get a custom icon image link of SORACOM Lagoon
      operationId: getImageLink
      summary: Get a custom icon image link of SORACOM Lagoon
      x-soracom-cli:
        - lagoon get-image-link
  /lagoon/license_packs:
    get:
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/LagoonLicensePackStatusResponse'
            type: array
        '400':
          description: Bad request
      tags:
        - Lagoon
      description: Get the status of active SORACOM Lagoon license packs
      operationId: listLagoonLicensePackStatus
      summary: Get the status of active SORACOM Lagoon license packs
      x-soracom-cli:
        - lagoon license-packs list-status
    put:
      consumes:
        - application/json
      parameters:
        - description: req
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LagoonLicensePacksUpdatingRequest'
      responses:
        '204':
          description: Updated
        '400':
          description: Bad request
        '404':
          description: Operator Not Found
      tags:
        - Lagoon
      description: >-
        Update the quantities for license packs of SORACOM Lagoon. This API is
        only allowed to operate by root account.
      operationId: updateLagoonLicensePack
      summary: Update the quantities for license packs of SORACOM Lagoon
      x-soracom-cli:
        - lagoon license-packs update
  /lagoon/migration:
    get:
      consumes:
        - application/json
      parameters:
        - description: req
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LagoonPlanChangingRequest'
      responses:
        '200':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - Lagoon
      description: >-
        Get the version migration information for SORACOM Lagoon. Only the root
        account can operate this.
      operationId: getLagoonMigrationInfo
      summary: Get the version migration information for SORACOM Lagoon
      x-soracom-cli:
        - lagoon migration get-info
    post:
      consumes:
        - application/json
      parameters:
        - description: req
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LagoonMigrationFromClassicRequest'
      responses:
        '200':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - Lagoon
      description: Migrate SORACOM Lagoon version. Only the root account can operate this.
      operationId: migrateLagoon
      summary: Migrate SORACOM Lagoon version
      x-soracom-cli:
        - lagoon migration migrate
  /lagoon/plan:
    put:
      consumes:
        - application/json
      parameters:
        - description: req
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LagoonPlanChangingRequest'
      responses:
        '204':
          description: Updated
        '400':
          description: Bad request
        '404':
          description: Operator Not Found
      tags:
        - Lagoon
      description: >-
        Update the plan of SORACOM Lagoon. This API is only allowed to operate
        by root account.
      operationId: updateLagoonPlan
      summary: Update the plan of SORACOM Lagoon
      x-soracom-cli:
        - lagoon updated-plan
  /lagoon/register:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LagoonRegistrationRequest'
      responses:
        '201':
          description: Registered
          schema:
            $ref: '#/definitions/LagoonRegistrationResponse'
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - Lagoon
      description: >-
        Register (activate) SORACOM Lagoon. This API is only allowed to operate
        by root account.
      operationId: registerLagoon
      summary: Register (activate) SORACOM Lagoon
      x-soracom-cli:
        - lagoon register
  /lagoon/terminate:
    post:
      parameters: []
      responses:
        '204':
          description: Terminated
        '400':
          description: Bad request
        '404':
          description: Operator not found
      security:
        - api_key: []
          api_token: []
      tags:
        - Lagoon
      description: Terminate (deactivate) SORACOM Lagoon.
      operationId: terminateLagoon
      summary: Terminate (deactivate) SORACOM Lagoon
      x-soracom-cli:
        - lagoon terminate
  /lagoon/users:
    get:
      produces:
        - application/json
      parameters:
        - description: >-
            If the value is true, a request will be issued to Lagoon Classic.
            This is only valid if both Lagoon and Lagoon Classic are enabled.
          in: query
          name: classic
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/LagoonUser'
            type: array
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - Lagoon
      description: List SORACOM Lagoon users that belong to operator.
      operationId: listLagoonUsers
      summary: List SORACOM Lagoon users that belong to operator
      x-soracom-cli:
        - lagoon list-users
        - lagoon users list
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LagoonUserCreationRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/LagoonUserCreationResponse'
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - Lagoon
      description: Create a SORACOM Lagoon user.
      operationId: createLagoonUser
      summary: Create a SORACOM Lagoon user
      x-soracom-cli:
        - lagoon create-user
        - lagoon users create
  '/lagoon/users/{lagoon_user_id}':
    delete:
      parameters:
        - description: Target ID of the lagoon user
          in: path
          name: lagoon_user_id
          required: true
          type: integer
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - Lagoon
      description: Delete a SORACOM Lagoon user.
      operationId: deleteLagoonUser
      summary: Delete a SORACOM Lagoon user
      x-soracom-cli:
        - lagoon delete-user
        - lagoon users delete
  '/lagoon/users/{lagoon_user_id}/email':
    put:
      consumes:
        - application/json
      parameters:
        - description: Target ID of the lagoon user
          in: path
          name: lagoon_user_id
          required: true
          type: integer
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LagoonUserEmailUpdatingRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - Lagoon
      description: Update email address of a SORACOM Lagoon user.
      operationId: updateLagoonUserEmail
      summary: Update email address of a SORACOM Lagoon user
      x-soracom-cli:
        - lagoon update-user-email
        - lagoon users update-email
  '/lagoon/users/{lagoon_user_id}/password':
    put:
      consumes:
        - application/json
      parameters:
        - description: Target ID of the lagoon user
          in: path
          name: lagoon_user_id
          required: true
          type: integer
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LagoonUserPasswordUpdatingRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - Lagoon
      description: Update password of a SORACOM Lagoon user.
      operationId: updateLagoonUserPassword
      summary: Update password of a SORACOM Lagoon user
      x-soracom-cli:
        - lagoon update-user-password
        - lagoon users update-password
  '/lagoon/users/{lagoon_user_id}/permission':
    put:
      consumes:
        - application/json
      parameters:
        - description: Target ID of the lagoon user
          in: path
          name: lagoon_user_id
          required: true
          type: integer
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LagoonUserPermissionUpdatingRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - Lagoon
      description: Update permission of a SORACOM Lagoon user.
      operationId: updateLagoonUserPermission
      summary: Update permission of a SORACOM Lagoon user
      x-soracom-cli:
        - lagoon update-user-permission
        - lagoon users update-permission
  /logs:
    get:
      produces:
        - application/json
      parameters:
        - description: Type of the target resource to query log entries.
          enum:
            - Subscriber
            - EventHandler
            - VirtualPrivateGateway
          in: query
          name: resource_type
          required: false
          type: string
        - description: Identity of the target resource to query log entries.
          in: query
          name: resource_id
          required: false
          type: string
        - description: Service name to filter log entries.
          enum:
            - Air
            - Beam
            - Canal
            - Direct
            - Door
            - Endorse
            - Funnel
            - Gate
          in: query
          name: service
          required: false
          type: string
        - description: Start time for the log search range (unixtime).
          in: query
          name: from
          required: false
          type: integer
        - description: End time for the log search range (unixtime).
          in: query
          name: to
          required: false
          type: integer
        - description: Maximum number of log entries to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The value of `time` in the last log entry retrieved in the previous
            page. By specifying this parameter, you can continue to retrieve the
            list from the next page onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of log entries.
          schema:
            items:
              $ref: '#/definitions/LogEntry'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Log
      description: >-
        Returns a list of log entries that match certain criteria. If the total
        number of entries does not fit in one page, a URL for accessing the next
        page is returned in the 'Link' header of the response.
      operationId: getLogs
      summary: Get Logs.
      x-soracom-cli:
        - logs get
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /lora_devices:
    get:
      produces:
        - application/json
      parameters:
        - description: Tag name for filtering the search (exact match).
          in: query
          name: tag_name
          required: false
          type: string
        - description: >-
            Tag search string for filtering the search. Required when `tag_name`
            has been specified.
          in: query
          name: tag_value
          required: false
          type: string
        - default: exact
          description: Tag match mode.
          enum:
            - exact
            - prefix
          in: query
          name: tag_value_match_mode
          required: false
          type: string
        - description: Maximum number of LoRa devices to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The device ID of the last device retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next device onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of LoRa devices.
          schema:
            items:
              $ref: '#/definitions/LoraDevice'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraDevice
      description: >-
        Returns a list of LoRa devices that match certain criteria. If the total
        number of LoRa devices does not fit in one page, a URL for accessing the
        next page is returned in the 'Link' header of the response.
      operationId: listLoraDevices
      summary: List LoRa devices.
      x-soracom-cli:
        - lora-devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/lora_devices/{device_id}':
    get:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target LoRa device.
          in: path
          name: device_id
          required: true
          type: string
      responses:
        '200':
          description: The LoRa device's detailed information.
          schema:
            $ref: '#/definitions/LoraDevice'
        '404':
          description: The specified LoRa device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraDevice
      description: Returns information about the specified LoRa device.
      operationId: getLoraDevice
      summary: Get LoRa device.
      x-soracom-cli:
        - lora-devices get
  '/lora_devices/{device_id}/data':
    get:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target subscriber that generated data entries.
          in: path
          name: device_id
          required: true
          type: string
        - description: >-
            Start time for the data entries search range (unixtime in
            milliseconds).
          in: query
          name: from
          required: false
          type: integer
        - description: >-
            End time for the data entries search range (unixtime in
            milliseconds).
          in: query
          name: to
          required: false
          type: integer
        - default: desc
          description: >-
            Sort order of the data entries. Either descending (latest data entry
            first) or ascending (oldest data entry first).
          enum:
            - desc
            - asc
          in: query
          name: sort
          required: false
          type: string
        - description: Maximum number of data entries to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The value of `time` in the last log entry retrieved in the previous
            page. By specifying this parameter, you can continue to retrieve the
            list from the next page onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of data entries.
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraDevice
      description: >-
        Returns a list of data entries sent from a LoRa device that match
        certain criteria. If the total number of entries does not fit in one
        page, a URL for accessing the next page is returned in the 'Link' header
        of the response.
      operationId: getDataFromLoraDevice
      summary: Get data sent from a LoRa device.
      x-soracom-cli:
        - lora-devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
        - application/json
      parameters:
        - description: ID of the recipient device.
          in: path
          name: device_id
          required: true
          type: string
        - description: >-
            Binary data encoded as a hexadecimal string. Maximum length of
            original binary data is 11 octets (22 characters when encoded as a
            hexadecimal string). The number of characters must be even. fPort
            MUST be equal to or greater than 0. 0 is used for the control plane
            and 1 or greater values should be used in general. It defaults to 2
            to avoid the issues of some devices from some vendors and all
            invalid values that can not be parsed fallback to 2.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LoraData'
      responses:
        '204':
          description: >-
            Data has been received and sent to the LoRa network server for the
            recipient device to retrieve.
        '400':
          description: The payload JSON data contains one or more invalid parameters.
        '404':
          description: No such device found.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraDevice
      description: >-
        Sends data to the specified LoRa device. The data is sent to the LoRa
        network server, to be sent out to the device using the next available
        slot. If another message destined for the same LoRa device ID is already
        waiting to be sent, the existing message will be discarded, and the new
        message will be sent instead.
      operationId: sendDataToLoraDevice
      summary: Send data to a LoRa device.
      x-soracom-cli:
        - lora-devices send-data
  '/lora_devices/{device_id}/disable_termination':
    post:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target LoRa device.
          in: path
          name: device_id
          required: true
          type: string
      responses:
        '200':
          description: The LoRa device's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraDevice'
        '404':
          description: The specified LoRa device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraDevice
      description: Disables termination of specified LoRa device.
      operationId: disableTerminationOnLoraDevice
      summary: Disable Termination of LoRa device.
      x-soracom-cli:
        - lora-devices disable-termination
  '/lora_devices/{device_id}/enable_termination':
    post:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target LoRa device.
          in: path
          name: device_id
          required: true
          type: string
      responses:
        '200':
          description: The LoRa device's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraDevice'
        '404':
          description: The specified LoRa device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraDevice
      description: Enables termination of specified LoRa device.
      operationId: enableTerminationOnLoraDevice
      summary: Enable Termination of LoRa device.
      x-soracom-cli:
        - lora-devices enable-termination
  '/lora_devices/{device_id}/register':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Device ID of the target LoRa device.
          in: path
          name: device_id
          required: true
          type: string
        - description: LoRa device
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegisterLoraDeviceRequest'
      responses:
        '201':
          description: LoRa device registration complete.
          schema:
            $ref: '#/definitions/LoraDevice'
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraDevice
      description: Registers a LoRa device.
      operationId: registerLoraDevice
      summary: Register LoRa device.
      x-soracom-cli:
        - lora-devices register
  '/lora_devices/{device_id}/set_group':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Device ID of the target LoRa device.
          in: path
          name: device_id
          required: true
          type: string
        - description: Group (may include ID only).
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '200':
          description: The LoRa device's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraDevice'
        '404':
          description: The specified LoRa device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraDevice
      description: Sets or overwrites a group for the specified LoRa device.
      operationId: setLoraDeviceGroup
      summary: Set Group of LoRa device.
      x-soracom-cli:
        - lora-devices set-group
  '/lora_devices/{device_id}/tags':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Device ID of the target LoRa device.
          in: path
          name: device_id
          required: true
          type: string
        - description: Array of tags to be inserted/updated.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/TagUpdateRequest'
            type: array
      responses:
        '200':
          description: The LoRa device's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraDevice'
        '404':
          description: The specified LoRa device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraDevice
      description: Inserts/updates tags for the specified LoRa device.
      operationId: putLoraDeviceTags
      summary: Bulk Insert or Update LoRa device Tags.
      x-soracom-cli:
        - lora-devices put-tags
  '/lora_devices/{device_id}/tags/{tag_name}':
    delete:
      parameters:
        - description: device ID of the target LoRa device.
          in: path
          name: device_id
          required: true
          type: string
        - description: >-
            Tag name to be deleted. (This will be part of a URL path, so it
            needs to be percent-encoded. In JavaScript, specify the name after
            it has been encoded using encodeURIComponent().)
          in: path
          name: tag_name
          required: true
          type: string
      responses:
        '204':
          description: Deletion of specified tag complete.
        '404':
          description: The specified LoRa device or the tag does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraDevice
      description: Deletes a tag from the specified LoRa device.
      operationId: deleteLoraDeviceTag
      summary: Delete LoRa device Tag.
      x-sam-operationId: deleteTag
      x-soracom-cli:
        - lora-devices delete-tag
  '/lora_devices/{device_id}/terminate':
    post:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target LoRa device.
          in: path
          name: device_id
          required: true
          type: string
      responses:
        '200':
          description: The LoRa device's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraDevice'
        '404':
          description: The specified LoRa device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraDevice
      description: Terminates the specified LoRa device
      operationId: terminateLoraDevice
      summary: Terminate LoRa device.
      x-soracom-cli:
        - lora-devices terminate
  '/lora_devices/{device_id}/unset_group':
    post:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target LoRa device.
          in: path
          name: device_id
          required: true
          type: string
      responses:
        '200':
          description: The LoRa device's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraDevice'
        '404':
          description: >-
            The specified LoRa device does not exist or the LoRa device does not
            belong to a group.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraDevice
      description: Removes the group configuration from the specified LoRa device.
      operationId: unsetLoraDeviceGroup
      summary: Unset Group of LoRa device.
      x-soracom-cli:
        - lora-devices unset-group
  /lora_gateways:
    get:
      produces:
        - application/json
      parameters:
        - description: Tag name for filtering the search (exact match).
          in: query
          name: tag_name
          required: false
          type: string
        - description: >-
            Tag search string for filtering the search. Required when `tag_name`
            has been specified.
          in: query
          name: tag_value
          required: false
          type: string
        - default: exact
          description: Tag match mode.
          enum:
            - exact
            - prefix
          in: query
          name: tag_value_match_mode
          required: false
          type: string
        - description: Maximum number of LoRa devices to retrieve.
          format: int32d
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The device ID of the last device retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next device onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of LoRa gateways.
          schema:
            items:
              $ref: '#/definitions/LoraGateway'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraGateway
      description: >-
        Returns a list of LoRa gateways that match certain criteria. If the
        total number of LoRa gateways does not fit in one page, a URL for
        accessing the next page is returned in the 'Link' header of the
        response.
      operationId: listLoraGateways
      summary: List LoRa Gateways.
      x-soracom-cli:
        - lora-gateways list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/lora_gateways/{gateway_id}':
    get:
      produces:
        - application/json
      parameters:
        - description: Gateway ID of the target LoRa gateway.
          in: path
          name: gateway_id
          required: true
          type: string
      responses:
        '200':
          description: The LoRa gateway's detailed information.
          schema:
            $ref: '#/definitions/LoraGateway'
        '404':
          description: The specified LoRa gateway does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraGateway
      description: Returns information about the specified LoRa gateway.
      operationId: getLoraGateway
      summary: Get LoRa gateway.
      x-soracom-cli:
        - lora-gateways get
  '/lora_gateways/{gateway_id}/disable_termination':
    post:
      produces:
        - application/json
      parameters:
        - description: ID of the target LoRa gateway.
          in: path
          name: gateway_id
          required: true
          type: string
      responses:
        '200':
          description: The LoRa gateway's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraGateway'
        '404':
          description: The specified LoRa gateway does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraGateway
      description: Disables termination of specified LoRa gateway.
      operationId: disableTerminationOnLoraGateway
      summary: Disable Termination of LoRa gateway.
      x-soracom-cli:
        - lora-gateways disable-termination
  '/lora_gateways/{gateway_id}/enable_termination':
    post:
      produces:
        - application/json
      parameters:
        - description: ID of the target LoRa gateway.
          in: path
          name: gateway_id
          required: true
          type: string
      responses:
        '200':
          description: The LoRa gateway's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraGateway'
        '404':
          description: The specified LoRa gateway does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraGateway
      description: Enables termination of specified LoRa gateway.
      operationId: enableTerminationOnLoraGateway
      summary: Enable Termination of LoRa gateway.
      x-soracom-cli:
        - lora-gateways enable-termination
  '/lora_gateways/{gateway_id}/set_network_set':
    post:
      consumes:
        - text/plain
      produces:
        - application/json
      parameters:
        - description: ID of the target LoRa gateway.
          in: path
          name: gateway_id
          required: true
          type: string
        - description: LoRa Network Set ID.
          in: body
          name: body
          schema:
            $ref: '#/definitions/SetNetworkSetRequest'
      responses:
        '200':
          description: The LoRa gateway's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraGateway'
        '404':
          description: The specified LoRa device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraGateway
      description: Sets or overwrites network set ID for the specified LoRa gateway.
      operationId: setLoraNetworkSet
      summary: Set Network Set ID of LoRa gateway.
      x-soracom-cli:
        - lora-gateways set-network-set
  '/lora_gateways/{gateway_id}/tags':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: ID of the target LoRa gateway.
          in: path
          name: gateway_id
          required: true
          type: string
        - description: Array of tags to be inserted/updated.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/TagUpdateRequest'
            type: array
      responses:
        '200':
          description: The LoRa gateway's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraGateway'
        '404':
          description: The specified LoRa gateway does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraGateway
      description: Inserts/updates tags for the specified LoRa gateway.
      operationId: putLoraGatewayTags
      summary: Bulk Insert or Update LoRa gateway Tags.
      x-soracom-cli:
        - lora-gateways put-tags
  '/lora_gateways/{gateway_id}/tags/{tag_name}':
    delete:
      parameters:
        - description: ID of the target LoRa gateway.
          in: path
          name: gateway_id
          required: true
          type: string
        - description: >-
            Name of tag to be deleted. (This will be part of a URL path, so it
            needs to be percent-encoded. In JavaScript, specify the name after
            it has been encoded using encodeURIComponent().)
          in: path
          name: tag_name
          required: true
          type: string
      responses:
        '204':
          description: Deletion of specified tag complete.
        '404':
          description: The specified LoRa gateway or the tag does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraGateway
      description: Deletes a tag from the specified LoRa gateway.
      operationId: deleteLoraGatewayTag
      summary: Delete LoRa gateway tag.
      x-soracom-cli:
        - lora-gateways delete-tag
  '/lora_gateways/{gateway_id}/terminate':
    post:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target LoRa gateway.
          in: path
          name: gateway_id
          required: true
          type: string
      responses:
        '200':
          description: The LoRa gateway's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraGateway'
        '404':
          description: The specified LoRa gateway does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraGateway
      description: Terminates the specified LoRa gateway
      operationId: terminateLoraGateway
      summary: Terminate LoRa gateway.
      x-soracom-cli:
        - lora-gateways terminate
  '/lora_gateways/{gateway_id}/unset_network_set':
    post:
      produces:
        - application/json
      parameters:
        - description: ID of the target LoRa gateway.
          in: path
          name: gateway_id
          required: true
          type: string
      responses:
        '200':
          description: The LoRa gateway's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraGateway'
        '404':
          description: The specified LoRa gateway does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraGateway
      description: Unset network set ID of the specified LoRa gateway.
      operationId: unsetLoraNetworkSet
      summary: Unset Network Set ID of LoRa gateway.
      x-soracom-cli:
        - lora-gateways unset-network-set
  /lora_network_sets:
    get:
      produces:
        - application/json
      parameters:
        - description: Tag name for filtering the search (exact match).
          in: query
          name: tag_name
          required: false
          type: string
        - description: >-
            Tag search string for filtering the search. Required when `tag_name`
            has been specified.
          in: query
          name: tag_value
          required: false
          type: string
        - default: exact
          description: Tag match mode.
          enum:
            - exact
            - prefix
          in: query
          name: tag_value_match_mode
          required: false
          type: string
        - description: Maximum number of LoRa devices to retrieve.
          format: int32d
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The ID of the last network set retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next device onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of LoRa network sets.
          schema:
            items:
              $ref: '#/definitions/LoraNetworkSet'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraNetworkSet
      description: >-
        Returns a list of LoRa network sets that match certain criteria. If the
        total number of LoRa network sets does not fit in one page, a URL for
        accessing the next page is returned in the 'Link' header of the
        response.
      operationId: listLoraNetworkSets
      summary: List LoRa Network Sets.
      x-soracom-cli:
        - lora-network-sets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Additional metadata such as tags for a LoRa network set to create.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LoraNetworkSet'
      responses:
        '201':
          description: A LoRa network set was created.
          schema:
            $ref: '#/definitions/LoraNetworkSet'
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraNetworkSet
      description: Creates a specified LoRa network set
      operationId: createLoraNetworkSet
      summary: Create a LoRa network set.
      x-soracom-cli:
        - lora-network-sets create
  '/lora_network_sets/{ns_id}':
    delete:
      parameters:
        - description: ID of the target LoRa network set.
          in: path
          name: ns_id
          required: true
          type: string
      responses:
        '204':
          description: Successfully deleted.
        '404':
          description: The specified LoRa network set does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraNetworkSet
      description: Deletes the specified LoRa network set
      operationId: deleteLoraNetworkSet
      summary: Delete LoRa network set.
      x-soracom-cli:
        - lora-network-sets delete
    get:
      produces:
        - application/json
      parameters:
        - description: ID of the target LoRa network set.
          in: path
          name: ns_id
          required: true
          type: string
      responses:
        '200':
          description: The LoRa network set's detailed information.
          schema:
            $ref: '#/definitions/LoraNetworkSet'
        '404':
          description: The specified LoRa network set does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraNetworkSet
      description: Returns information about the specified LoRa network set.
      operationId: getLoraNetworkSet
      summary: Get LoRa network set.
      x-soracom-cli:
        - lora-network-sets get
  '/lora_network_sets/{ns_id}/add_permission':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: ID of the target LoRa network set.
          in: path
          name: ns_id
          required: true
          type: string
        - description: ID of the operator to be added to the list of allowed operators.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePermissionRequest'
      responses:
        '200':
          description: Permission added to the network set.
          schema:
            $ref: '#/definitions/LoraNetworkSet'
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraNetworkSet
      description: Adds permission to allow another operator to use the network set.
      operationId: addPermissionToLoraNetworkSet
      summary: Adds permission to a LoRa network set.
      x-soracom-cli:
        - lora-network-sets add-permission
  '/lora_network_sets/{ns_id}/gateways':
    get:
      produces:
        - application/json
      parameters:
        - description: ID of the target LoRa network set.
          in: path
          name: ns_id
          required: true
          type: string
        - description: Maximum number of LoRa gateways to retrieve.
          format: int32d
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The ID of the last gateway retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next device onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of LoRa gateways.
          schema:
            items:
              $ref: '#/definitions/LoraGateway'
            type: array
        '404':
          description: The specified network set does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraNetworkSet
      description: >-
        Returns a list of LoRa gateways that belong to the specified network
        set. If the total number of LoRa gateways does not fit in one page, a
        URL for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: listGatewaysInLoraNetworkSet
      summary: List LoRa Gateways in a Network Set.
      x-soracom-cli:
        - lora-network-sets list-gateways
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/lora_network_sets/{ns_id}/revoke_permission':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: ID of the target LoRa network set.
          in: path
          name: ns_id
          required: true
          type: string
        - description: ID of the operator to be added to the list of allowed operators.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePermissionRequest'
      responses:
        '200':
          description: Permission revoked from the network set.
          schema:
            $ref: '#/definitions/LoraNetworkSet'
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraNetworkSet
      description: >-
        Revokes a permission and removes an operator from the list of allowed
        operators in the network set.
      operationId: revokePermissionFromLoraNetworkSet
      summary: Revokes a permission from a LoRa network set.
      x-soracom-cli:
        - lora-network-sets revoke-permission
  '/lora_network_sets/{ns_id}/tags':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: ID of the target LoRa network set.
          in: path
          name: ns_id
          required: true
          type: string
        - description: Array of tags to be inserted/updated.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/TagUpdateRequest'
            type: array
      responses:
        '200':
          description: The LoRa network set's detailed information after the update.
          schema:
            $ref: '#/definitions/LoraNetworkSet'
        '404':
          description: The specified LoRa network set does not exist.
      tags:
        - LoraNetworkSet
      description: Inserts/updates tags for the specified LoRa network set.
      operationId: putLoraNetworkSetTags
      summary: Bulk Insert or Update LoRa network set tags.
  '/lora_network_sets/{ns_id}/tags/{tag_name}':
    delete:
      parameters:
        - description: ID of the target LoRa network set.
          in: path
          name: ns_id
          required: true
          type: string
        - description: >-
            Name of tag to be deleted. (This will be part of a URL path, so it
            needs to be percent-encoded. In JavaScript, specify the name after
            it has been encoded using encodeURIComponent().)
          in: path
          name: tag_name
          required: true
          type: string
      responses:
        '204':
          description: Deletion of specified tag complete.
        '404':
          description: The specified LoRa network set or the tag does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - LoraNetworkSet
      description: Deletes a tag from the specified LoRa network set.
      operationId: deleteLoraNetworkSetTag
      summary: Delete LoRa network set tag.
      x-soracom-cli:
        - lora-network-sets delete-tag
  /operators:
    post:
      consumes:
        - application/json
      parameters:
        - description: 'email, password'
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegisterOperatorsRequest'
      responses:
        '201':
          description: Operator created.
        '400':
          description: >-
            The e-mail address is already registered or the password has an
            incorrect format.
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: >-
        Makes a request to create a new operator. An e-mail is sent to the
        e-mail address specified in the parameters, containing a one-time token
        for verifying the operator’s registration.
      operationId: createOperator
      summary: Create Operator.
      x-soracom-cli:
        - operator create
  /operators/add_email_token/issue:
    post:
      consumes:
        - application/json
      parameters:
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/IssueAddEmailTokenRequest'
      responses:
        '200':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - Email
      description: Sends an email with a one-time token for adding an e-mail address.
      operationId: issueAddEmailToken
      summary: Issue a token to add an email address
      x-soracom-cli:
        - emails issue-add-email-token
  /operators/add_email_token/verify:
    post:
      consumes:
        - application/json
      parameters:
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VerifyAddEmailTokenRequest'
      responses:
        '200':
          description: OK
      tags:
        - Email
      description: Verifies the token for adding email address.
      operationId: verifyAddEmailToken
      summary: Verify a token to add an email address
      x-soracom-cli:
        - emails verify-add-email-token
  /operators/mfa_revoke_token/issue:
    post:
      consumes:
        - application/json
      parameters:
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MFAIssueRevokingTokenRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '404':
          description: Operator not found
      tags:
        - Operator
      description: >-
        Issues a token to revoke operator's MFA. The issued token will be sent
        to the operator via email.
      operationId: issueMFARevokingToken
      summary: Issue Operator's MFA Revoke Token.
      x-soracom-cli:
        - operator issue-mfa-revoke-token
  /operators/mfa_revoke_token/verify:
    post:
      consumes:
        - application/json
      parameters:
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MFARevokingTokenVerifyRequest'
      responses:
        '200':
          description: Revoked
        '400':
          description: Bad request
        '403':
          description: Invalid username or password
      tags:
        - Operator
      description: >-
        Verifies the one-time token which is previously issued by calling
        `/operators/mfa_revoke_token/issue` API, operator's email address,
        password, and one of the backup codes. If verified, operator's MFA is
        going to be revoked.
      operationId: verifyMFARevokingToken
      summary: Verify Operator's MFA revoke token.
      x-soracom-cli:
        - operator verify-mfa-revoke-token
  /operators/verify:
    post:
      consumes:
        - application/json
      parameters:
        - description: token
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VerifyOperatorsRequest'
      responses:
        '200':
          description: Registration successful.
        '400':
          description: The one-time token is incorrect.
        '404':
          description: The one-time token has expired.
      tags:
        - Operator
      description: >-
        Verifies the operator's registration. Called by setting as parameter the
        one-time verification token received via e-mail.
      operationId: verifyOperator
      summary: Verify Operator.
      x-soracom-cli:
        - operator verify
  '/operators/{operator_id}':
    get:
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GetOperatorResponse'
        '400':
          description: Invalid Operator Id
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Returns information about the operator.
      operationId: getOperator
      summary: Get Operator.
      x-soracom-cli:
        - operator get
  '/operators/{operator_id}/auth_keys':
    get:
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/AuthKeyResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Returns the operator's AuthKey list.
      operationId: listOperatorAuthKeys
      summary: List Operator AuthKeys.
      x-soracom-cli:
        - operator auth-keys list
    post:
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '201':
          description: AuthKey was generated.
          schema:
            $ref: '#/definitions/GenerateOperatorsAuthKeyResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Generates an AuthKey for the operator.
      operationId: generateOperatorAuthKey
      summary: Generate Operator AuthKey.
      x-soracom-cli:
        - operator auth-keys generate
  '/operators/{operator_id}/auth_keys/{auth_key_id}':
    delete:
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: auth_key_id
          in: path
          name: auth_key_id
          required: true
          type: string
      responses:
        '204':
          description: AuthKey was deleted.
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Deletes an AuthKey from the operator.
      operationId: deleteOperatorAuthKey
      summary: Delete Operator AuthKey.
      x-soracom-cli:
        - operator auth-keys delete
  '/operators/{operator_id}/company_information':
    get:
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CompanyInformationModel'
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Gets the operator's company information.
      operationId: getCompanyInformation
      summary: Get company information.
      x-soracom-cli:
        - operator get-company-information
    post:
      consumes:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: model
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CompanyInformationModel'
      responses:
        '201':
          description: Created.
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Creates the operator's company information.
      operationId: createCompanyInformation
      summary: Create company information.
      x-soracom-cli:
        - operator create-company-information
    put:
      consumes:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: model
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CompanyInformationModel'
      responses:
        '200':
          description: OK.
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Updates the operator's company information.
      operationId: updateCompanyInformation
      summary: Update company information.
      x-soracom-cli:
        - operator update-company-information
  '/operators/{operator_id}/contracts':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: model
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ContractUpdatingRequest'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/ContractUpdatedResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Adds the operator's contract.
      operationId: addOperatorContract
      summary: Add Operator Contract.
      x-soracom-cli:
        - operator add-contract
  '/operators/{operator_id}/contracts/{contract_name}':
    delete:
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: contract_name
          in: path
          name: contract_name
          required: true
          type: string
      responses:
        '204':
          description: No Content.
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Deletes the operator's contract.
      operationId: deleteOperatorContract
      summary: Delete Operator Contract.
      x-soracom-cli:
        - operator delete-contract
  '/operators/{operator_id}/coverage_type/{coverage_type}':
    post:
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: coverage_type
          in: path
          name: coverage_type
          required: true
          type: string
      responses:
        '201':
          description: Created.
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Adds the operator's coverage type.
      operationId: addCoverageType
      summary: Add coverage type.
      x-soracom-cli:
        - operator add-coverage-type
  '/operators/{operator_id}/emails':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/EmailsModel'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Email
      description: Returns a list of email addresses.
      operationId: listEmails
      summary: List email addresses
      x-soracom-cli:
        - emails list
  '/operators/{operator_id}/emails/{email_id}':
    delete:
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: email_id
          in: path
          name: email_id
          required: true
          type: string
      responses:
        '204':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - Email
      description: Deletes an email address.
      operationId: deleteEmail
      summary: Delete email address
      x-soracom-cli:
        - emails delete
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: email_id
          in: path
          name: email_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/EmailsModel'
      security:
        - api_key: []
          api_token: []
      tags:
        - Email
      description: Returns an email address.
      operationId: getEmail
      summary: Get email address
      x-soracom-cli:
        - emails get
  '/operators/{operator_id}/individual_information':
    get:
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/IndividualInformationModel'
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Gets the operator's individual information.
      operationId: getIndividualInformation
      summary: Get individual information.
      x-soracom-cli:
        - operator get-individual-information
    post:
      consumes:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: model
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/IndividualInformationModel'
      responses:
        '201':
          description: Created.
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Creates the operator's individual information.
      operationId: createIndividualInformation
      summary: Create individual information.
      x-soracom-cli:
        - operator create-individual-information
    put:
      consumes:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: model
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/IndividualInformationModel'
      responses:
        '200':
          description: OK.
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Updates the operator's individual information.
      operationId: updateIndividualInformation
      summary: Update individual information.
      x-soracom-cli:
        - operator update-individual-information
  '/operators/{operator_id}/mfa':
    delete:
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '204':
          description: Revoked
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Revokes operator's MFA without backup codes.
      operationId: revokeMFA
      summary: Revoke Operator's MFA.
      x-soracom-cli:
        - operator revoke-mfa
    get:
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MFAStatusOfUseResponse'
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: |-
        Gets operator's MFA status. The MFA status is one of `ACTIVE`,
        `INACTIVE` or `UNCONFIRMED`.
      operationId: getMFAStatus
      summary: Get Operator's MFA Status.
      x-soracom-cli:
        - operator get-mfa-status
    post:
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EnableMFAOTPResponse'
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: >-
        Enables operator's MFA. After calling this APIg, it should be verified
        by calling `Operator:verifyMFA` API.
      operationId: enableMFA
      summary: Enable Operator's MFA.
      x-soracom-cli:
        - operator enable-mfa
  '/operators/{operator_id}/mfa/verify':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MFAAuthenticationRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OperatorMFAVerifyingResponse'
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: >-
        Verifies operator's MFA with OTP code after calling `Operator:enableMFA`
        API. MFA will not be activated unless the MFA OTP is verified with this
        API.  Backup codes are going to be returned in the response. These codes
        must be securely stored.
      operationId: verifyMFA
      summary: Verify Operator's MFA OTP Code.
      x-soracom-cli:
        - operator verify-mfa-otp
  '/operators/{operator_id}/password':
    post:
      consumes:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: 'current password, new password'
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePasswordRequest'
      responses:
        '200':
          description: OK.
        '400':
          description: Invalid password.
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Updates the operator's password.
      operationId: updateOperatorPassword
      summary: Update Operator Password.
      x-soracom-cli:
        - operator update-password
  '/operators/{operator_id}/roles':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/ListRolesResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Role
      description: Returns a list of roles.
      operationId: listRoles
      summary: List Roles.
      x-soracom-cli:
        - roles list
  '/operators/{operator_id}/roles/{role_id}':
    delete:
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: role_id
          in: path
          name: role_id
          required: true
          type: string
      responses:
        '204':
          description: The role was deleted.
      security:
        - api_key: []
          api_token: []
      tags:
        - Role
      description: Deletes a role.
      operationId: deleteRole
      summary: Delete Role.
      x-soracom-cli:
        - roles delete
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: role_id
          in: path
          name: role_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/RoleResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Role
      description: Retrieves a role.
      operationId: getRole
      summary: Get Role.
      x-soracom-cli:
        - roles get
    post:
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: role_id
          in: path
          name: role_id
          required: true
          type: string
        - description: permission
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateOrUpdateRoleRequest'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/CreateRoleResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Role
      description: Adds a new role.
      operationId: createRole
      summary: Create Role.
      x-soracom-cli:
        - roles create
    put:
      consumes:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: role_id
          in: path
          name: role_id
          required: true
          type: string
        - description: permission
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateOrUpdateRoleRequest'
      responses:
        '200':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - Role
      description: Edits a role.
      operationId: updateRole
      summary: Update Role.
      x-soracom-cli:
        - roles update
  '/operators/{operator_id}/roles/{role_id}/users':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: role_id
          in: path
          name: role_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/UserDetailResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Role
      description: Retrieves a list of users attached to a role.
      operationId: listRoleAttachedUsers
      summary: List Role Attached Users.
      x-soracom-cli:
        - roles list-users
  '/operators/{operator_id}/shipping_addresses':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/ListShippingAddressResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - ShippingAddress
      description: Returns a list of shipping addresses.
      operationId: listShippingAddresses
      summary: List shipping addresses.
      x-soracom-cli:
        - shipping-addresses list
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: model
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ShippingAddressModel'
      responses:
        '201':
          description: Shipping address was registered.
          schema:
            $ref: '#/definitions/GetShippingAddressResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - ShippingAddress
      description: Creates a new shipping address.
      operationId: createShippingAddress
      summary: Create shipping address.
      x-soracom-cli:
        - shipping-addresses create
  '/operators/{operator_id}/shipping_addresses/{shipping_address_id}':
    delete:
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: shipping_address_id
          in: path
          name: shipping_address_id
          required: true
          type: string
      responses:
        '200':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - ShippingAddress
      description: Deletes a shipping address.
      operationId: deleteShippingAddress
      summary: Delete shipping address.
      x-soracom-cli:
        - shipping-addresses delete
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: shipping_address_id
          in: path
          name: shipping_address_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GetShippingAddressResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - ShippingAddress
      description: Returns a shipping address.
      operationId: getShippingAddress
      summary: Get shipping address.
      x-soracom-cli:
        - shipping-addresses get
    put:
      consumes:
        - application/json
      parameters:
        - description: Operator ID
          in: path
          name: operator_id
          required: true
          type: string
        - description: shipping_address_id
          in: path
          name: shipping_address_id
          required: true
          type: string
        - description: model
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ShippingAddressModel'
      responses:
        '200':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - ShippingAddress
      description: Updates a shipping address.
      operationId: updateShippingAddress
      summary: Update shipping address.
      x-soracom-cli:
        - shipping-addresses update
  '/operators/{operator_id}/support/token':
    post:
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/SupportTokenResponse'
        '400':
          description: Invalid Operator Id
        '403':
          description: Invalid token.
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: Returns a token for accessing the support console.
      operationId: generateSupportToken
      summary: Generate Token for Support Console.
      x-soracom-cli:
        - operator get-support-token
  '/operators/{operator_id}/system_notifications':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/SystemNotificationsModel'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - SystemNotification
      description: Returns a list of system notifications.
      operationId: listSystemNotifications
      summary: List system notifications
      x-soracom-cli:
        - system-notifications list
  '/operators/{operator_id}/system_notifications/{type}':
    delete:
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: system notification type
          enum:
            - recovery
            - billing
            - support
          in: path
          name: type
          required: true
          type: string
      responses:
        '204':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - SystemNotification
      description: Deletes a system notification.
      operationId: deleteSystemNotification
      summary: Delete system notification
      x-soracom-cli:
        - system-notifications delete
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: system notification type
          enum:
            - primary
            - recovery
            - billing
            - support
          in: path
          name: type
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/SystemNotificationsModel'
      security:
        - api_key: []
          api_token: []
      tags:
        - SystemNotification
      description: Returns a system notification.
      operationId: getSystemNotification
      summary: Get system notification
      x-soracom-cli:
        - system-notifications get
    post:
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: system notification type
          enum:
            - primary
            - recovery
            - billing
            - support
          in: path
          name: type
          required: true
          type: string
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetSystemNotificationsRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SystemNotificationsModel'
      security:
        - api_key: []
          api_token: []
      tags:
        - SystemNotification
      description: Sets a system notification.
      operationId: setSystemNotification
      summary: Set system notification
      x-soracom-cli:
        - system-notifications set
  '/operators/{operator_id}/token':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: token timeout seconds
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GenerateTokenRequest'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GenerateTokenResponse'
        '400':
          description: >-
            There was an error in the request or the specified token has already
            expired. (In the latter case, you will need to use the /auth API to
            do authentication once again.)
          schema:
            $ref: '#/definitions/APICallError'
      security:
        - api_key: []
          api_token: []
      tags:
        - Operator
      description: >-
        Generates a new API token. If you insert the current API token into the
        header and make a request, a response is returned containing the new API
        token. You can then use the new API token in future requests.
      operationId: generateAuthToken
      summary: Generate Authentication Token.
      x-soracom-cli:
        - operator generate-api-token
  '/operators/{operator_id}/users':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/UserDetailResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Returns a list of SAM users.
      operationId: listUsers
      summary: List Users.
      x-soracom-cli:
        - users list
  '/operators/{operator_id}/users/default_permissions':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: Operator ID
          in: path
          name: operator_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GetDefaultPermissionsResponse'
        '403':
          description: Not privileged
        '404':
          description: Operator Not Found
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Get the default permissions rule that is applied to all of the SAM users
      operationId: getDefaultPermissions
      summary: Get the default permissions
      x-soracom-cli:
        - users default-permissions get
    put:
      consumes:
        - application/json
      parameters:
        - description: Operator ID
          in: path
          name: operator_id
          required: true
          type: string
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateDefaultPermissionsRequest'
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
        '403':
          description: Not privileged
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Update the default permissions rule that is applied to all of the SAM
      operationId: updateDefaultPermissions
      summary: Update the default permissions
      x-soracom-cli:
        - users default-permissions update
  '/operators/{operator_id}/users/{user_name}':
    delete:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
      responses:
        '204':
          description: The SAM user was deleted.
        '404':
          description: SAM User not found.
          schema:
            $ref: '#/definitions/APICallError'
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Deletes the SAM user.
      operationId: deleteUser
      summary: Delete User.
      x-soracom-cli:
        - users delete
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/UserDetailResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Returns a SAM user.
      operationId: getUser
      summary: Get User.
      x-soracom-cli:
        - users get
    post:
      consumes:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
        - description: description
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        '201':
          description: A new user was added.
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Adds a new SAM user.
      operationId: createUser
      summary: Create User.
      x-soracom-cli:
        - users create
    put:
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
        - description: description
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateUserRequest'
      responses:
        '200':
          description: OK
        '404':
          description: SAM User not found.
          schema:
            $ref: '#/definitions/APICallError'
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Updates the SAM user.
      operationId: updateUser
      summary: Update User.
      x-soracom-cli:
        - users update
  '/operators/{operator_id}/users/{user_name}/auth_keys':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/AuthKeyResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Returns the SAM user's AuthKey list.
      operationId: listUserAuthKeys
      summary: List User AuthKeys.
      x-soracom-cli:
        - users auth-keys list
    post:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GenerateUserAuthKeyResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Generates an AuthKey for the SAM user.
      operationId: generateUserAuthKey
      summary: Generate AuthKey.
      x-soracom-cli:
        - users auth-keys generate
  '/operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id}':
    delete:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
        - description: auth_key_id
          in: path
          name: auth_key_id
          required: true
          type: string
      responses:
        '204':
          description: The AuthKey was deleted.
        '404':
          description: AuthKey not found.
          schema:
            $ref: '#/definitions/APICallError'
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Deletes an AuthKey from the SAM user.
      operationId: deleteUserAuthKey
      summary: Delete User AuthKey.
      x-soracom-cli:
        - users auth-keys delete
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
        - description: auth_key_id
          in: path
          name: auth_key_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/AuthKeyResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Returns the SAM user's AuthKey.
      operationId: getUserAuthKey
      summary: Get AuthKey.
      x-soracom-cli:
        - users auth-keys get
  '/operators/{operator_id}/users/{user_name}/mfa':
    delete:
      parameters:
        - description: Operator ID
          in: path
          name: operator_id
          required: true
          type: string
        - description: SAM user name
          in: path
          name: user_name
          required: true
          type: string
      responses:
        '204':
          description: Revoked
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Revoke SAM user's MFA
      operationId: revokeUserMFA
      summary: Revoke SAM user's MFA
      x-soracom-cli:
        - users mfa revoke
    get:
      produces:
        - application/json
      parameters:
        - description: Operator ID
          in: path
          name: operator_id
          required: true
          type: string
        - description: SAM user name
          in: path
          name: user_name
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MFAStatusOfUseResponse'
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Get SAM user's MFA status
      operationId: getUserMFAStatus
      summary: Get SAM user's MFA status
      x-soracom-cli:
        - users mfa get
    post:
      produces:
        - application/json
      parameters:
        - description: Operator ID
          in: path
          name: operator_id
          required: true
          type: string
        - description: SAM user name
          in: path
          name: user_name
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EnableMFAOTPResponse'
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Enable SAM user's MFA
      operationId: enableUserMFA
      summary: Enable SAM user's MFA
      x-soracom-cli:
        - users mfa enable
  '/operators/{operator_id}/users/{user_name}/mfa/verify':
    post:
      consumes:
        - application/json
      parameters:
        - description: Operator ID
          in: path
          name: operator_id
          required: true
          type: string
        - description: SAM user name
          in: path
          name: user_name
          required: true
          type: string
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MFAAuthenticationRequest'
      responses:
        '204':
          description: Verified
        '400':
          description: Bad request
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Verify SAM user's MFA OTP code when MFA activation phase
      operationId: verifyUserMFA
      summary: Verify SAM user's MFA OTP code when MFA activation phase
      x-soracom-cli:
        - users mfa verify
  '/operators/{operator_id}/users/{user_name}/password':
    delete:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
      responses:
        '204':
          description: The user's password was deleted.
        '404':
          description: Password registration is required.
          schema:
            $ref: '#/definitions/APICallError'
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Deletes the user's password.
      operationId: deleteUserPassword
      summary: Delete Password.
      x-soracom-cli:
        - users password delete
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GetUserPasswordResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Retrieves whether the SAM user has a password or not.
      operationId: hasUserPassword
      summary: Has User Password.
      x-soracom-cli:
        - users password configured
    post:
      consumes:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
        - description: password
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateUserPasswordRequest'
      responses:
        '201':
          description: Password for the SAM user was registered.
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Creates a password for the SAM user.
      operationId: createUserPassword
      summary: Create Password.
      x-soracom-cli:
        - users password create
    put:
      consumes:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
        - description: password
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePasswordRequest'
      responses:
        '200':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Updates the password of the SAM user.
      operationId: updateUserPassword
      summary: Update Password.
      x-soracom-cli:
        - users password update
  '/operators/{operator_id}/users/{user_name}/permission':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GetUserPermissionResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Retrieves the SAM user's permissions.
      operationId: getUserPermission
      summary: Get User Permission.
      x-soracom-cli:
        - users permissions get
    put:
      consumes:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
        - description: permission
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetUserPermissionRequest'
      responses:
        '200':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - User
      description: Updates the SAM user's permissions.
      operationId: updateUserPermission
      summary: Update Permission to User.
      x-soracom-cli:
        - users permissions update
  '/operators/{operator_id}/users/{user_name}/roles':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/RoleResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Role
      description: Retrieves a list of the user's roles.
      operationId: listUserRoles
      summary: List User Roles.
      x-soracom-cli:
        - users list-roles
    post:
      consumes:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
        - description: role_id
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AttachRoleRequest'
      responses:
        '200':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - Role
      description: Attaches a role to a user.
      operationId: attachRole
      summary: Attach Role to User.
      x-soracom-cli:
        - users attach-role
  '/operators/{operator_id}/users/{user_name}/roles/{role_id}':
    delete:
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: user_name
          in: path
          name: user_name
          required: true
          type: string
        - description: role_id
          in: path
          name: role_id
          required: true
          type: string
      responses:
        '200':
          description: OK
      security:
        - api_key: []
          api_token: []
      tags:
        - Role
      description: Detaches a role from a user.
      operationId: detachRole
      summary: Detach Role from User.
      x-soracom-cli:
        - users detach-role
  /orders:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters: []
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/ListOrderResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: Returns a list of confirmed orders.
      operationId: listOrders
      summary: List confirmed orders.
      x-soracom-cli:
        - orders list
    post:
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: Order item list and shipping address ID
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateEstimatedOrderRequest'
      responses:
        '201':
          description: A new order quotation was created.
          schema:
            $ref: '#/definitions/EstimatedOrderModel'
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: >-
        Creates a new order quotation. If the orderId is put in /confirm, the
        order is complete.
      operationId: createQuotation
      summary: Create Quotation.
      x-soracom-cli:
        - orders create
  '/orders/{order_id}':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: order_id
          in: path
          name: order_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GetOrderResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: Returns a confirmed order.
      operationId: getOrder
      summary: Get confirmed order.
      x-soracom-cli:
        - orders get
  '/orders/{order_id}/cancel':
    put:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: order_id
          in: path
          name: order_id
          required: true
          type: string
      responses:
        '204':
          description: The order was cancelled.
          schema:
            type: string
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: >-
        Cancels an order. If the order has already been dispatched, an error is
        returned.
      operationId: cancelOrder
      summary: Cancel order.
      x-soracom-cli:
        - orders cancel
  '/orders/{order_id}/confirm':
    put:
      parameters:
        - description: order_id
          in: path
          name: order_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: >-
        Performs a credit limit and confirms the order if no problems are
        encountered.
      operationId: confirmOrder
      summary: Confirm order.
      x-soracom-cli:
        - orders confirm
  '/orders/{order_id}/subscribers':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: order_id
          in: path
          name: order_id
          required: true
          type: string
        - description: >-
            Serial number of the last subscriber in the previous page that is
            set to response header with X-Soracom-Next-Key.
          in: query
          name: last_evaluated_key
          required: false
          type: string
        - description: Max number of subscribers in a response.
          format: int32
          in: query
          name: limit
          required: false
          type: integer
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/ListOrderedSubscriberResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: List ordered subscribers
      operationId: listOrderedSubscribers
      summary: List ordered subscribers.
      x-soracom-cli:
        - orders list-subscribers
  '/orders/{order_id}/subscribers/register':
    post:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: order_id
          in: path
          name: order_id
          required: true
          type: string
      responses:
        '204':
          description: Subscribers were registered for the operator.
          schema:
            type: string
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: Registers the ordered SIM with the operator.
      operationId: registerOrderedSim
      summary: Register subscribers for operator.
      x-soracom-cli:
        - orders register-subscribers
  '/payment_history/transactions/{payment_transaction_id}':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: Payment transaction ID
          in: path
          name: payment_transaction_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GetPaymentTransactionResult'
        '400':
          description: Invalid payment transaction ID.
        '404':
          description: Payment transaction result not found.
      security:
        - api_key: []
          api_token: []
      tags:
        - Payment
      description: Returns result of a payment transaction.
      operationId: getPaymentTransaction
      summary: Get payment transaction result.
      x-soracom-cli:
        - payment-history get
  /payment_methods/current:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters: []
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GetPaymentMethodResult'
        '404':
          description: Payment method not found.
      security:
        - api_key: []
          api_token: []
      tags:
        - Payment
      description: >-
        Returns current payment methods. Detailed information is included in the
        properties.
      operationId: getPaymentMethod
      summary: Get payment method information.
      x-soracom-cli:
        - payment-methods get-current
  /payment_methods/current/activate:
    post:
      produces:
        - application/json;charset=UTF-8
      parameters: []
      responses:
        '200':
          description: OK.
          schema:
            type: object
        '404':
          description: Payment method not found.
      security:
        - api_key: []
          api_token: []
      tags:
        - Payment
      description: Activates a current payment method that has an error.
      operationId: activatePaymentMethod
      summary: Activate payment method.
      x-soracom-cli:
        - payment-methods reactivate-current
  /payment_statements:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ListPaymentStatementResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Payment
      description: List payment statements.
      operationId: listPaymentStatements
      summary: List payment statements.
      x-soracom-cli:
        - payment-statements list
  /payment_statements/payer_information:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RegisterPayerInformationModel'
        '400':
          description: Payer information not found.
      security:
        - api_key: []
          api_token: []
      tags:
        - Payment
      description: Export payer information.
      operationId: getPayerInformation
      summary: Export payer information.
      x-soracom-cli:
        - payer-information get
    post:
      consumes:
        - application/json
      parameters:
        - description: Payer information to be registered in the accounting specification
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegisterPayerInformationModel'
      responses:
        '201':
          description: Created.
        '400':
          description: Invalid payer information.
      security:
        - api_key: []
          api_token: []
      tags:
        - Payment
      description: Register payer information.
      operationId: registerPayerInformation
      summary: Register payer information.
      x-soracom-cli:
        - payer-information register
  '/payment_statements/{payment_statement_id}/export':
    post:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: Payment statement ID
          in: path
          name: payment_statement_id
          required: true
          type: string
        - description: 'Export mode (async, sync)'
          enum:
            - async
            - sync
          in: query
          name: export_mode
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FileExportResponse'
        '400':
          description: Invalid payment statement ID.
      security:
        - api_key: []
          api_token: []
      tags:
        - Payment
      description: Export payment statement.
      operationId: exportPaymentStatement
      summary: Export payment statement.
      x-soracom-cli:
        - payment-statements export
  /port_mappings:
    get:
      produces:
        - application/json
      parameters:
        - description: Maximum number of results per response page.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The last Port Mapping ID retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next group onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of port mappings.
          schema:
            items:
              $ref: '#/definitions/PortMapping'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - PortMapping
      description: Returns a list of port mappings.
      operationId: listPortMappings
      summary: List Port Mapping Entries.
      x-soracom-cli:
        - port-mappings list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Port mapping to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreatePortMappingRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/PortMapping'
      security:
        - api_key: []
          api_token: []
      tags:
        - PortMapping
      description: Create a new port mapping.
      operationId: createPortMapping
      summary: Create Port Mapping.
      x-soracom-cli:
        - port-mappings create
  '/port_mappings/subscribers/{imsi}':
    get:
      produces:
        - application/json
      parameters:
        - description: Target subscriber IMSI.
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: List of port mapping entries for the subscriber.
          schema:
            $ref: '#/definitions/PortMapping'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - PortMapping
      description: Returns the port mapping entries for a subscriber.
      operationId: listPortMappingsForSubscriber
      summary: Get Port Mapping entries for a subscriber.
      x-soracom-cli:
        - port-mappings get
  '/port_mappings/{ip_address}/{port}':
    delete:
      parameters:
        - description: IP address of the target port mapping entry
          in: path
          name: ip_address
          required: true
          type: string
        - description: Port of the target port mapping entry
          in: path
          name: port
          required: true
          type: string
      responses:
        '204':
          description: Deletion of specified port mapping entry complete.
        '404':
          description: The specified port mapping entry does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - PortMapping
      description: Deletes the specified port mapping entry
      operationId: deletePortMapping
      summary: Delete PortMapping.
      x-soracom-cli:
        - port-mappings delete
  /products:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters: []
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/ListProductResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: Returns a list of products.
      operationId: listProducts
      summary: List products.
      x-soracom-cli:
        - products list
  /query/devices:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - collectionFormat: multi
          description: Name to search
          in: query
          items:
            type: string
          name: name
          required: false
          type: array
        - collectionFormat: multi
          description: Group name to search
          in: query
          items:
            type: string
          name: group
          required: false
          type: array
        - collectionFormat: multi
          description: SORACOM Inventory device ID to search
          in: query
          items:
            type: string
          name: deviceId
          required: false
          type: array
        - collectionFormat: multi
          description: String of tag values to search
          in: query
          items:
            type: string
          name: tag
          required: false
          type: array
        - collectionFormat: multi
          description: IMSI of the device that was used on bootstrapping
          in: query
          items:
            type: string
          name: imsi
          required: false
          type: array
        - collectionFormat: multi
          description: IMEI of the device that was used on bootstrapping
          in: query
          items:
            type: string
          name: imei
          required: false
          type: array
        - default: 10
          description: The maximum number of item to retrieve
          format: int32
          in: query
          maximum: 100
          name: limit
          required: false
          type: integer
        - description: >-
            The SORACOM Inventory device ID of the last Inventory device
            retrieved on the current page. By specifying this parameter, you can
            continue to retrieve the list from the next Inventory device onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
        - default: and
          description: Type of the search ('AND searching' or 'OR searching')
          enum:
            - and
            - or
          in: query
          name: search_type
          required: false
          type: string
      responses:
        '200':
          description: Returns result of searching
          schema:
            items:
              $ref: '#/definitions/Device'
            type: array
        '400':
          description: Invalid search queries
      security:
        - api_key: []
          api_token: []
      tags:
        - Query
      description: >-
        Search SORACOM Inventory devices by query terms. It returns partial
        match results. When this API permission is allowed, it grants the
        authority to search and retrieve all SORACOM Inventory devices that
        includes their group information.
      operationId: searchDevices
      summary: Search SORACOM Inventory devices by query
      x-soracom-cli:
        - query devices
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/sigfox_devices:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - collectionFormat: multi
          description: Name to search
          in: query
          items:
            type: string
          name: name
          required: false
          type: array
        - collectionFormat: multi
          description: Group name to search
          in: query
          items:
            type: string
          name: group
          required: false
          type: array
        - collectionFormat: multi
          description: Sigfox device ID to search
          in: query
          items:
            type: string
          name: deviceId
          required: false
          type: array
        - collectionFormat: multi
          description: String of tag values to search
          in: query
          items:
            type: string
          name: tag
          required: false
          type: array
        - default: and
          description: Status of sigfox devices
          enum:
            - active
            - inactive
            - suspended
            - terminated
            - shipped
            - ready
            - inStock
            - banned
            - standby
          in: query
          name: status
          required: false
          type: string
        - default: and
          description: Registration status of sigfox devices
          enum:
            - notStarted
            - pending
            - success
            - failed
          in: query
          name: registration
          required: false
          type: string
        - default: 10
          description: The maximum number of item to retrieve
          format: int32
          in: query
          maximum: 100
          name: limit
          required: false
          type: integer
        - description: >-
            The Sigfox device ID of the last Sigfox device retrieved on the
            current page. By specifying this parameter, you can continue to
            retrieve the list from the next Sigfox device onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
        - default: and
          description: Type of the search ('AND searching' or 'OR searching')
          enum:
            - and
            - or
          in: query
          name: search_type
          required: false
          type: string
      responses:
        '200':
          description: Returns result of searching
          schema:
            items:
              $ref: '#/definitions/SigfoxDevice'
            type: array
        '400':
          description: Invalid search queries
      security:
        - api_key: []
          api_token: []
      tags:
        - Query
      description: >-
        Search Sigfox devices by query terms. It returns partial match results.
        When this API permission is allowed, it grants the authority to search
        and retrieve all Sigfox devices that includes their group information.
      operationId: searchSigfoxDevices
      summary: Search Sigfox devices by query
      x-soracom-cli:
        - query sigfox-devices
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/sims:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - collectionFormat: multi
          description: Name to search
          in: query
          items:
            type: string
          name: name
          required: false
          type: array
        - collectionFormat: multi
          description: Group name to search
          in: query
          items:
            type: string
          name: group
          required: false
          type: array
        - collectionFormat: multi
          description: Identifier of the SIM to search
          in: query
          items:
            type: string
          name: sim_id
          required: false
          type: array
        - collectionFormat: multi
          description: IMSI to search
          in: query
          items:
            type: string
          name: imsi
          required: false
          type: array
        - collectionFormat: multi
          description: MSISDN to search
          in: query
          items:
            type: string
          name: msisdn
          required: false
          type: array
        - collectionFormat: multi
          description: ICCID to search
          in: query
          items:
            type: string
          name: iccid
          required: false
          type: array
        - collectionFormat: multi
          description: Serial number to search
          in: query
          items:
            type: string
          name: serial_number
          required: false
          type: array
        - collectionFormat: multi
          description: String of tag values to search
          in: query
          items:
            type: string
          name: tag
          required: false
          type: array
        - collectionFormat: multi
          description: Bundles type to search
          in: query
          items:
            type: string
          name: bundles
          required: false
          type: array
        - default: NA
          description: Status of the session to search (ONLINE or OFFLINE)
          enum:
            - NA
            - ONLINE
            - OFFLINE
          format: string
          in: query
          name: session_status
          required: false
          type: string
        - default: 10
          description: The maximum number of item to retrieve
          format: int32
          in: query
          maximum: 100
          name: limit
          required: false
          type: integer
        - description: >-
            The SIM ID of the last SIM retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next SIM onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
        - default: and
          description: Type of the search ('AND searching' or 'OR searching')
          enum:
            - and
            - or
          in: query
          name: search_type
          required: false
          type: string
      responses:
        '200':
          description: Returns result of searching
          schema:
            items:
              $ref: '#/definitions/Sim'
            type: array
        '400':
          description: Invalid search queries
      security:
        - api_key: []
          api_token: []
      tags:
        - Query
      description: >-
        Search SIMs by query terms. It returns partial match results. When this
        API permission is allowed, it grants the authority to search and
        retrieve all SIMs that includes their group information.
      operationId: searchSims
      summary: Search SIMs by query terms
      x-soracom-cli:
        - query sims
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/subscribers:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - collectionFormat: multi
          description: Name to search
          in: query
          items:
            type: string
          name: name
          required: false
          type: array
        - collectionFormat: multi
          description: Group name to search
          in: query
          items:
            type: string
          name: group
          required: false
          type: array
        - collectionFormat: multi
          description: IMSI to search
          in: query
          items:
            type: string
          name: imsi
          required: false
          type: array
        - collectionFormat: multi
          description: MSISDN to search
          in: query
          items:
            type: string
          name: msisdn
          required: false
          type: array
        - collectionFormat: multi
          description: ICCID to search
          in: query
          items:
            type: string
          name: iccid
          required: false
          type: array
        - collectionFormat: multi
          description: Serial number to search
          in: query
          items:
            type: string
          name: serial_number
          required: false
          type: array
        - collectionFormat: multi
          description: String of tag values to search
          in: query
          items:
            type: string
          name: tag
          required: false
          type: array
        - collectionFormat: multi
          description: Subscription (e.g. `plan01s`) to search
          in: query
          items:
            type: string
          name: subscription
          required: false
          type: array
        - collectionFormat: multi
          description: 'Module type (e.g. `mini`, `virtual`) to search'
          in: query
          items:
            type: string
          name: module_type
          required: false
          type: array
        - default: 10
          description: The maximum number of item to retrieve
          format: int32
          in: query
          maximum: 100
          name: limit
          required: false
          type: integer
        - description: >-
            The IMSI of the last subscriber retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next subscriber onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
        - default: and
          description: Type of the search ('AND searching' or 'OR searching')
          enum:
            - and
            - or
          in: query
          name: search_type
          required: false
          type: string
      responses:
        '200':
          description: Returns result of searching
          schema:
            items:
              $ref: '#/definitions/Subscriber'
            type: array
        '400':
          description: Invalid search queries
      security:
        - api_key: []
          api_token: []
      tags:
        - Query
      deprecated: true
      description: >-
        (DEPRECATED: please consider to use `/query/sims` API instead) Search
        subscribers by query terms. It returns partial match results. When this
        API permission is allowed, it grants the authority to search and
        retrieve all SIMs that includes their group information.
      operationId: searchSubscribers
      summary: (DEPRECATED) Search subscribers by query terms
      x-soracom-alternative-cli: query sims
      x-soracom-cli:
        - query subscribers
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /query/subscribers/traffic_volume/ranking:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: 'The beginning point of searching range (unixtime: in milliseconds)'
          format: int64
          in: query
          name: from
          required: true
          type: integer
        - description: 'The end point of searching range (unixtime: in milliseconds)'
          format: int64
          in: query
          name: to
          required: true
          type: integer
        - default: 10
          description: The maximum number of item to retrieve
          format: int32
          in: query
          maximum: 500
          name: limit
          required: false
          type: integer
        - default: desc
          description: The order of ranking
          enum:
            - asc
            - desc
          in: query
          name: order
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/TrafficVolumeRanking'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Query
      description: Search traffic volume ranking of subscribers
      operationId: searchSubscriberTrafficVolumeRanking
      summary: Search traffic volume ranking of subscribers
      x-soracom-cli:
        - query subscribers traffic-volume-ranking
        - query traffic-ranking
  /sigfox_devices:
    get:
      produces:
        - application/json
      parameters:
        - description: Tag name for filtering the search (exact match).
          in: query
          name: tag_name
          required: false
          type: string
        - description: >-
            Tag search string for filtering the search. Required when `tag_name`
            has been specified.
          in: query
          name: tag_value
          required: false
          type: string
        - default: exact
          description: Tag match mode.
          enum:
            - exact
            - prefix
          in: query
          name: tag_value_match_mode
          required: false
          type: string
        - description: Maximum number of Sigfox devices to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The device ID of the last device retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next device onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of Sigfox devices.
          schema:
            items:
              $ref: '#/definitions/SigfoxDevice'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - SigfoxDevice
      description: >-
        Returns a list of Sigfox devices that match certain criteria. If the
        total number of Sigfox devices does not fit in one page, a URL for
        accessing the next page is returned in the 'Link' header of the
        response.
      operationId: listSigfoxDevices
      summary: List Sigfox devices.
      x-soracom-cli:
        - sigfox-devices list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/sigfox_devices/{device_id}':
    get:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target Sigfox device.
          in: path
          name: device_id
          required: true
          type: string
      responses:
        '200':
          description: The Sigfox device's detailed information.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        '404':
          description: The specified Sigfox device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - SigfoxDevice
      description: Returns information about the specified Sigfox device.
      operationId: getSigfoxDevice
      summary: Get Sigfox device.
      x-soracom-cli:
        - sigfox-devices get
  '/sigfox_devices/{device_id}/data':
    get:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target subscriber that generated data entries.
          in: path
          name: device_id
          required: true
          type: string
        - description: >-
            Start time for the data entries search range (unixtime in
            milliseconds).
          in: query
          name: from
          required: false
          type: integer
        - description: >-
            End time for the data entries search range (unixtime in
            milliseconds).
          in: query
          name: to
          required: false
          type: integer
        - default: desc
          description: >-
            Sort order of the data entries. Either descending (latest data entry
            first) or ascending (oldest data entry first).
          enum:
            - desc
            - asc
          in: query
          name: sort
          required: false
          type: string
        - description: Maximum number of data entries to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The value of `time` in the last log entry retrieved in the previous
            page. By specifying this parameter, you can continue to retrieve the
            list from the next page onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of data entries.
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - SigfoxDevice
      description: >-
        Returns a list of data entries sent from a Sigfox device that match
        certain criteria. If the total number of entries does not fit in one
        page, a URL for accessing the next page is returned in the 'Link' header
        of the response.
      operationId: getDataFromSigfoxDevice
      summary: Get data sent from a Sigfox device.
      x-soracom-cli:
        - sigfox-devices get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
        - application/json
      parameters:
        - description: ID of the recipient device.
          in: path
          name: device_id
          required: true
          type: string
        - description: >-
            Binary data encoded as a hexadecimal string. Length of original
            binary data must be 8 octets (16 characters when encoded as a
            hexadecimal string).
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SigfoxData'
      responses:
        '204':
          description: >-
            Data has been received by server and waiting for the recipient
            device to retrieve.
        '404':
          description: No such device found.
      security:
        - api_key: []
          api_token: []
      tags:
        - SigfoxDevice
      description: >-
        Sends data to the specified Sigfox device. The data will be stored until
        the device sends a next uplink message. If another message destined for
        the same Sigfox device ID is already waiting to be sent, the existing
        message will be discarded, and the new message will be sent instead.
      operationId: sendDataToSigfoxDevice
      summary: Send data to a Sigfox device.
      x-soracom-cli:
        - sigfox-devices send-data
  '/sigfox_devices/{device_id}/disable_termination':
    post:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target Sigfox device.
          in: path
          name: device_id
          required: true
          type: string
      responses:
        '200':
          description: The Sigfox device's detailed information after the update.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        '404':
          description: The specified Sigfox device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - SigfoxDevice
      description: Disables termination of specified Sigfox device.
      operationId: disableTerminationOnSigfoxDevice
      summary: Disable Termination of Sigfox device.
      x-soracom-cli:
        - sigfox-devices disable-termination
  '/sigfox_devices/{device_id}/enable_termination':
    post:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target Sigfox device.
          in: path
          name: device_id
          required: true
          type: string
      responses:
        '200':
          description: The Sigfox device's detailed information after the update.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        '404':
          description: The specified Sigfox device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - SigfoxDevice
      description: Enables termination of specified Sigfox device.
      operationId: enableTerminationOnSigfoxDevice
      summary: Enable Termination of Sigfox device.
      x-soracom-cli:
        - sigfox-devices enable-termination
  '/sigfox_devices/{device_id}/register':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Device ID of the target sigfox device to register
          in: path
          name: device_id
          required: true
          type: string
        - description: Sigfox device registration request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SigfoxRegistrationRequest'
      responses:
        '200':
          description: Sigfox device successfully registered
          schema:
            $ref: '#/definitions/SigfoxDevice'
        '400':
          description: PAC code is missing
      security:
        - api_key: []
          api_token: []
      tags:
        - SigfoxDevice
      description: Registers a Sigfox device
      operationId: registerSigfoxDevice
      summary: Register a Sigfox device.
      x-soracom-cli:
        - sigfox-devices register
  '/sigfox_devices/{device_id}/set_group':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Device ID of the target Sigfox device.
          in: path
          name: device_id
          required: true
          type: string
        - description: Group (may include ID only).
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '200':
          description: The Sigfox device's detailed information after the update.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        '404':
          description: The specified Sigfox device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - SigfoxDevice
      description: Sets or overwrites a group for the specified Sigfox device.
      operationId: setSigfoxDeviceGroup
      summary: Set Group of Sigfox device.
      x-soracom-cli:
        - sigfox-devices set-group
  '/sigfox_devices/{device_id}/tags':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Device ID of the target Sigfox device.
          in: path
          name: device_id
          required: true
          type: string
        - description: Array of tags to be inserted/updated.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/TagUpdateRequest'
            type: array
      responses:
        '200':
          description: The Sigfox device's detailed information after the update.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        '404':
          description: The specified Sigfox device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - SigfoxDevice
      description: Inserts/updates tags for the specified Sigfox device.
      operationId: putSigfoxDeviceTags
      summary: Bulk Insert or Update Sigfox device Tags.
      x-soracom-cli:
        - sigfox-devices put-tags
  '/sigfox_devices/{device_id}/tags/{tag_name}':
    delete:
      parameters:
        - description: device ID of the target Sigfox device.
          in: path
          name: device_id
          required: true
          type: string
        - description: >-
            Tag name to be deleted. (This will be part of a URL path, so it
            needs to be percent-encoded. In JavaScript, specify the name after
            it has been encoded using encodeURIComponent().)
          in: path
          name: tag_name
          required: true
          type: string
      responses:
        '204':
          description: Deletion of specified tag complete.
        '404':
          description: The specified Sigfox device or the tag does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - SigfoxDevice
      description: Deletes a tag from the specified Sigfox device.
      operationId: deleteSigfoxDeviceTag
      summary: Delete Sigfox device Tag.
      x-sam-operationId: deleteTag
      x-soracom-cli:
        - sigfox-devices delete-tag
  '/sigfox_devices/{device_id}/terminate':
    post:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target Sigfox device.
          in: path
          name: device_id
          required: true
          type: string
        - default: false
          description: If the Sigfox device is deleted immediately
          in: query
          name: delete_immediately
          required: false
          type: boolean
      responses:
        '200':
          description: The Sigfox device's detailed information after the update.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        '404':
          description: The specified Sigfox device does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - SigfoxDevice
      description: Terminates the specified Sigfox device
      operationId: terminateSigfoxDevice
      summary: Terminate Sigfox device.
      x-soracom-cli:
        - sigfox-devices terminate
  '/sigfox_devices/{device_id}/unset_group':
    post:
      produces:
        - application/json
      parameters:
        - description: Device ID of the target Sigfox device.
          in: path
          name: device_id
          required: true
          type: string
      responses:
        '200':
          description: The Sigfox device's detailed information after the update.
          schema:
            $ref: '#/definitions/SigfoxDevice'
        '404':
          description: >-
            The specified Sigfox device does not exist or the Sigfox device does
            not belong to a group.
      security:
        - api_key: []
          api_token: []
      tags:
        - SigfoxDevice
      description: Removes the group configuration from the specified Sigfox device.
      operationId: unsetSigfoxDeviceGroup
      summary: Unset Group of Sigfox device.
      x-soracom-cli:
        - sigfox-devices unset-group
  /sims:
    get:
      produces:
        - application/json
      parameters:
        - description: >-
            Maximum number of SIMs to retrieve. Setting a limit does not
            guarantee the number of sims returned in the response (i.e. the
            response may contain fewer sims than the specified limit).
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The ID of the last SIM retrieved on the current page. By specifying
            this parameter, you can continue to retrieve the list from the next
            SIM onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of SIMs.
          schema:
            items:
              $ref: '#/definitions/Sim'
            type: array
        '404':
          description: No such SIM found
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: >-
        Returns a list of SIMs that match certain criteria. If the total number
        of SIMs does not fit in one page, a URL for accessing the next page is
        returned in the 'Link' header of the response.
      operationId: listSims
      summary: List SIMs.
      x-soracom-cli:
        - sims list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: A SIM creation request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSimRequest'
      responses:
        '201':
          description: SIM created.
          schema:
            $ref: '#/definitions/Sim'
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Creates a SIM for example for use with Arc service.
      operationId: createSim
      summary: Create a SIM.
      x-soracom-cli:
        - sims create
  '/sims/{sim_id}':
    get:
      produces:
        - application/json
      parameters:
        - description: Id of the target SIM
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '200':
          description: A SIM identified by sim_id
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: No such SIM found
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Obtain a SIM record identified by the sim_id
      operationId: getSim
      summary: Get a SIM identified by sim_id
      x-soracom-cli:
        - sims get
  '/sims/{sim_id}/activate':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Change status of specified SIM to active.
      operationId: activateSim
      summary: Activate SIM.
      x-soracom-cli:
        - sims activate
  '/sims/{sim_id}/credentials/arc':
    delete:
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '204':
          description: The credentials for Arc have been removed.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      deprecated: true
      description: >-
        (DEPRECATED) Use this API to remove the set of credentials for Arc from
        the specified SIM. Please do not use this API.
      operationId: removeArcSimCredentials
      summary: (DEPRECATED) Remove the credentials for Arc from a SIM.
      x-soracom-cli:
        - sims remove-arc-credentials
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
        - description: Arc credential attach request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ArcCredentialAttachRequest'
      responses:
        '200':
          description: Arc credential attach response
          schema:
            $ref: '#/definitions/ArcCredentialAttachResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      deprecated: true
      description: >-
        (DEPRECATED) Use this API to attach a set of credentials to a SIM.
        Please use `renewArcSimCredentials` API instead.
      operationId: attachArcSimCredentials
      summary: (DEPRECATED) Attach the credentials for Arc to a SIM.
      x-soracom-cli:
        - sims attach-arc-credentials
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
        - description: Arc credential attach request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ArcCredentialRenewRequest'
      responses:
        '200':
          description: Arc credential attach response
          schema:
            $ref: '#/definitions/ArcCredentialRenewResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: >-
        Use this API to attach a set of credentials to a SIM and re-initialize a
        session at once.
      operationId: renewArcSimCredentials
      summary: Renew the credentials for Arc to a SIM.
      x-soracom-cli:
        - sims renew-arc-credentials
  '/sims/{sim_id}/data':
    get:
      produces:
        - application/json
      parameters:
        - description: Sim Id of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
        - description: >-
            Start time for the data entries search range (unixtime in
            milliseconds).
          in: query
          name: from
          required: false
          type: integer
        - description: >-
            End time for the data entries search range (unixtime in
            milliseconds).
          in: query
          name: to
          required: false
          type: integer
        - default: desc
          description: >-
            Sort order of the data entries. Either descending (latest data entry
            first) or ascending (oldest data entry first).
          enum:
            - desc
            - asc
          in: query
          name: sort
          required: false
          type: string
        - description: Maximum number of data entries to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The value of `time` in the last log entry retrieved in the previous
            page. By specifying this parameter, you can continue to retrieve the
            list from the next page onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of data entries.
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: >-
        Returns a list of data entries sent from a SIM that match certain
        criteria. If the total number of entries does not fit in one page, a URL
        for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: getDataFromSim
      summary: Get data sent from a SIM.
      x-soracom-cli:
        - sims get-data
  '/sims/{sim_id}/deactivate':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Change status of specified SIM to inactive.
      operationId: deactivateSim
      summary: Deactivate SIM.
      x-soracom-cli:
        - sims deactivate
  '/sims/{sim_id}/delete_session':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Deletes session for the specified SIM.
      operationId: deleteSimSession
      summary: Delete Session
      x-soracom-cli:
        - sims delete-session
  '/sims/{sim_id}/disable_termination':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Disables termination of the specified SIM.
      operationId: disableSimTermination
      summary: Disable termination of the SIM.
      x-soracom-cli:
        - sims disable-termination
  '/sims/{sim_id}/downlink/ping':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
        - description: ping options
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DownlinkPingRequest'
      responses:
        '200':
          description: Result of the ping
          schema:
            $ref: '#/definitions/DownlinkPingResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Send ICMP ping requests to a SIM.
      operationId: downlinkPingToUserEquipment
      summary: Send ping requests to a SIM.
      x-soracom-cli:
        - sims downlink-ping
  '/sims/{sim_id}/enable_termination':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Enables termination of specified SIM.
      operationId: enableSimTermination
      summary: Enable termination of the SIM.
      x-soracom-cli:
        - sims enable-termination
  '/sims/{sim_id}/events/sessions':
    get:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
        - description: Start time for the events search range (unixtime).
          in: query
          name: from
          required: false
          type: integer
        - description: End time for the events search range (unixtime).
          in: query
          name: to
          required: false
          type: integer
        - description: Maximum number of events to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The time stamp of the last event retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next event onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of session events
          schema:
            items:
              $ref: '#/definitions/SessionEvent'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: >-
        Returns the history of session creation, change, and deletion events
        occurred on the target SIM in the last 14 days. If the total number of
        events does not fit in one page, a URL for accessing the next page is
        returned in the `Link` header of the response.
      operationId: listSimSessionEvents
      summary: List Session Events.
      x-soracom-cli:
        - sims session-events
  '/sims/{sim_id}/packet_capture_sessions':
    get:
      produces:
        - application/json
      parameters:
        - description: SIM ID
          in: path
          name: sim_id
          required: true
          type: string
        - description: ID of the last packet capture session in the previous page
          in: query
          name: last_evaluated_key
          required: false
          type: string
        - default: 10
          description: Max number of results in a response
          format: int32
          in: query
          name: limit
          required: false
          type: integer
      responses:
        '200':
          description: List of packet capture sessions associated with the SIM
          schema:
            items:
              $ref: '#/definitions/PacketCaptureSession'
            type: array
        '404':
          description: No such sim found
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: List packet capture sessions associated with the SIM
      operationId: listSimPacketCaptureSessions
      summary: List Packet Capture Sessions
      x-soracom-cli:
        - sims list-packet-capture-sessions
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: The SIM ID for which a packet capture session is created
          in: path
          name: sim_id
          required: true
          type: string
        - description: A packet capture session request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PacketCaptureSessionRequest'
      responses:
        '200':
          description: Created a new packet capture sessions associated with the SIM
          schema:
            $ref: '#/definitions/PacketCaptureSession'
        '404':
          description: No such sim found
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Create a packet capture session associated with the SIM
      operationId: createSimPacketCaptureSession
      summary: Create Packet Capture Session
      x-soracom-cli:
        - sims create-packet-capture-session
  '/sims/{sim_id}/packet_capture_sessions/{session_id}':
    delete:
      produces:
        - application/json
      parameters:
        - description: SIM ID
          in: path
          name: sim_id
          required: true
          type: string
        - description: Packet capture session ID
          in: path
          name: session_id
          required: true
          type: string
      responses:
        '200':
          description: Deleted the packet capture session associated with the SIM
          schema:
            $ref: '#/definitions/PacketCaptureSession'
        '400':
          description: Failed to delete the packet capture session associated with the SIM
        '404':
          description: The packet capture session associated with the SIM was not found
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Delete a packet capture session associated with the SIM
      operationId: deleteSimPacketCaptureSession
      summary: Delete Packet Capture Session
      x-soracom-cli:
        - sims delete-packet-capture-session
    get:
      produces:
        - application/json
      parameters:
        - description: SIM ID
          in: path
          name: sim_id
          required: true
          type: string
        - description: Packet capture session ID
          in: path
          name: session_id
          required: true
          type: string
      responses:
        '200':
          description: The packet capture session associated with the SIM
          schema:
            $ref: '#/definitions/PacketCaptureSession'
        '404':
          description: The packet capture session associated with the SIM was not found
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Get a packet capture sessions associated the SIM
      operationId: getSimPacketCaptureSession
      summary: Get Packet Capture Session
      x-soracom-cli:
        - sims get-packet-capture-session
  '/sims/{sim_id}/packet_capture_sessions/{session_id}/stop':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID
          in: path
          name: sim_id
          required: true
          type: string
        - description: Packet capture session ID
          in: path
          name: session_id
          required: true
          type: string
      responses:
        '200':
          description: The stopped packet capture session associated with the SIM
          schema:
            $ref: '#/definitions/PacketCaptureSession'
        '400':
          description: >-
            The packet capture session can be stopped only when its status is
            CAPTURING
        '404':
          description: The packet capture session associated with the SIM was not found
        '500':
          description: The packet capture session could not be stopped
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Stop a packet capture session associated with the SIM
      operationId: stopSimPacketCaptureSession
      summary: Stop SIM Packet Capture Session
      x-soracom-cli:
        - sims stop-packet-capture-session
  '/sims/{sim_id}/profiles/{iccid}/add_subscription':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Id of the target SIM
          in: path
          name: sim_id
          required: true
          type: string
        - description: Iccid of the target profile
          in: path
          name: iccid
          required: true
          type: string
        - in: body
          name: body
          schema:
            properties:
              enable:
                description: >-
                  A flag to indicate if it should cause a switch to the
                  subscription after the download has finished. If it is set to
                  true, the downloaded subscriber will be enabled immediately.
                type: boolean
              subscription:
                description: Name of the subscription plan
                type: string
              type:
                enum:
                  - virtual
                  - cellular
                type: string
            required:
              - subscription
            type: object
      responses:
        '200':
          description: The updated SIM profile
          schema:
            $ref: '#/definitions/SimProfile'
        '404':
          description: No such profile or sim found
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: >-
        This API is used to trigger the OTA update of a new subscription
        container to a SIM profile.
      operationId: addSubscription
      summary: Adds a new subscription container to a SIM profile
      x-soracom-cli:
        - sims add-subscription
  '/sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/cancel_download':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target subscription container.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
        - description: ICCID of the target subscription container.
          in: path
          name: iccid
          required: true
          type: string
        - description: IMSI of the target subscription container.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: >-
            A schema listing subscription containers and containing a map of
            PLMN codes to subscription containers.
          schema:
            $ref: '#/definitions/SubscriptionContainerStatus'
        '404':
          description: No such SIM found
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: >-
        Cancel the download of subscription before it gets downloaded to the
        SIM. The condition is that the status of the subscription is still
        `shipped`
      operationId: cancelSubscriptionContainerDownload
      summary: Cancel subscription download to subscription container
      x-soracom-cli:
        - sims cancel-subscription-container-download
  '/sims/{sim_id}/profiles/{iccid}/subscribers/{imsi}/terminate':
    post:
      parameters:
        - description: SIM ID of the target subscription container.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
        - description: ICCID of the target subscription container.
          in: path
          name: iccid
          required: true
          type: string
        - description: IMSI of the target subscription container.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '204':
          description: The subscription container has been terminated.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: >-
        Terminate subscription container. Currently this API supports only for
        virtual subscribers for SORACOM Arc service.
      operationId: terminateSubscriptionContainer
      summary: Terminate subscription container
      x-soracom-cli:
        - sims terminate-subscription-container
  '/sims/{sim_id}/profiles/{iccid}/subscription_containers':
    get:
      produces:
        - application/json
      parameters:
        - description: Sim Id of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
        - description: Iccid of the target profile
          in: path
          name: iccid
          required: true
          type: string
      responses:
        '200':
          description: >-
            A schema listing subscription containers and containing a map of
            PLMN codes to subscription containers.
          schema:
            $ref: '#/definitions/SubscriptionContainerStatus'
        '400':
          description: Missing parameter
        '404':
          description: No such profile or sim found
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: >-
        Returns a schema listing subscription containers and containing a map of
        PLMN codes to subscription containers
      operationId: listSubscriptionContainers
      summary: Get subscription container status.
      x-soracom-cli:
        - sims list-subscription-containers
  '/sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
        - description: Iccid of the target profile
          in: path
          name: iccid
          required: true
          type: string
        - description: >-
            collection of country (and optionally network) to subscription
            container mapping entries
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MappingEntries'
      responses:
        '200':
          description: >-
            A schema listing subscription containers and containing a map of
            PLMN codes to subscription containers.
          schema:
            $ref: '#/definitions/SubscriptionContainerStatus'
        '400':
          description: Missing parameter
        '404':
          description: No such profile or sim found
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: >-
        Inserts/updates Country (and optionally network) to subscription
        container mapping entries in the mapping table.
      operationId: putSubscriptionContainerCountryMappingEntries
      summary: Updates subscription container country mapping entries.
      x-soracom-cli:
        - sims put-country-mapping-entries
  '/sims/{sim_id}/profiles/{iccid}/subscription_containers/country_mapping/{mcc}':
    delete:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
        - description: Iccid of the target profile
          in: path
          name: iccid
          required: true
          type: string
        - description: mobile country code
          in: path
          name: mcc
          required: true
          type: string
      responses:
        '200':
          description: >-
            A schema listing subscription containers and containing a map of
            PLMN codes to subscription containers.
          schema:
            $ref: '#/definitions/SubscriptionContainerStatus'
        '400':
          description: Missing parameter
        '404':
          description: No such profile or sim found
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Delete subscription container country mapping entries
      operationId: deleteSubscriptionContainerCountryMappingEntry
      summary: Delete subscription container mapping entries
      x-soracom-cli:
        - sims delete-country-mapping-entry
  '/sims/{sim_id}/profiles/{iccid}/subscription_containers/{container_id}/enable':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
        - description: Iccid of the target profile
          in: path
          name: iccid
          required: true
          type: string
        - description: Identifier of the target container
          in: path
          name: container_id
          required: true
          type: string
      responses:
        '200':
          description: >-
            A schema listing subscription containers and containing a map of
            PLMN codes to subscription containers.
          schema:
            $ref: '#/definitions/SubscriptionContainerStatus'
        '404':
          description: No such profile or sim found
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Causes the identified container to become the active one on the Sim.
      operationId: enableSubscriptionContainer
      summary: Enables a subscription container.
      x-soracom-cli:
        - sims enable-subscription-container
  '/sims/{sim_id}/register':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
        - description: A SIM registration request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegisterSimRequest'
      responses:
        '201':
          description: Sim registration complete.
          schema:
            $ref: '#/definitions/Sim'
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Registers a SIM to an operator.
      operationId: registerSim
      summary: Register SIM.
      x-soracom-cli:
        - sims register
  '/sims/{sim_id}/report_local_info':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '202':
          description: >-
            The local info reporting has successfully been triggered. The
            subscriber information is asynchronously updated when the SIM
            reports the information back.
          schema:
            $ref: '#/definitions/Subscriber'
        '400':
          description: >-
            The specified SIM active subscriber does not support local info
            reporting feature.
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Triggers SIM to report SIM local info.
      operationId: reportSimLocalInfo
      summary: Triggers SIM to report SIM local info.
      x-soracom-cli:
        - sims report-local-info
  '/sims/{sim_id}/send_sms':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
        - description: >-
            SMS forwarding request that contains message body and its encoding
            type.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SmsForwardingRequest'
      responses:
        '202':
          description: SMS forwarding report containing message ID.
          schema:
            $ref: '#/definitions/SmsForwardingReport'
        '400':
          description: The specified SIM does not support SMS API.
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Send SMS to the specified SIM.
      operationId: sendSmsToSim
      summary: Send SMS to SIM
      x-soracom-cli:
        - sims send-sms
  '/sims/{sim_id}/sessions/arc':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '200':
          description: Arc session created
          schema:
            $ref: '#/definitions/ArcSessionCreateResponse'
        '400':
          description: Arc credentials missing
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Use this API to re-activate a session for a virtual SIM.
      operationId: createArcSession
      summary: Re-create an Arc session.
      x-soracom-cli:
        - sims create-arc-session
  '/sims/{sim_id}/set_expiry_time':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
        - description: 'Expiry time after the update (unixtime: in milliseconds).'
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExpiryTime'
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Updates expiry time of the specified SIM.
      operationId: setSimExpiryTime
      summary: Update expiry time of SIM.
      x-soracom-cli:
        - sims set-expiry-time
  '/sims/{sim_id}/set_group':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
        - description: Group (may include ID only).
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetGroupRequest'
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Sets or overwrites a group for the specified SIM.
      operationId: setSimGroup
      summary: Set Group id of a SIM.
      x-soracom-cli:
        - sims set-group
  '/sims/{sim_id}/set_imei_lock':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
        - description: >-
            IMEI lock configuration for the SIM. (IMEI can be left blank for
            locking to the current IMEI of an online SIM.)
          in: body
          name: body
          schema:
            $ref: '#/definitions/SetImeiLockRequest'
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '400':
          description: Invalid IMEI string or SIM is offline and IMEI not specified.
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Set IMEI that the SIM should be locked to.
      operationId: setSimImeiLock
      summary: Set IMEI lock configuration for the SIM.
      x-soracom-cli:
        - sims set-imei-lock
  '/sims/{sim_id}/set_to_standby':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '400':
          description: The specified SIM does not support standby mode.
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Set the specified SIM to standby mode.
      operationId: setSimToStandby
      summary: Set SIM to standby mode.
      x-soracom-cli:
        - sims set-to-standby
  '/sims/{sim_id}/suspend':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Suspends the specified SIM
      operationId: suspendSim
      summary: Suspend SIM.
      x-soracom-cli:
        - sims suspend
  '/sims/{sim_id}/tags':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
        - description: Array of tags to be inserted/updated.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/TagUpdateRequest'
            type: array
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Inserts/updates tags for the specified SIM.
      operationId: putSimTags
      summary: Bulk insert or update SIM tags.
      x-sam-operationId: putTags
      x-soracom-cli:
        - sims put-tags
  '/sims/{sim_id}/tags/{tag_name}':
    delete:
      parameters:
        - description: Sim Id of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
        - description: >-
            Tag name to be deleted. (This will be part of a URL path, so it
            needs to be percent-encoded. In JavaScript, specify the name after
            it has been encoded using encodeURIComponent().)
          in: path
          name: tag_name
          required: true
          type: string
      responses:
        '204':
          description: Deletion of specified tag complete.
        '404':
          description: The specified subscriber or the tag does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Deletes a tag from the specified SIM.
      operationId: deleteSimTag
      summary: Delete SIM tag.
      x-sam-operationId: deleteTag
      x-soracom-cli:
        - sims delete-tag
  '/sims/{sim_id}/terminate':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          format: SimId
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Terminates the specified SIM.
      operationId: terminateSim
      summary: Terminate SIM.
      x-soracom-cli:
        - sims terminate
  '/sims/{sim_id}/unset_expiry_time':
    post:
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '204':
          description: Change of specified SIM's expiry time to indefinite complete.
        '404':
          description: >-
            The specified SIM does not exist or the SIM does not have an expiry
            time.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Deletes expiry time of specified SIM and changes it to indefinite.
      operationId: unsetSimExpiryTime
      summary: Delete expiry time of the SIM.
      x-soracom-cli:
        - sims unset-expiry-time
  '/sims/{sim_id}/unset_group':
    post:
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: >-
            The specified SIM does not exist or the SIM does not belong to a
            group.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Removes the group configuration from the specified SIM.
      operationId: unsetSimGroup
      summary: Unset Group to SIM.
      x-soracom-cli:
        - sims unset-group
  '/sims/{sim_id}/unset_imei_lock':
    post:
      produces:
        - application/json
      parameters:
        - description: Sim Id of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Remove any existing IMEI lock configuration for the SIM.
      operationId: unsetSimImeiLock
      summary: Unset IMEI lock configuration for SIM.
      x-soracom-cli:
        - sims unset-imei-lock
  '/sims/{sim_id}/update_speed_class':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: SIM ID of the target SIM.
          in: path
          name: sim_id
          required: true
          type: string
        - description: speed_class
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSpeedClassRequest'
      responses:
        '200':
          description: The SIM's detailed information after the update.
          schema:
            $ref: '#/definitions/Sim'
        '404':
          description: The specified SIM does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Sim
      description: Changes the speed class of the specified SIM.
      operationId: updateSimSpeedClass
      summary: Update SIM speed class.
      x-soracom-cli:
        - sims update-speed-class
  /soralets:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - default: asc
          description: Sort order
          enum:
            - asc
            - desc
          in: query
          name: sort
          required: false
          type: string
        - description: The maximum number of items in a response
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The identifier of the last Soralet retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next Soralet onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/Soralet'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Soralet
      description: Returns a list of Soralets.
      operationId: listSoralets
      summary: List Soralets.
      x-soracom-cli:
        - soralets list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
        - application/json
      parameters:
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateSoraletRequest'
      responses:
        '201':
          description: Successfully created a new Soralet.
        '400':
          description: >-
            The specified Soralet already exists or the specified soralet_id was
            invalid.
      security:
        - api_key: []
          api_token: []
      tags:
        - Soralet
      description: Create a Soralet.
      operationId: createSoralet
      summary: Create a Soralet.
      x-soracom-cli:
        - soralets create
  '/soralets/{soralet_id}':
    delete:
      parameters:
        - description: The identifier of Soralet.
          in: path
          name: soralet_id
          required: true
          type: string
      responses:
        '204':
          description: Successfully deleted the specified Soralet.
        '404':
          description: The specified Soralet is not found.
      security:
        - api_key: []
          api_token: []
      tags:
        - Soralet
      description: Delete the specified Soralet.
      operationId: deleteSoralet
      summary: Delete Soralet.
      x-soracom-cli:
        - soralets delete
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: The identifier of Soralet.
          in: path
          name: soralet_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/Soralet'
        '404':
          description: The specified Soralet is not found.
      security:
        - api_key: []
          api_token: []
      tags:
        - Soralet
      description: Returns a Soralet.
      operationId: getSoralet
      summary: Get a Soralet.
      x-soracom-cli:
        - soralets get
  '/soralets/{soralet_id}/logs':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: The identifier of Soralet.
          in: path
          name: soralet_id
          required: true
          type: string
        - default: desc
          description: Sort order
          enum:
            - asc
            - desc
          in: query
          name: sort
          required: false
          type: string
        - description: The maximum number of items in a response.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The identifier of the last log message retrieved on the current
            page. By specifying this parameter, you can continue to retrieve the
            list from the next log message onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/SoraletLog'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Soralet
      description: Returns a list of log messages from the specified Soralet.
      operationId: getSoraletLogs
      summary: Get log messages from Soralet.
      x-soracom-cli:
        - soralets get-logs
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/soralets/{soralet_id}/test':
    post:
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: The identifier of Soralet.
          in: path
          name: soralet_id
          required: true
          type: string
        - description: request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExecuteSoraletRequest'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/ExecuteSoraletResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Soralet
      description: Execute the specified Soralet with the specified arguments.
      operationId: testSoralet
      summary: Execute Soralet with arguments.
      x-soracom-cli:
        - soralets test
        - soralets exec
  '/soralets/{soralet_id}/versions':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: The identifier of Soralet.
          in: path
          name: soralet_id
          required: true
          type: string
        - default: desc
          description: Sort order
          enum:
            - asc
            - desc
          in: query
          name: sort
          required: false
          type: string
        - description: The maximum number of items in a response.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The identifier of the last version retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next version onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/SoraletVersion'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Soralet
      description: Returns a list of Soralet versions.
      operationId: listSoraletVersions
      summary: List versions of Soralet.
      x-soracom-cli:
        - soralets list-versions
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: The identifier of Soralet.
          in: path
          name: soralet_id
          required: true
          type: string
        - description: Content type of the file to upload
          in: header
          name: content-type
          type: string
        - in: body
          name: body
          required: true
          schema:
            format: binary
            type: string
      responses:
        '201':
          description: Successfully created a new version.
          schema:
            $ref: '#/definitions/SoraletVersion'
      security:
        - api_key: []
          api_token: []
      tags:
        - Soralet
      description: Upload code and create a new version.
      operationId: uploadSoraletCode
      summary: Upload code and create a new version.
      x-soracom-cli:
        - soralets upload
  '/soralets/{soralet_id}/versions/{version}':
    delete:
      parameters:
        - description: The identifier of Soralet.
          in: path
          name: soralet_id
          required: true
          type: string
        - description: Soralet version.
          in: path
          name: version
          required: true
          type: integer
      responses:
        '204':
          description: Successfully deleted the specified Soralet version.
        '404':
          description: The specified Soralet version is not found.
      security:
        - api_key: []
          api_token: []
      tags:
        - Soralet
      description: Delete the specified Soralet version.
      operationId: deleteSoraletVersion
      summary: Delete a Soralet version.
      x-soracom-cli:
        - soralets delete-version
  '/stats/air/operators/{operator_id}/export':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: 'export_mode (async, sync)'
          enum:
            - async
            - sync
          in: query
          name: export_mode
          required: false
          type: string
        - description: export time period
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExportRequest'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Stats
      description: >-
        Retrieves a file containing the usage report of all subscribers for the
        specified operator. The report data range is specified with from, to in
        unixtime. The report contains monthly data. The file output destination
        is AWS S3. The file output format is CSV.
      operationId: exportAirStats
      summary: Export Air Usage Report of All Subscribers.
      x-soracom-cli:
        - stats air export
  '/stats/air/sims/{sim_id}':
    get:
      produces:
        - application/json
      parameters:
        - description: SIM ID
          in: path
          name: sim_id
          required: true
          type: string
        - description: Start time in unixtime for the aggregate data.
          in: query
          name: from
          required: true
          type: integer
        - description: End time in unixtime for the aggregate data.
          in: query
          name: to
          required: true
          type: integer
        - description: >-
            Units of aggregate data. For minutes, the interval is around 5
            minutes.
          enum:
            - month
            - day
            - minutes
          in: query
          name: period
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/AirStatsResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Stats
      description: Retrieves the usage report for the SIM specified by the simId.
      operationId: getAirStatsOfSim
      summary: Get Air Usage Report of SIM.
      x-soracom-cli:
        - stats air sims get
  '/stats/air/subscribers/{imsi}':
    get:
      produces:
        - application/json
      parameters:
        - description: imsi
          in: path
          name: imsi
          required: true
          type: string
        - description: Start time in unixtime for the aggregate data.
          in: query
          name: from
          required: true
          type: integer
        - description: End time in unixtime for the aggregate data.
          in: query
          name: to
          required: true
          type: integer
        - description: >-
            Units of aggregate data. For minutes, the interval is around 5
            minutes.
          enum:
            - month
            - day
            - minutes
          in: query
          name: period
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/AirStatsResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Stats
      description: Retrieves the usage report for the subscriber specified by the IMSI.
      operationId: getAirStats
      summary: Get Air Usage Report of Subscriber.
      x-soracom-cli:
        - stats air get
  '/stats/beam/operators/{operator_id}/export':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: operator ID
          in: path
          name: operator_id
          required: true
          type: string
        - description: 'export_mode (async, sync)'
          enum:
            - async
            - sync
          in: query
          name: export_mode
          required: false
          type: string
        - description: export time period
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExportRequest'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Stats
      description: >-
        Retrieves a file containing the SORACOM Beam usage report of all
        subscribers for the specified operator. The report data range is
        specified with from, to in unixtime. The report contains monthly data.
        The file output destination is AWS S3. The file output format is CSV.
      operationId: exportBeamStats
      summary: Export Beam Usage Report of All Subscribers.
      x-soracom-cli:
        - stats beam export
  '/stats/beam/subscribers/{imsi}':
    get:
      produces:
        - application/json
      parameters:
        - description: imsi
          in: path
          name: imsi
          required: true
          type: string
        - description: Start time in unixtime for the aggregate data.
          in: query
          name: from
          required: true
          type: integer
        - description: End time in unixtime for the aggregate data.
          in: query
          name: to
          required: true
          type: integer
        - description: >-
            Units of aggregate data. For minutes, the interval is around 5
            minutes.
          enum:
            - month
            - day
            - minutes
          in: query
          name: period
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/BeamStatsResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Stats
      description: >-
        Retrieves the Soracom Beam usage report for the subscriber specified by
        the IMSI.
      operationId: getBeamStats
      summary: Get Beam Usage Report of Subscriber.
      x-soracom-cli:
        - stats beam get
  '/stats/funk/operators/{operator_id}/export':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: operator ID
          in: path
          name: operator_id
          required: true
          type: string
        - description: 'export_mode (async, sync)'
          enum:
            - async
            - sync
          in: query
          name: export_mode
          required: false
          type: string
        - description: export time period
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExportRequest'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Stats
      description: >-
        Retrieves a file containing the SORACOM Funk usage report of all
        subscribers for the specified operator. The report data range is
        specified with from, to in unixtime. The report contains monthly data.
        The file output destination is AWS S3. The file output format is CSV.
      operationId: exportFunkStats
      summary: Export Funk Usage Report of All Subscribers.
      x-soracom-cli:
        - stats funk export
  '/stats/funk/subscribers/{imsi}':
    get:
      produces:
        - application/json
      parameters:
        - description: imsi
          in: path
          name: imsi
          required: true
          type: string
        - description: Start time in unixtime for the aggregate data.
          in: query
          name: from
          required: true
          type: integer
        - description: End time in unixtime for the aggregate data.
          in: query
          name: to
          required: true
          type: integer
        - description: >-
            Units of aggregate data. For minutes, the interval is around 5
            minutes.
          enum:
            - month
            - day
            - minutes
          in: query
          name: period
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/FunkStatsResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Stats
      description: >-
        Retrieves the Soracom Funk usage report for the subscriber specified by
        the IMSI.
      operationId: getFunkStats
      summary: Get Funk Usage Report of Subscriber.
      x-soracom-cli:
        - stats funk get
  '/stats/funnel/operators/{operator_id}/export':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: operator ID
          in: path
          name: operator_id
          required: true
          type: string
        - description: 'export_mode (async, sync)'
          enum:
            - async
            - sync
          in: query
          name: export_mode
          required: false
          type: string
        - description: export time period
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExportRequest'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Stats
      description: >-
        Retrieves a file containing the SORACOM Funnel usage report of all
        subscribers for the specified operator. The report data range is
        specified with from, to in unixtime. The report contains monthly data.
        The file output destination is AWS S3. The file output format is CSV.
      operationId: exportFunnelStats
      summary: Export Funnel Usage Report of All Subscribers.
      x-soracom-cli:
        - stats funnel export
  '/stats/funnel/subscribers/{imsi}':
    get:
      produces:
        - application/json
      parameters:
        - description: imsi
          in: path
          name: imsi
          required: true
          type: string
        - description: Start time in unixtime for the aggregate data.
          in: query
          name: from
          required: true
          type: integer
        - description: End time in unixtime for the aggregate data.
          in: query
          name: to
          required: true
          type: integer
        - description: >-
            Units of aggregate data. For minutes, the interval is around 5
            minutes.
          enum:
            - month
            - day
            - minutes
          in: query
          name: period
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/FunnelStatsResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Stats
      description: >-
        Retrieves the Soracom Funnel usage report for the subscriber specified
        by the IMSI.
      operationId: getFunnelStats
      summary: Get Funnel Usage Report of Subscriber.
      x-soracom-cli:
        - stats funnel get
  '/stats/harvest/operators/{operator_id}':
    get:
      produces:
        - application/json
      parameters:
        - description: operator_id
          in: path
          name: operator_id
          required: true
          type: string
        - description: Year/Month in 'YYYYMM' format.
          in: query
          name: year_month
          required: false
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/HarvestExportedDataStatsResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Stats
      description: Retrieves the SORACOM Harvest usage report for the operator.
      operationId: getHarvestExportedDataStats
      summary: Get 'Harvest usage report' for the specified operator.
      x-soracom-cli:
        - stats harvest get
  '/stats/harvest/subscribers/{imsi}':
    get:
      produces:
        - application/json
      parameters:
        - description: imsi
          in: path
          name: imsi
          required: true
          type: string
        - description: Start time in unixtime for the aggregate data.
          in: query
          name: from
          required: true
          type: integer
        - description: End time in unixtime for the aggregate data.
          in: query
          name: to
          required: true
          type: integer
        - description: >-
            Units of aggregate data. For minutes, the interval is around 5
            minutes.
          enum:
            - month
            - day
            - minutes
          in: query
          name: period
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            items:
              $ref: '#/definitions/HarvestStatsResponse'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Stats
      description: >-
        Retrieves the Soracom Harvest usage report for the subscriber specified
        by the IMSI.
      operationId: getHarvestStats
      summary: Get Harvest Usage Report of Subscriber.
      x-soracom-cli:
        - stats harvest get
  /stats/napter/audit_logs:
    get:
      produces:
        - application/json
      parameters:
        - description: Year/Month in 'YYYYMM' format.
          in: query
          name: year_month
          required: false
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/NapterAuditLogsExportedDataStatsResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Stats
      description: Get Napter audit logs' monthly exported data stats
      operationId: getNapterAuditLogsExportedDataStats
      summary: Get Napter audit logs' monthly exported data stats
      x-soracom-cli:
        - stats napter audit-logs get
  /subscribers:
    get:
      produces:
        - application/json
      parameters:
        - description: Tag name for filtering the search (exact match).
          in: query
          name: tag_name
          required: false
          type: string
        - description: >-
            Tag search string for filtering the search. Required when `tag_name`
            has been specified.
          in: query
          name: tag_value
          required: false
          type: string
        - default: exact
          description: Tag match mode.
          enum:
            - exact
            - prefix
          in: query
          name: tag_value_match_mode
          required: false
          type: string
        - description: >-
            Status for filtering the search. Can specify multiple values
            delimited by `|`. Valid values include: `active`, `inactive`,
            `ready`, `instock`, `shipped`, `suspended`, and `terminated`.
          in: query
          name: status_filter
          required: false
          type: string
        - description: >-
            Speed class for filtering the search. Can specify multiple values
            delimited by `|`. Valid values include: `s1.minimum`, `s1.slow`,
            `s1.standard`, `s1.fast`
          in: query
          name: speed_class_filter
          required: false
          type: string
        - description: >-
            Serial number for filtering the search. Can specify multiple values
            delimited by `|`. Returns subscribers with serial number starting
            with the specified value(s).
          in: query
          name: serial_number_filter
          required: false
          type: string
        - description: >-
            Maximum number of subscribers to retrieve. Setting a limit does not
            guarantee the number of subscribers returned in the response (i.e.
            the response may contain fewer subscribers than the specified
            limit).
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The IMSI of the last subscriber retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next subscriber onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of subscribers.
          schema:
            items:
              $ref: '#/definitions/Subscriber'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: >-
        Returns a list of subscribers that match certain criteria. If the total
        number of subscribers does not fit in one page, a URL for accessing the
        next page is returned in the 'Link' header of the response.
      operationId: listSubscribers
      summary: List Subscribers.
      x-soracom-cli:
        - subscribers list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  /subscribers/export:
    post:
      produces:
        - application/json
      parameters:
        - default: sync
          description: 'export mode (async, sync)'
          enum:
            - async
            - sync
          in: query
          name: export_mode
          required: false
          type: string
      responses:
        '200':
          description: Where to export subscribers.
          schema:
            $ref: '#/definitions/FileExportResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Export all subscribers as a CSV file.
      operationId: exportSubscribers
      summary: Export all subscribers.
      x-soracom-cli:
        - subscribers export
  '/subscribers/msisdn/{msisdn}/send_sms':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: MSISDN of the target subscriber.
          in: path
          name: msisdn
          required: true
          type: string
        - description: >-
            SMS forwarding request that contains message body and its encoding
            type.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SmsForwardingRequest'
      responses:
        '202':
          description: SMS forwarding report containing message ID.
          schema:
            $ref: '#/definitions/SmsForwardingReport'
        '400':
          description: The specified subscriber does not support SMS API.
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Send SMS to a subscriber specified with MSISDN.
      operationId: sendSmsByMsisdn
      summary: Send SMS to Subscriber by MSISDN
      x-soracom-cli:
        - subscribers send-sms-by-msisdn
  /subscribers/transfer_token/issue:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: 'Destination operator''s email address, Operator ID, transferring IMSI'
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/IssueSubscriberTransferTokenRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IssueSubscriberTransferTokenResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: >-
        Sends the subscriber's inter-operator control transfer token to the
        control destination operator.
      operationId: issueSubscriberTransferToken
      summary: Issue Subscribers Transfer Token.
      x-soracom-cli:
        - subscribers issue-transfer-token
  /subscribers/transfer_token/verify:
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Subscriber transfer token that noticed via email.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VerifySubscriberTransferTokenRequest'
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/VerifySubscriberTransferTokenResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: >-
        Verifies the subscriber's control transfer token, and executes the
        transfer. This API is called from the operator of the control
        destination.
      operationId: verifySubscriberTransferToken
      summary: Verify Subscriber Transfer Token.
      x-soracom-cli:
        - subscribers verify-transfer-token
  '/subscribers/transfer_token/{token}':
    delete:
      parameters:
        - description: token
          in: path
          name: token
          required: true
          type: string
      responses:
        '204':
          description: Deletion implemented.
        '404':
          description: The token does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: >-
        Deletes the subscriber's inter-operator control transfer token, and
        cancels the control transfer.
      operationId: deleteSubscriberTransferToken
      summary: Delete Subscribers Transfer Token.
      x-soracom-cli:
        - subscribers delete-transfer-token
  '/subscribers/{imsi}':
    get:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: The subscriber's detailed information.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Returns information about the specified subscriber.
      operationId: getSubscriber
      summary: Get Subscriber.
      x-soracom-cli:
        - subscribers get
  '/subscribers/{imsi}/activate':
    post:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Activates status of specified subscriber.
      operationId: activateSubscriber
      summary: Activate Subscriber.
      x-soracom-cli:
        - subscribers activate
  '/subscribers/{imsi}/bundles':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
        - description: Array of bundles to be set.
          in: body
          name: body
          required: true
          schema:
            items:
              type: string
            type: array
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Sets bundles to the specified subscriber.
      operationId: putBundles
      summary: Set Bundles to Subscriber.
      x-sam-operationId: putBundles
      x-soracom-cli:
        - subscribers put-bundles
  '/subscribers/{imsi}/data':
    get:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber that generated data entries.
          in: path
          name: imsi
          required: true
          type: string
        - description: >-
            Start time for the data entries search range (unixtime in
            milliseconds).
          in: query
          name: from
          required: false
          type: integer
        - description: >-
            End time for the data entries search range (unixtime in
            milliseconds).
          in: query
          name: to
          required: false
          type: integer
        - default: desc
          description: >-
            Sort order of the data entries. Either descending (latest data entry
            first) or ascending (oldest data entry first).
          enum:
            - desc
            - asc
          in: query
          name: sort
          required: false
          type: string
        - description: Maximum number of data entries to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The value of `time` in the last log entry retrieved in the previous
            page. By specifying this parameter, you can continue to retrieve the
            list from the next page onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of data entries.
          schema:
            items:
              $ref: '#/definitions/DataEntry'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: >-
        Returns a list of data entries sent from a subscriber that match certain
        criteria. If the total number of entries does not fit in one page, a URL
        for accessing the next page is returned in the 'Link' header of the
        response.
      operationId: getDataFromSubscriber
      summary: Get data sent from a subscriber.
      x-soracom-cli:
        - data get
        - subscribers get-data
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/subscribers/{imsi}/deactivate':
    post:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Deactivates specified subscriber.
      operationId: deactivateSubscriber
      summary: Deactivate Subscriber.
      x-soracom-cli:
        - subscribers deactivate
  '/subscribers/{imsi}/delete_session':
    post:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Deletes session for the specified subscriber.
      operationId: deleteSubscriberSession
      summary: Delete Session
      x-soracom-cli:
        - subscribers delete-session
  '/subscribers/{imsi}/disable_termination':
    post:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Disables termination of specified subscriber.
      operationId: disableTermination
      summary: Disable Termination of Subscriber.
      x-soracom-cli:
        - subscribers disable-termination
  '/subscribers/{imsi}/downlink/ping':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
        - description: ping options
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DownlinkPingRequest'
      responses:
        '200':
          description: Result of the ping
          schema:
            $ref: '#/definitions/DownlinkPingResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Send ICMP ping requests to a subscriber.
      operationId: sendSubscriberDownlinkPing
      summary: Send ping requests to a subscriber.
      x-soracom-cli:
        - subscribers downlink-ping
  '/subscribers/{imsi}/enable_termination':
    post:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Enables termination of specified subscriber.
      operationId: enableTermination
      summary: Enable Termination of Subscriber.
      x-soracom-cli:
        - subscribers enable-termination
  '/subscribers/{imsi}/events/sessions':
    get:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
        - description: Start time for the events search range (unixtime).
          in: query
          name: from
          required: false
          type: integer
        - description: End time for the events search range (unixtime).
          in: query
          name: to
          required: false
          type: integer
        - description: Maximum number of events to retrieve.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The time stamp of the last event retrieved on the current page. By
            specifying this parameter, you can continue to retrieve the list
            from the next event onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: A list of session events
          schema:
            items:
              $ref: '#/definitions/SessionEvent'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: >-
        Returns the event history for the specified subscriber, including
        session creation, change, and deletion. If the total number of events
        does not fit in one page, a URL for accessing the next page is returned
        in the `Link` header of the response.
      operationId: listSessionEvents
      summary: List Session Events.
      x-soracom-cli:
        - subscribers session-events
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
  '/subscribers/{imsi}/register':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
        - description: subscriber
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegisterSubscribersRequest'
      responses:
        '201':
          description: Subscriber registration complete.
          schema:
            $ref: '#/definitions/Subscriber'
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Registers a subscriber.
      operationId: registerSubscriber
      summary: Register Subscriber.
      x-soracom-cli:
        - subscribers register
  '/subscribers/{imsi}/report_local_info':
    post:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '202':
          description: >-
            The local info reporting has successfully been triggered. The
            subscriber information is asynchronously updated when the SIM
            reports the information back.
          schema:
            $ref: '#/definitions/Subscriber'
        '400':
          description: >-
            The specified subscriber does not support local info reporting
            feature.
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Triggers Subscriber to report SIM local info.
      operationId: reportLocalInfo
      summary: Triggers Subscriber to report SIM local info.
      x-soracom-cli:
        - subscribers report-local-info
  '/subscribers/{imsi}/send_sms':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
        - description: >-
            SMS forwarding request that contains message body and its encoding
            type.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SmsForwardingRequest'
      responses:
        '202':
          description: SMS forwarding report containing message ID.
          schema:
            $ref: '#/definitions/SmsForwardingReport'
        '400':
          description: The specified subscriber does not support SMS API.
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Send SMS to the specified subscriber.
      operationId: sendSms
      summary: Send SMS to Subscriber
      x-soracom-cli:
        - subscribers send-sms
  '/subscribers/{imsi}/set_expiry_time':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
        - description: 'Expiry time after the update (unixtime: in milliseconds).'
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExpiryTime'
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Updates expiry time of specified subscriber.
      operationId: setExpiryTime
      summary: Update Expiry Time of Subscriber.
      x-soracom-cli:
        - subscribers set-expiry-time
  '/subscribers/{imsi}/set_group':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
        - description: Group (may include ID only).
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetGroupRequest'
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Sets or overwrites a group for the specified subscriber.
      operationId: setGroup
      summary: Set Group to Subscriber.
      x-soracom-cli:
        - subscribers set-group
  '/subscribers/{imsi}/set_imei_lock':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
        - description: >-
            IMEI lock configuration for the subscriber. (IMEI can be left blank
            for locking to the current IMEI of an online subscriber.)
          in: body
          name: body
          schema:
            $ref: '#/definitions/SetImeiLockRequest'
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '400':
          description: Invalid IMEI string or subscriber is offline and IMEI not specified.
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Set IMEI that the subscriber should be locked to.
      operationId: setImeiLock
      summary: Set IMEI lock configuration for Subscriber.
      x-soracom-cli:
        - subscribers set-imei-lock
  '/subscribers/{imsi}/set_to_standby':
    post:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '400':
          description: The specified subscriber does not support standby mode.
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Set the specified subscriber to standby mode.
      operationId: setSubscriberToStandby
      summary: Set Subscriber to standby mode.
      x-soracom-cli:
        - subscribers set-to-standby
  '/subscribers/{imsi}/suspend':
    post:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Suspends the specified subscriber
      operationId: suspendSubscriber
      summary: Suspend Subscriber.
      x-soracom-cli:
        - subscribers suspend
  '/subscribers/{imsi}/tags':
    put:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
        - description: Array of tags to be inserted/updated.
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/TagUpdateRequest'
            type: array
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Inserts/updates tags for the specified subscriber.
      operationId: putSubscriberTags
      summary: Bulk Insert or Update Subscriber Tags.
      x-sam-operationId: putTags
      x-soracom-cli:
        - subscribers put-tags
  '/subscribers/{imsi}/tags/{tag_name}':
    delete:
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
        - description: >-
            Tag name to be deleted. (This will be part of a URL path, so it
            needs to be percent-encoded. In JavaScript, specify the name after
            it has been encoded using encodeURIComponent().)
          in: path
          name: tag_name
          required: true
          type: string
      responses:
        '204':
          description: Deletion of specified tag complete.
        '404':
          description: The specified subscriber or the tag does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Deletes a tag from the specified subscriber.
      operationId: deleteSubscriberTag
      summary: Delete Subscriber Tag.
      x-sam-operationId: deleteTag
      x-soracom-cli:
        - subscribers delete-tag
  '/subscribers/{imsi}/terminate':
    post:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          format: IMSI
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Terminates the specified subscriber
      operationId: terminateSubscriber
      summary: Terminate Subscriber.
      x-soracom-cli:
        - subscribers terminate
  '/subscribers/{imsi}/unset_expiry_time':
    post:
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '204':
          description: Change of specified subscriber's expiry time to indefinite complete.
        '404':
          description: >-
            The specified subscriber does not exist or the subscriber does not
            have an expiry time.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: >-
        Deletes expiry time of specified subscriber and changes it to
        indefinite.
      operationId: unsetExpiryTime
      summary: Delete Expiry Time of Subscriber.
      x-soracom-cli:
        - subscribers unset-expiry-time
  '/subscribers/{imsi}/unset_group':
    post:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: >-
            The specified subscriber does not exist or the subscriber does not
            belong to a group.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Removes the group configuration from the specified subscriber.
      operationId: unsetGroup
      summary: Unset Group to Subscriber.
      x-soracom-cli:
        - subscribers unset-group
  '/subscribers/{imsi}/unset_imei_lock':
    post:
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Remove any existing IMEI lock configuration for the subscriber.
      operationId: unsetImeiLock
      summary: Unset IMEI lock configuration for Subscriber.
      x-soracom-cli:
        - subscribers unset-imei-lock
  '/subscribers/{imsi}/update_speed_class':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: IMSI of the target subscriber.
          in: path
          name: imsi
          required: true
          type: string
        - description: speed_class
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateSpeedClassRequest'
      responses:
        '200':
          description: The subscriber's detailed information after the update.
          schema:
            $ref: '#/definitions/Subscriber'
        '404':
          description: The specified subscriber does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - Subscriber
      description: Changes the speed class of the specified subscriber.
      operationId: updateSpeedClass
      summary: Update Subscriber speed class.
      x-soracom-cli:
        - subscribers update-speed-class
  /virtual_private_gateways:
    get:
      produces:
        - application/json
      parameters:
        - description: >-
            Tag name of the VPG. Filters through all VPGs that exactly match the
            tag name. When tag_name is specified, tag_value is required.
          in: query
          name: tag_name
          required: false
          type: string
        - description: Tag value of the VPGs.
          in: query
          name: tag_value
          required: false
          type: string
        - default: exact
          description: Tag match mode.
          enum:
            - exact
            - prefix
          in: query
          name: tag_value_match_mode
          required: false
          type: string
        - description: Maximum number of results per response page.
          in: query
          name: limit
          required: false
          type: integer
        - description: >-
            The last group ID retrieved on the current page. By specifying this
            parameter, you can continue to retrieve the list from the next VPG
            onward.
          in: query
          name: last_evaluated_key
          required: false
          type: string
      responses:
        '200':
          description: List of VPGs.
          schema:
            items:
              $ref: '#/definitions/VirtualPrivateGateway'
            type: array
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Returns a list of VPGs.
      operationId: listVirtualPrivateGateways
      summary: List Virtual Private Gateways.
      x-soracom-cli:
        - vpg list
      x-soracom-cli-pagination:
        request:
          param: last_evaluated_key
        response:
          header: x-soracom-next-key
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Request containing information for the new VPG to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateVirtualPrivateGatewayRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/VirtualPrivateGateway'
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Create new VPG.
      operationId: createVirtualPrivateGateway
      summary: Create Virtual Private Gateway.
      x-soracom-cli:
        - vpg create
  '/virtual_private_gateways/{vpg_id}':
    get:
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
      responses:
        '200':
          description: The specified VPG.
        '404':
          description: The specified VPG does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Retrieves information about the specified VPG.
      operationId: getVirtualPrivateGateway
      summary: Get Virtual Private Gateway.
      x-soracom-cli:
        - vpg get
  '/virtual_private_gateways/{vpg_id}/gate/close':
    post:
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
      responses:
        '200':
          description: SORACOM Gate is successfully closed on the VPG.
        '400':
          description: Client side error.
        '404':
          description: The specified VPG does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Close SORACOM Gate on the specified VPG.
      operationId: closeGate
      summary: Close SORACOM Gate.
      x-soracom-cli:
        - vpg close-gate
  '/virtual_private_gateways/{vpg_id}/gate/open':
    post:
      consumes:
        - application/json
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
        - description: Optional configuration parameters for Gate.
          in: body
          name: body
          schema:
            $ref: '#/definitions/OpenGateRequest'
      responses:
        '200':
          description: SORACOM Gate is successfully opened on the VPG.
        '400':
          description: Client side error.
        '404':
          description: The specified VPG does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Open SORACOM Gate on the specified VPG.
      operationId: openGate
      summary: Open SORACOM Gate.
      x-soracom-cli:
        - vpg open-gate
  '/virtual_private_gateways/{vpg_id}/gate/peers':
    get:
      produces:
        - application/json
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
      responses:
        '200':
          description: List of peers registered in the VPG.
          schema:
            items:
              $ref: '#/definitions/GatePeer'
            type: array
        '400':
          description: Client side error in the request.
        '404':
          description: The specified VPG does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: List Gate peers registered in the Virtual Private Gateway
      operationId: listGatePeers
      summary: List VPG Gate peers
      x-soracom-cli:
        - vpg list-gate-peers
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegisterGatePeerRequest'
      responses:
        '200':
          description: Gate peer is successfully registered.
          schema:
            $ref: '#/definitions/GatePeer'
        '400':
          description: Client side error in the request.
        '404':
          description: The specified VPG does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Register a host as a gate peer in the Virtual Private Gateway
      operationId: registerGatePeer
      summary: Register VPG Gate peer
      x-soracom-cli:
        - vpg register-gate-peer
  '/virtual_private_gateways/{vpg_id}/gate/peers/{outer_ip_address}':
    delete:
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
        - description: ID of the target node.
          in: path
          name: outer_ip_address
          required: true
          type: string
      responses:
        '204':
          description: Successfully deregistered the Gate peer.
        '400':
          description: Error in the request.
        '404':
          description: The specified VPG or node does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Unregister a gate peer from the Virtual Private Gateway
      operationId: unregisterGatePeer
      summary: Unregister VPG gate peer
      x-soracom-cli:
        - vpg unregister-gate-peer
  '/virtual_private_gateways/{vpg_id}/ip_address_map':
    get:
      produces:
        - application/json
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
      responses:
        '200':
          description: Successfully fetched the list of IP address map entries.
          schema:
            items:
              $ref: '#/definitions/IpAddressMapEntry'
            type: array
        '400':
          description: Error in the request.
        '404':
          description: The specified VPG or node does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: >-
        Describes the list of IP address map entries in the Virtual Private
        Gateway
      operationId: listVirtualPrivateGatewayIpAddressMapEntries
      summary: List VPG IP address map entries
      x-soracom-cli:
        - vpg list-ip-address-map-entries
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PutIpAddressMapEntryRequest'
      responses:
        '200':
          description: Successfully put an entry for the specified key and IP address.
          schema:
            $ref: '#/definitions/IpAddressMapEntry'
        '400':
          description: Error in the request.
        '404':
          description: The specified VPG or node does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Puts an entry in VPG IP address map.
      operationId: putVirtualPrivateGatewayIpAddressMapEntry
      summary: Put an entry in VPG IP address map
      x-soracom-cli:
        - vpg put-ip-address-map-entry
  '/virtual_private_gateways/{vpg_id}/ip_address_map/{key}':
    delete:
      produces:
        - application/json
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
        - description: Target key to remove.
          in: path
          name: key
          required: true
          type: string
      responses:
        '204':
          description: Successfully deleted the entry from the VPG IP address map.
          schema:
            $ref: '#/definitions/IpAddressMapEntry'
        '400':
          description: Error in the request.
        '404':
          description: The specified VPG or node does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Deletes an entry in VPG IP address map.
      operationId: deleteVirtualPrivateGatewayIpAddressMapEntry
      summary: Delete VPG IP address map entry
      x-soracom-cli:
        - vpg delete-ip-address-map-entry
  '/virtual_private_gateways/{vpg_id}/junction/mirroring/peers':
    post:
      consumes:
        - application/json
      parameters:
        - description: VPG ID
          in: path
          name: vpg_id
          required: true
          type: string
        - description: Mirroring peer
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/JunctionMirroringPeer'
      responses:
        '201':
          description: Mirroring peer added/updated
        '404':
          description: No such VPG found
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Add node in the list of Junction mirroring peers
      operationId: createMirroringPeer
      summary: Add node in the list of Junction mirroring peers
      x-soracom-cli:
        - vpg create-mirroring-peer
  '/virtual_private_gateways/{vpg_id}/junction/mirroring/peers/{ipaddr}':
    delete:
      parameters:
        - description: VPG ID
          in: path
          name: vpg_id
          required: true
          type: string
        - description: IP address of mirroring peer
          in: path
          name: ipaddr
          required: true
          type: string
      responses:
        '204':
          description: Mirroring peer removed
        '404':
          description: No such VPG found
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Remove peer from the list of Junction mirroring peers
      operationId: deleteMirroringPeer
      summary: Remove peer from the list of Junction mirroring peers
      x-soracom-cli:
        - vpg delete-mirroring-peer
    put:
      consumes:
        - application/json
      parameters:
        - description: VPG ID
          in: path
          name: vpg_id
          required: true
          type: string
        - description: Mirroring peer IP address
          in: path
          name: ipaddr
          required: true
          type: string
        - description: List of attributes to update
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/AttributeUpdate'
            type: array
      responses:
        '200':
          description: Mirroring peer updated
        '404':
          description: No such VPG found
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Update a Junction mirroring peer
      operationId: updateMirroringPeer
      summary: Update a Junction mirroring peer
      x-soracom-cli:
        - vpg update-mirroring-peer
  '/virtual_private_gateways/{vpg_id}/junction/set_inspection':
    post:
      consumes:
        - application/json
      parameters:
        - description: VPG ID
          in: path
          name: vpg_id
          required: true
          type: string
        - description: Inspection configuration
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/JunctionInspectionConfiguration'
      responses:
        '200':
          description: Configuration added/updated
        '404':
          description: No such VPG found
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Set configuration for Junction inspection feature
      operationId: setInspectionConfiguration
      summary: Set configuration for Junction inspection feature
      x-soracom-cli:
        - vpg set-inspection
  '/virtual_private_gateways/{vpg_id}/junction/set_redirection':
    post:
      consumes:
        - application/json
      parameters:
        - description: VPG ID
          in: path
          name: vpg_id
          required: true
          type: string
        - description: Redirection configuration
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/JunctionRedirectionConfiguration'
      responses:
        '200':
          description: Configuration added/updated
        '404':
          description: No such VPG found
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Set configuration for Junction redirection feature
      operationId: setRedirectionConfiguration
      summary: Set configuration for Junction redirection feature
      x-soracom-cli:
        - vpg set-redirection
  '/virtual_private_gateways/{vpg_id}/junction/unset_inspection':
    post:
      parameters:
        - description: VPG ID
          in: path
          name: vpg_id
          required: true
          type: string
      responses:
        '200':
          description: Configuration unset
        '404':
          description: No such VPG found
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Unset configuration for Junction inspection feature
      operationId: unsetInspectionConfiguration
      summary: Unset configuration for Junction inspection feature
      x-soracom-cli:
        - vpg unset-inspection
  '/virtual_private_gateways/{vpg_id}/junction/unset_redirection':
    post:
      parameters:
        - description: VPG ID
          in: path
          name: vpg_id
          required: true
          type: string
      responses:
        '200':
          description: Configuration unset
        '404':
          description: No such VPG found
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Unset configuration for Junction redirection feature
      operationId: unsetRedirectionConfiguration
      summary: Unset configuration for Junction redirection feature
      x-soracom-cli:
        - vpg unset-redirection
  '/virtual_private_gateways/{vpg_id}/packet_capture_sessions':
    get:
      produces:
        - application/json
      parameters:
        - description: VPG ID
          in: path
          name: vpg_id
          required: true
          type: string
        - default: 'null'
          description: ID of the last group in the previous page
          in: query
          name: last_evaluated_key
          required: false
          type: string
        - default: 10
          description: Max number of results in a response
          format: int32
          in: query
          name: limit
          required: false
          type: integer
      responses:
        '200':
          description: List of packet capture sessions associated with the VPG
          schema:
            items:
              $ref: '#/definitions/PacketCaptureSession'
            type: array
        '400':
          description: Failed to list packet capture sessions associated with the VPG
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: List packet capture sessions associated with the VPG
      operationId: listPacketCaptureSessions
      summary: List Packet Capture Sessions
      x-soracom-cli:
        - vpg list-packet-capture-sessions
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: VPG ID
          in: path
          name: vpg_id
          required: true
          type: string
        - description: A packet capture session request
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PacketCaptureSessionRequest'
      responses:
        '200':
          description: Created a new packet capture sessions associated with the VPG
          schema:
            $ref: '#/definitions/PacketCaptureSession'
        '400':
          description: Failed to create a packet capture sessions associated with the VPG
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Create a packet capture sessions associated the VPG
      operationId: createPacketCaptureSession
      summary: Create Packet Capture Session
      x-soracom-cli:
        - vpg create-packet-capture-session
  '/virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}':
    delete:
      produces:
        - application/json
      parameters:
        - description: VPG ID
          in: path
          name: vpg_id
          required: true
          type: string
        - description: Packet capture session ID
          in: path
          name: session_id
          required: true
          type: string
      responses:
        '200':
          description: Deleted the packet capture sessions associated with the VPG
          schema:
            $ref: '#/definitions/PacketCaptureSession'
        '400':
          description: >-
            Failed to delete the packet capture sessions associated with the VPG
            was not found
        '404':
          description: The packet capture sessions associated with the VPG was not found
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Delete a packet capture sessions associated the VPG
      operationId: deletePacketCaptureSession
      summary: Delete Packet Capture Session
      x-soracom-cli:
        - vpg delete-packet-capture-session
    get:
      produces:
        - application/json
      parameters:
        - description: VPG ID
          in: path
          name: vpg_id
          required: true
          type: string
        - description: Packet capture session ID
          in: path
          name: session_id
          required: true
          type: string
      responses:
        '200':
          description: The packet capture sessions associated with the VPG
          schema:
            $ref: '#/definitions/PacketCaptureSession'
        '404':
          description: The packet capture sessions associated with the VPG was not found
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Get a packet capture sessions associated the VPG
      operationId: getPacketCaptureSession
      summary: Get Packet Capture Session
      x-soracom-cli:
        - vpg get-packet-capture-session
  '/virtual_private_gateways/{vpg_id}/packet_capture_sessions/{session_id}/stop':
    post:
      produces:
        - application/json
      parameters:
        - description: VPG ID
          in: path
          name: vpg_id
          required: true
          type: string
        - description: Packet capture session ID
          in: path
          name: session_id
          required: true
          type: string
      responses:
        '200':
          description: The stopped packet capture session associated with the VPG
          schema:
            $ref: '#/definitions/PacketCaptureSession'
        '400':
          description: >-
            The packet capture session can be stopped only when its status is
            CAPTURING
        '404':
          description: The packet capture session associated with the VPG was not found
        '500':
          description: The packet capture session could not be stopped
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Stop a packet capture session associated with the VPG
      operationId: stopPacketCaptureSession
      summary: Stop Packet Capture Session
      x-soracom-cli:
        - vpg stop-packet-capture-session
  '/virtual_private_gateways/{vpg_id}/set_routing_filter':
    post:
      consumes:
        - application/json
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
        - description: List of routing filter entries
          in: body
          name: body
          required: true
          schema:
            items:
              $ref: '#/definitions/RoutingFilterEntry'
            type: array
      responses:
        '200':
          description: The routing filter is successfully configured.
        '400':
          description: Invalid argument is given
        '404':
          description: The specified VPG does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Sets Virtual Private Gateway outbound routing filter.
      operationId: setRoutingFilter
      summary: Sets Virtual Private Gateway outbound routing filter.
      x-soracom-cli:
        - vpg set-routing-filter
  '/virtual_private_gateways/{vpg_id}/terminate':
    post:
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
      responses:
        '200':
          description: Termination of specified VPG started.
        '400':
          description: There is a reason why the specified VPG cannot be terminated.
        '404':
          description: The specified VPG does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Terminates the specified VPG.
      operationId: terminateVirtualPrivateGateway
      summary: Terminate Virtual Private Gateway.
      x-soracom-cli:
        - vpg terminate
  '/virtual_private_gateways/{vpg_id}/vpc_peering_connections':
    post:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
        - description: VPC peering connection to be created.
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateVpcPeeringConnectionRequest'
      responses:
        '201':
          description: The created VPC peering connection.
          schema:
            $ref: '#/definitions/CreateVpcPeeringConnectionRequest'
        '404':
          description: The specified VPC peering connection does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Creates a VPC peering connection for the specified VPG.
      operationId: createVpcPeeringConnection
      summary: Create VPC Peering Connection
      x-soracom-cli:
        - vpg create-vpc-peering-connection
  '/virtual_private_gateways/{vpg_id}/vpc_peering_connections/{pcx_id}':
    delete:
      parameters:
        - description: Target VPG ID.
          in: path
          name: vpg_id
          required: true
          type: string
        - description: VPC peering connection ID to be deleted.
          in: path
          name: pcx_id
          required: true
          type: string
      responses:
        '204':
          description: Deletion of specified VPC peering connection complete.
        '404':
          description: The specified VPC peering connection does not exist.
      security:
        - api_key: []
          api_token: []
      tags:
        - VirtualPrivateGateway
      description: Deletes the specified VPC peering connection.
      operationId: deleteVpcPeeringConnection
      summary: Delete VPC Peering Connection.
      x-soracom-cli:
        - vpg delete-vpc-peering-connection
  /volume_discounts:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters: []
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/ListVolumeDiscountResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Payment
      description: Returns a list of contracted long term discounts.
      operationId: listVolumeDiscounts
      summary: List long term discounts.
      x-soracom-cli:
        - volume-discounts list
    post:
      consumes:
        - application/json
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: Long term discount contract details
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateEstimatedVolumeDiscountRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/EstimatedVolumeDiscountModel'
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: >-
        Creates a new long term discount quotation. If the orderId is put in
        /confirm, the order is complete. (Currently, long term discount is only
        applied to plan-D, plan-K)
      operationId: createVolumeDiscountQuotation
      summary: Create long term discount quotation.
      x-soracom-cli:
        - volume-discounts create
  /volume_discounts/available_discounts:
    get:
      produces:
        - application/json;charset=UTF-8
      parameters: []
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/AvailableLongTermDiscountResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: Returns a list of available long term discounts.
      operationId: listAvailableDiscounts
      summary: List available long term discounts.
      x-soracom-cli:
        - volume-discounts available-discounts
  '/volume_discounts/{contract_id}':
    get:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: contract_id
          in: path
          name: contract_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GetVolumeDiscountResponse'
        '400':
          description: Long term discount not found.
      security:
        - api_key: []
          api_token: []
      tags:
        - Payment
      description: Returns contracted long term discount.
      operationId: getVolumeDiscount
      summary: Get long term discount.
      x-soracom-cli:
        - volume-discounts get
  '/volume_discounts/{order_id}/confirm':
    put:
      produces:
        - application/json;charset=UTF-8
      parameters:
        - description: order_id
          in: path
          name: order_id
          required: true
          type: string
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/GetVolumeDiscountResponse'
      security:
        - api_key: []
          api_token: []
      tags:
        - Order
      description: >-
        Performs a credit limit and confirms the order if no problems are
        encountered.
      operationId: confirmVolumeDiscountOrder
      summary: Confirm long term discount order.
      x-soracom-cli:
        - volume-discounts confirm
definitions:
  APIAuditLogEntry:
    properties:
      apiKind:
        description: The kind of the API (e.g. `/v1/auth`).
        type: string
      operatorId:
        description: The operator ID that called the API.
        type: string
      remoteIpAddress:
        description: The IP address of the caller.
        type: string
      requestPath:
        description: The request path that has been called.
        type: string
      requestedTimeEpochMs:
        description: >-
          The timestamp of the API call. This can be used as the
          `last_evaluated_key` request parameter, for pagination.
        format: int64
        type: integer
      userName:
        description: >-
          The SAM username that called the API, if this parameter is empty, it
          means the caller user is the root user.
        type: string
    type: object
  APICallError:
    properties:
      errorMessage:
        $ref: '#/definitions/APICallErrorMessage'
      httpStatus:
        format: int32
        type: integer
    type: object
  APICallErrorMessage:
    properties:
      code:
        description: エラーコード
        type: string
      message:
        description: >-
          エラーメッセージ。リクエスト時に X-Soracom-Lang
          ヘッダーに言語(en,ja)を設定するとその言語のメッセージがセットされます。
        type: string
    required:
      - code
      - message
    type: object
  ActionConfig:
    properties:
      properties:
        $ref: '#/definitions/ActionConfigProperty'
      type:
        enum:
          - ChangeSpeedClassAction
          - InvokeAWSLambdaAction
          - ExecuteWebRequestAction
          - SendMailAction
          - SendMailToOperatorAction
          - ActivationAction
          - DeactivationAction
          - StandbyAction
          - SuspendAction
        type: string
    required:
      - properties
      - type
    type: object
  ActionConfigProperty:
    properties:
      accessKey:
        description: Only for InvokeAWSLambdaAction
        type: string
      body:
        description: Only for ExecuteWebRequestAction (Optional)
        type: string
      contentType:
        description: Only for ExecuteWebRequestAction
        type: string
      endpoint:
        description: Only for InvokeAWSLambdaAction
        type: string
      executionDateTimeConst:
        enum:
          - IMMEDIATELY
          - BEGINNING_OF_NEXT_MONTH
          - BEGINNING_OF_NEXT_DAY
          - AFTER_ONE_DAY
          - NEVER
        type: string
      executionOffsetMinutes:
        description: Run in the minutes after the timing of executionDateTimeConst
        type: string
      functionName:
        description: Only for InvokeAWSLambdaAction
        type: string
      headers:
        description: Only for ExecuteWebRequestAction (Optional)
        type: object
      httpMethod:
        description: Only for ExecuteWebRequestAction
        enum:
          - GET
          - POST
          - PUT
          - DELETE
        type: string
      message:
        description: 'Only for SendMailAction, SendMailToOperatorAction'
        type: string
      parameter1:
        description: Only for InvokeAWSLambdaAction
        type: string
      parameter2:
        description: Only for InvokeAWSLambdaAction
        type: string
      parameter3:
        description: Only for InvokeAWSLambdaAction
        type: string
      parameter4:
        description: Only for InvokeAWSLambdaAction
        type: string
      parameter5:
        description: Only for InvokeAWSLambdaAction
        type: string
      secretAccessKey:
        description: Only for InvokeAWSLambdaAction
        type: string
      speedClass:
        description: Only for ChangeSpeedClassAction
        enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
          - s1.4xfast
        type: string
      title:
        description: 'Only for SendMailAction, SendMailToOperatorAction'
        type: string
      to:
        description: Only for SendMailAction
        type: string
      url:
        description: Access URL and parameters. Only for ExecuteWebRequestAction
        type: string
    required:
      - executionDateTimeConst
    type: object
  AirStatsResponse:
    properties:
      dataTrafficStatsMap:
        additionalProperties:
          $ref: '#/definitions/DataTrafficStats'
        type: object
      date:
        type: string
      unixtime:
        format: int64
        type: integer
    type: object
  ArcCredentialAttachRequest:
    properties:
      arcClientPeerPublicKey:
        description: 'if this parameter is missing, the sever generates keypair'
        type: string
    type: object
  ArcCredentialAttachResponse:
    properties:
      arcClientPeerPrivateKey:
        type: string
      arcClientPeerPublicKey:
        type: string
    type: object
  ArcCredentialRenewRequest:
    properties:
      arcClientPeerPublicKey:
        description: 'if this parameter is missing, the sever generates keypair'
        type: string
    type: object
  ArcCredentialRenewResponse:
    properties:
      arcClientPeerPrivateKey:
        type: string
      arcClientPeerPublicKey:
        type: string
    type: object
  ArcSessionCreateResponse:
    properties:
      arcAllowedIPs:
        items:
          type: string
        type: array
      arcClientPeerIpAddress:
        type: string
      arcClientPeerPublicKey:
        type: string
      arcServerEndpoint:
        type: string
      arcServerPeerPublicKey:
        type: string
    type: object
  ArcSessionStatus:
    properties:
      arcAllowedIPs:
        items:
          type: string
        type: array
      arcClientPeerIpAddress:
        type: string
      arcClientPeerPublicKey:
        type: string
      arcServerEndpoint:
        type: string
      arcServerPeerPublicKey:
        type: string
      gatewayPrivateIpAddress:
        type: string
      gatewayPublicIpAddress:
        type: string
      lastUpdatedAt:
        format: int64
        type: integer
      vpgId:
        type: string
    type: object
  AttachRoleRequest:
    properties:
      roleId:
        type: string
    type: object
  AttributeUpdate:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  AuthKeyResponse:
    properties:
      authKeyId:
        type: string
      createDateTime:
        format: int64
        type: integer
      lastUsedDateTime:
        format: int64
        type: integer
    type: object
  AuthRequest:
    properties:
      authKey:
        type: string
      authKeyId:
        type: string
      email:
        type: string
      mfaOTPCode:
        type: string
      operatorId:
        type: string
      password:
        type: string
      tokenTimeoutSeconds:
        default: 86400
        format: int64
        maximum: 172800
        type: integer
      userName:
        type: string
    type: object
  AuthResponse:
    properties:
      apiKey:
        type: string
      operatorId:
        type: string
      token:
        type: string
      userName:
        type: string
    type: object
  AvailableLongTermDiscountModel:
    properties:
      contractTermMonth:
        default: 12
        description: Contract months
        format: int32
        type: integer
      unitPrice:
        description: Unit price
        format: double
        type: number
      volumeDiscountPaymentType:
        description: Payment type
        enum:
          - MONTHLY
          - PREPAYMENT
        type: string
      volumeDiscountType:
        description: Long term discount type
        enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
        type: string
    type: object
  AvailableLongTermDiscountResponse:
    properties:
      availableLongTermDiscounts:
        description: List of available long term discounts
        items:
          $ref: '#/definitions/AvailableLongTermDiscountModel'
        type: array
    type: object
  BeamStatsResponse:
    properties:
      beamStatsMap:
        additionalProperties:
          $ref: '#/definitions/SoracomBeamStats'
        type: object
      date:
        type: string
      unixtime:
        format: int64
        type: integer
    type: object
  Capabilities:
    properties:
      data:
        type: boolean
      sms:
        type: boolean
    type: object
  Cell:
    properties:
      ci:
        description: >-
          The Cell Identity (for 2G and 3G networks), a 16 bit value represented
          in decimal form as an integer. (See 3GPP TS 23.003 4.3)
        type: integer
      eci:
        description: >-
          The E-UTRAN Cell Identifier (for LTE networks), a 28 bit value
          represented in decimal form as a long. (See 3GPP TS 23.003 19.6)
        type: integer
      lac:
        description: >-
          The Location Area Code (for 2G and 3G networks), a 16 bit value
          represented in decimal form as an integer. (See 3GPP TS 23.003 4.1)
        type: integer
      mcc:
        description: 'The Mobile Country Code, a 3 digit number.'
        type: integer
      mnc:
        description: >-
          The Mobile Network Code, a 2 or 3 digit number. If the value returned
          is only 1 digit in length, then you should prepend the value with a
          leading zero.
        type: integer
      rac:
        description: >-
          The Routing Area Code (for 2G and 3G networks), an 8 bit value
          represented in decimal form as an integer. (See 3GPP TS 23.003 4.2)
        type: integer
      radioType:
        description: >-
          The Radio Access Technology or type of network that the device is
          connected to. Possible values are "gsm" for 2G or 3G networks, or
          "lte" for LTE networks. Unfortunately, it is not possible to
          differentiate 2G from 3G, or LTE from LTE Cat-M1.
        type: string
      sac:
        description: >-
          The Service Area Code (for 2G and 3G networks), a 16 bit value
          represented in decimal form as an integer. (See 3GPP TS 23.003 12.5)
        type: integer
      tac:
        description: >-
          The Tracking Area Code (for LTE networks), a 16 bit value represented
          in decimal form as an integer. (See 3GPP TS 23.003 19.4.2.3)
        type: integer
    type: object
  CellIdentifier:
    properties:
      cid:
        type: string
      eci:
        type: string
      ecid:
        type: string
      identifier:
        description: optionally link the result to the request
        type: string
      lac:
        type: string
      mcc:
        type: string
      mnc:
        type: string
      tac:
        type: string
    type: object
  CellLocation:
    properties:
      avg_strength:
        description: >-
          Average signal strength from all observations for the cell network.
          This is an integer value, in dBm.
        format: int32
        type: integer
      created:
        description: Timestamp of the time when this record was first created.
        format: date-time
        type: string
      exact:
        description: >-
          Whether or not this cell is a position estimate based on observations
          subject to change in the future (`0`) or an exact location entered
          from a knowledgeable source (`1`).
        format: int32
        type: integer
      lat:
        description: Latitude
        format: double
        type: number
      lon:
        description: Longitude
        format: double
        type: number
      range:
        description: >-
          Estimate of radio range, in meters. This is an estimate on how large
          each cell area is, as a radius around the estimated position and is
          based on the observations or a knowledgeable source.
        format: int32
        type: integer
      samples:
        description: >-
          Total number of observations used to calculate the estimated position,
          range and avg_strength.
        format: int32
        type: integer
      updated:
        description: Timestamp of the time when this record was most recently modified.
        format: date-time
        type: string
    type: object
  CompanyInformationModel:
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      building:
        type: string
      city:
        type: string
      companyName:
        type: string
      contactPersonName:
        type: string
      countryCode:
        type: string
      department:
        type: string
      phoneNumber:
        type: string
      state:
        type: string
      vatIdentificationNumber:
        type: string
      zipCode:
        type: string
    required:
      - companyName
      - countryCode
      - zipCode
      - department
      - contactPersonName
      - phoneNumber
    type: object
  ContractUpdatedResponse:
    properties:
      contractDetail:
        type: object
      contractName:
        type: string
    type: object
  ContractUpdatingRequest:
    properties:
      contractDetail:
        type: object
      contractName:
        type: string
    type: object
  CouponResponse:
    properties:
      amount:
        description: Amount
        format: double
        type: number
      balance:
        description: Balance
        format: double
        type: number
      billItemName:
        description: Item
        type: string
      couponCode:
        description: Coupon code
        type: string
      expiryYearMonth:
        description: Expiry month
        example: yyyyMM
        type: string
      orderId:
        description: Order ID
        type: string
    type: object
  CreateAndUpdateCredentialsModel:
    properties:
      credentials:
        type: object
      description:
        type: string
      type:
        enum:
          - aws-credentials
          - azure-credentials
          - psk
          - x509
        type: string
    type: object
  CreateEstimatedCouponRequest:
    properties:
      amount:
        description: Amount
        format: double
        type: number
    required:
      - amount
    type: object
  CreateEstimatedOrderRequest:
    properties:
      orderItemList:
        description: Order item list
        items:
          $ref: '#/definitions/OrderItemModel'
        type: array
      shippingAddressId:
        description: Shipping address ID
        type: string
    type: object
  CreateEstimatedVolumeDiscountRequest:
    properties:
      contractTermMonth:
        default: 12
        description: Contract months
        format: int32
        type: integer
      quantity:
        description: Quantity
        format: int32
        type: integer
      startDate:
        description: Start date
        example: yyyyMMdd
        type: string
      volumeDiscountPaymentType:
        description: Payment type
        enum:
          - MONTHLY
          - PREPAYMENT
        type: string
      volumeDiscountType:
        description: Long term discount type
        enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
        type: string
    required:
      - volumeDiscountType
      - volumeDiscountPaymentType
      - contractTermMonth
      - quantity
    type: object
  CreateEventHandlerRequest:
    properties:
      actionConfigList:
        items:
          $ref: '#/definitions/ActionConfig'
        type: array
      description:
        type: string
      name:
        type: string
      ruleConfig:
        $ref: '#/definitions/RuleConfig'
      status:
        enum:
          - inactive
          - active
        type: string
      targetGroupId:
        type: string
      targetImsi:
        type: string
      targetOperatorId:
        type: string
      targetSimId:
        type: string
    required:
      - actionConfigList
      - ruleConfig
      - status
    type: object
  CreateGroupRequest:
    properties:
      tags:
        $ref: '#/definitions/TagSet'
    type: object
  CreateOrUpdateRoleRequest:
    properties:
      description:
        type: string
      permission:
        description: Permission の JSON
        type: string
    required:
      - permission
    type: object
  CreatePortMappingRequest:
    properties:
      destination:
        $ref: '#/definitions/PortMappingDestination'
      duration:
        description: >-
          Specify the duration, in seconds, that remote access should be
          enabled.
        type: number
      source:
        $ref: '#/definitions/PortMappingSource'
      tlsRequired:
        description: Specify whether access uses TLS.
        type: boolean
    required:
      - destination
    type: object
  CreateRoleResponse:
    properties:
      roleId:
        type: string
    type: object
  CreateSimRequest:
    properties:
      subscription:
        type: string
      type:
        enum:
          - virtual
        type: string
    required:
      - type
      - subscription
    type: object
  CreateSoraletRequest:
    properties:
      description:
        type: string
      soraletId:
        type: string
    required:
      - soraletId
    type: object
  CreateUserPasswordRequest:
    properties:
      password:
        type: string
    type: object
  CreateUserRequest:
    properties:
      description:
        type: string
    type: object
  CreateVirtualPrivateGatewayRequest:
    properties:
      deviceSubnetCidrRange:
        default: 10.128.0.0/9
        type: string
      type:
        description: |-
          VPG Type.
           - `14` : Type-E
           - `15` : Type-F
        enum:
          - 14
          - 15
        type: integer
      useInternetGateway:
        default: true
        type: boolean
    required:
      - type
    type: object
  CreateVpcPeeringConnectionRequest:
    properties:
      destinationCidrBlock:
        type: string
      peerOwnerId:
        type: string
      peerRegion:
        type: string
      peerVpcId:
        type: string
    type: object
  CredentialsModel:
    properties:
      createDateTime:
        format: int64
        type: integer
      credentials:
        type: object
      credentialsId:
        type: string
      description:
        type: string
      lastUsedDateTime:
        format: int64
        type: integer
      type:
        enum:
          - aws-credentials
          - azure-credentials
          - psk
          - x509
        type: string
      updateDateTime:
        format: int64
        type: integer
    type: object
  CreditCard:
    properties:
      cvc:
        type: string
      expireMonth:
        format: int32
        type: integer
      expireYear:
        format: int32
        type: integer
      name:
        type: string
      number:
        type: string
    type: object
  DailyBill:
    properties:
      amount:
        description: 金額
        format: int64
        type: integer
      date:
        description: 年月日
        example: yyyyMMdd
        type: string
    type: object
  DailyBillResponse:
    properties:
      billList:
        description: 日ごとの利用料リスト
        items:
          $ref: '#/definitions/DailyBill'
        type: array
    type: object
  DataEntry:
    properties:
      content:
        type: string
      contentType:
        type: string
      time:
        format: int64
        type: integer
    type: object
  DataSourceResourceMetadata:
    properties:
      attributeNames:
        items:
          type: string
        type: array
      lastModifiedTime:
        format: int64
        type: integer
      resourceId:
        type: string
      resourceType:
        type: string
    type: object
  DataTrafficStats:
    properties:
      downloadByteSizeTotal:
        format: int64
        type: integer
      downloadPacketSizeTotal:
        format: int64
        type: integer
      uploadByteSizeTotal:
        format: int64
        type: integer
      uploadPacketSizeTotal:
        format: int64
        type: integer
    type: object
  Device:
    properties:
      tags:
        additionalProperties:
          type: string
        type: object
      device_id:
        type: string
      endpoint:
        type: string
      firmwareVersion:
        type: string
      groupId:
        type: string
      ipAddress:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      lastRegistrationUpdate:
        format: date-time
        type: string
      manufacturer:
        type: string
      modelNumber:
        type: string
      objects:
        type: object
      online:
        default: false
        type: boolean
      operatorId:
        type: string
      registrationId:
        type: string
      registrationLifeTime:
        format: int64
        type: integer
      serialNumber:
        type: string
    type: object
  DeviceObjectModel:
    properties:
      createdTime:
        format: date-time
        type: string
      format:
        enum:
          - xml
          - json
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      objectId:
        type: string
      objectName:
        type: string
      operatorId:
        type: string
      scope:
        type: string
    type: object
  DiagnosticRequest:
    properties:
      from:
        description: Start time for diagnostic (unixtime milliseconds)
        format: int64
        type: integer
      resourceId:
        description: resourceId according to resourceType
        type: string
      resourceType:
        enum:
          - sim
        type: string
      service:
        enum:
          - Air
        type: string
      to:
        description: End time for diagnostic (unixtime milliseconds)
        format: int64
        type: integer
    required:
      - service
      - resourceType
      - resourceId
    type: object
  DiagnosticResponse:
    properties:
      diagnosticId:
        type: string
      from:
        description: Start time for diagnostic (unixtime milliseconds)
        format: int64
        type: integer
      insights:
        items:
          additionalProperties:
            $ref: '#/definitions/Insight'
          type: object
        type: array
      resourceId:
        description: resourceId according to resourceType
        type: string
      resourceType:
        enum:
          - sim
        type: string
      service:
        enum:
          - Air
        type: string
      status:
        enum:
          - diagnosing
          - done
          - failed
        type: string
      to:
        description: End time for diagnostic (unixtime milliseconds)
        format: int64
        type: integer
    type: object
  DownlinkPingRequest:
    properties:
      numberOfPingRequests:
        default: 1
        description: the number of attempt ping
        maximum: 5
        type: integer
      timeoutSeconds:
        default: 1
        description: the timeout duration of each ping
        maximum: 3
        type: integer
    type: object
  DownlinkPingResponse:
    properties:
      rtt:
        description: the RTT of the ping result
        type: string
      stat:
        description: the stats information of the ping result
        type: string
      success:
        description: whether the ping was succeeded or not
        type: boolean
    type: object
  EmailsModel:
    properties:
      createDateTime:
        format: int64
        type: integer
      email:
        type: string
      emailId:
        type: string
      updateDateTime:
        format: int64
        type: integer
      verified:
        description: Whether the email address was verified by token.
        type: boolean
    type: object
  EnableMFAOTPResponse:
    properties:
      totpUri:
        type: string
    type: object
  Error:
    properties:
      code:
        format: int32
        type: integer
      fields:
        type: string
      message:
        type: string
    type: object
  EstimatedCouponModel:
    properties:
      amount:
        description: Amount
        format: double
        type: number
      currency:
        description: Currency
        enum:
          - JPY
          - USD
        type: string
      expiryYearMonth:
        description: Expiry month
        example: yyyyMM
        type: string
      orderId:
        description: Order ID
        type: string
      taxAmount:
        description: Tax amount
        format: double
        type: number
      totalAmount:
        description: Total amount
        format: double
        type: number
    type: object
  EstimatedOrderItemModel:
    properties:
      product:
        $ref: '#/definitions/ProductModel'
      productAmount:
        description: Product amount
        format: double
        type: number
      quantity:
        description: Quantity
        format: int32
        type: integer
    type: object
  EstimatedOrderModel:
    properties:
      email:
        description: Email address
        type: string
      orderId:
        description: Order ID
        type: string
      orderItemList:
        description: Order item list
        items:
          $ref: '#/definitions/EstimatedOrderItemModel'
        type: array
      shippingAddress:
        $ref: '#/definitions/ShippingAddressModel'
      shippingAddressId:
        description: Shipping address ID
        type: string
      shippingCost:
        description: Shipping cost
        format: double
        type: number
      taxAmount:
        description: Tax amount
        format: double
        type: number
      totalAmount:
        description: Total amount
        format: double
        type: number
    type: object
  EstimatedVolumeDiscountModel:
    properties:
      currency:
        description: Currency
        enum:
          - JPY
          - USD
        type: string
      orderId:
        description: Order ID
        type: string
      taxAmount:
        description: Tax amount
        format: double
        type: number
      totalAmount:
        description: Total amount
        format: double
        type: number
      volumeDiscount:
        $ref: '#/definitions/VolumeDiscountModel'
    type: object
  EventHandlerModel:
    properties:
      actionConfigList:
        items:
          $ref: '#/definitions/ActionConfig'
        type: array
      description:
        type: string
      handlerId:
        type: string
      name:
        type: string
      ruleConfig:
        $ref: '#/definitions/RuleConfig'
      status:
        enum:
          - inactive
          - active
        type: string
      targetGroupId:
        type: string
      targetImsi:
        type: string
      targetOperatorId:
        type: string
      targetSimId:
        type: string
    required:
      - actionConfigList
      - handlerId
      - ruleConfig
      - status
      - name
    type: object
  ExecuteSoraletRequest:
    properties:
      contentType:
        type: string
      direction:
        enum:
          - uplink
          - downlink
        type: string
      encodingType:
        enum:
          - text
          - binary
        type: string
      payload:
        type: string
      source:
        additionalProperties:
          $ref: '#/definitions/SoraletDataSource'
        type: object
      userdata:
        type: string
      version:
        type: string
    required:
      - version
      - direction
      - contentType
      - payload
      - source
    type: object
  ExecuteSoraletResponse:
    properties:
      body:
        type: string
      contentType:
        type: string
      encodingType:
        type: string
      resultCode:
        format: int32
        type: integer
    type: object
  ExpiryTime:
    properties:
      expiryAction:
        enum:
          - doNothing
          - deleteSession
          - deactivate
          - suspend
          - terminate
        type: string
      expiryTime:
        description: >-
          The timestamp (in Unix milliseconds) of a date and time set using the
          Expiration function. If no Expiration function is set, null is
          returned.
        format: int64
        type: integer
    required:
      - expiryTime
    type: object
  ExportRequest:
    properties:
      from:
        format: int64
        type: integer
      period:
        enum:
          - month
          - day
          - minutes
        type: string
      to:
        format: int64
        type: integer
    type: object
  FileEntry:
    properties:
      contentLength:
        description: Content length of the file
        format: int64
        type: integer
      contentType:
        description: Content type of the file
        type: string
      createdTime:
        description: Created time of the file
        format: int64
        type: integer
      directory:
        description: Parent directory name
        type: string
      etag:
        description: Etag of the file
        type: string
      filePath:
        description: Absolute path of the file
        type: string
      filename:
        description: File name
        type: string
      isDirectory:
        description: Whether the entry is directory or not
        type: boolean
      lastModifiedTime:
        description: Last modified time of the file
        format: int64
        type: integer
    type: object
  FileExportResponse:
    properties:
      exportedFileId:
        description: ファイル出力 ID(リクエストに export_mode=async を指定した場合）
        type: string
      exportedFilePath:
        description: 出力済みファイル取得パス(リクエストに export_mode=async を付与した場合）
        type: string
      url:
        description: ファイルダウンロード URL(export_mode 指定なし、もしくは export_mode=sync の場合
        type: string
    type: object
  FunkStatsResponse:
    properties:
      funkStatsMap:
        additionalProperties:
          $ref: '#/definitions/SoracomFunkStats'
        type: object
      unixtime:
        format: int64
        type: integer
    type: object
  FunnelAWSFirehoseDestination:
    properties:
      provider:
        enum:
          - aws
        type: string
      resourceUrl:
        example: 'https://firehose.<region>.amazonaws.com/<delivery stream name>'
        type: string
      service:
        enum:
          - firehose
        type: string
    type: object
  FunnelAWSIoTDestination:
    properties:
      provider:
        enum:
          - aws
        type: string
      resourceUrl:
        example: 'https://<id>.iot.<region>.amazonaws.com/<topic>'
        type: string
      service:
        enum:
          - aws-iot
        type: string
    type: object
  FunnelAWSKinesisDestination:
    properties:
      provider:
        enum:
          - aws
        type: string
      randomizePartitionKey:
        type: boolean
      resourceUrl:
        example: 'https://kinesis.<region>.amazonaws.com/<delivery stream name>'
        type: string
      service:
        enum:
          - kinesis
        type: string
    type: object
  FunnelAcroquestTorrentioDestination:
    properties:
      endpointId:
        type: string
      provider:
        enum:
          - acroquest
        type: string
      resourceUrl:
        type: string
      service:
        enum:
          - torrentio
        type: string
      tenantId:
        type: string
    type: object
  FunnelAppressoDataSpiderDestination:
    properties:
      provider:
        enum:
          - appresso
        type: string
      resourceUrl:
        example: 'https://ss.dataspidercloud.com/ws/trigger/funnel?cid=<cid>&sid=<sid>'
        type: string
      service:
        enum:
          - dataspider
        type: string
    type: object
  FunnelAzureEventHubDestination:
    properties:
      provider:
        enum:
          - azure
        type: string
      resourceUrl:
        example: 'https://<namespace>.servicebus.windows.net/<event hubs name>/messages'
        type: string
      service:
        enum:
          - eventhubs
        type: string
    type: object
  FunnelBrainsTechImpulseDestination:
    properties:
      provider:
        enum:
          - brains-tech
        type: string
      resourceUrl:
        type: string
      service:
        enum:
          - impulse
        type: string
    type: object
  FunnelConfiguration:
    properties:
      addSimId:
        default: false
        type: boolean
      contentType:
        $ref: '#/definitions/FunnelContentType'
      credentialsId:
        type: string
      destination: {}
      enabled:
        default: false
        type: boolean
    type: object
  FunnelContentType:
    enum:
      - json
      - text
      - unspecified
      - binary
      - application/x-soracom-bf-v1
    type: string
  FunnelDestination:
    properties:
      provider:
        type: string
      resourceUrl:
        type: string
      service:
        type: string
    type: object
  FunnelEsrijArcgisOnlineDestination:
    properties:
      config:
        type: string
      provider:
        enum:
          - esrij
        type: string
      resourceUrl:
        type: string
      service:
        enum:
          - arcgis-online
        type: string
    type: object
  FunnelFusicMockmockDatarecorderDestination:
    properties:
      provider:
        enum:
          - fusic
        type: string
      resourceUrl:
        type: string
      service:
        enum:
          - mockmock-datarecorder
        type: string
    type: object
  FunnelGooglePubSubDestination:
    properties:
      provider:
        enum:
          - google
        type: string
      resourceUrl:
        example: your_topic_name
        type: string
      service:
        enum:
          - pubsub
        type: string
    type: object
  FunnelInfoteriaPlatioDestination:
    properties:
      applicationId:
        type: string
      collectionId:
        type: string
      passAll:
        type: boolean
      provider:
        enum:
          - infoteria
        type: string
      resourceUrl:
        type: string
      service:
        enum:
          - platio
        type: string
      values:
        type: string
    type: object
  FunnelKiiThingifDestination:
    properties:
      provider:
        enum:
          - kii
        type: string
      resourceUrl:
        type: string
      service:
        enum:
          - thingif
        type: string
    type: object
  FunnelLandlogDestination:
    properties:
      channel_id:
        type: string
      data_format:
        enum:
          - json
          - text
          - xml
        type: string
      provider:
        enum:
          - landlog
        type: string
      resourceUrl:
        example: 'https://api.landlog.info'
        type: string
      service:
        enum:
          - landlog
        type: string
    type: object
  FunnelOptimCloudiotosDestination:
    properties:
      channel_id:
        type: string
      data_format:
        type: string
      provider:
        enum:
          - optim
        type: string
      resourceUrl:
        example: 'https://messaging.optimcloudapis.com'
        type: string
      service:
        enum:
          - cloudiotos
        type: string
    type: object
  FunnelSensorCorpusDestination:
    properties:
      additionalData:
        type: string
      provider:
        enum:
          - infocorpus
        type: string
      resourceUrl:
        example: 'https://www.sensorcorpus.net/'
        type: string
      service:
        enum:
          - sensorcorpus
        type: string
    type: object
  FunnelStatsResponse:
    properties:
      funnelStatsMap:
        additionalProperties:
          $ref: '#/definitions/SoracomFunnelStats'
        type: object
      unixtime:
        format: int64
        type: integer
    type: object
  FunnelTeradataIntellicloudDestination:
    properties:
      provider:
        enum:
          - teradata
        type: string
      resourceUrl:
        type: string
      service:
        enum:
          - intellicloud
        type: string
    type: object
  FunnelWingarcMotionboardDestination:
    properties:
      provider:
        enum:
          - wingarc
        type: string
      resourceUrl:
        example: 'https://iot-cloud.motionboard.jp/motionboard/'
        type: string
      service:
        enum:
          - motionboard
        type: string
    type: object
  FunnelYaskawaMmcloudDestination:
    properties:
      desthost:
        type: string
      destport:
        maximum: 0
        minimum: 65535
        type: integer
      provider:
        enum:
          - yaskawa
        type: string
      resourceUrl:
        type: string
      service:
        enum:
          - mmcloud
        type: string
    type: object
  Gadget:
    properties:
      tags:
        additionalProperties:
          type: string
        type: object
      attributes:
        type: object
      groupId:
        type: string
      id:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      lastSeen:
        type: object
      operatorId:
        type: string
      product_id:
        type: string
      serial_number:
        type: string
      status:
        enum:
          - active
          - terminated
        type: string
      terminationEnabled:
        default: false
        type: boolean
    type: object
  GadgetRegistrationRequest:
    properties:
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  GatePeer:
    properties:
      innerIpAddress:
        type: string
      outerIpAddress:
        type: string
      ownedByCustomer:
        type: boolean
    type: object
  GenerateOperatorsAuthKeyResponse:
    properties:
      authKey:
        type: string
      authKeyId:
        type: string
    type: object
  GenerateTokenRequest:
    properties:
      tokenTimeoutSeconds:
        default: 86400
        description: |
          新しい API トークンの有効期限の長さ（秒単位）。
          指定しなければデフォルトは 86400 [秒]（24 時間）。
          最大値は 172800 [秒]（48 時間）。
        maximum: 172800
        type: integer
    type: object
  GenerateTokenResponse:
    properties:
      token:
        type: string
    required:
      - token
    type: object
  GenerateUserAuthKeyResponse:
    properties:
      authKey:
        type: string
      authKeyId:
        type: string
    type: object
  GetBillingHistoryResponse:
    properties:
      billList:
        description: 月ごとの利用料リスト
        items:
          $ref: '#/definitions/MonthlyBill'
        type: array
    type: object
  GetDefaultPermissionsResponse:
    properties:
      defaultPermissions:
        type: string
    type: object
  GetExportedFileResponse:
    properties:
      status:
        description: ファイル出力ステータス
        enum:
          - processing
          - exported
          - failed
        type: string
      url:
        description: ファイルダウンロード URL
        type: string
    type: object
  GetLatestBill:
    properties:
      amount:
        description: 金額
        format: int64
        type: integer
      lastEvaluatedTime:
        description: 利用額計算を実施した時間
        example: yyyyMMddHHmmss
        type: string
    type: object
  GetOperatorResponse:
    properties:
      createDate:
        type: string
      description:
        type: string
      email:
        type: string
      operatorId:
        type: string
      rootOperatorId:
        type: string
      updateDate:
        type: string
    required:
      - createDate
      - description
      - email
      - operatorId
      - rootOperatorId
      - updateDate
    type: object
  GetOrderResponse:
    properties:
      email:
        description: Email address
        type: string
      orderDateTime:
        description: Order date and time
        example: yyyyMMddHHmmss
        type: string
      orderId:
        description: Order ID
        type: string
      orderItemList:
        description: Order item list
        items:
          $ref: '#/definitions/EstimatedOrderItemModel'
        type: array
      orderStatus:
        description: Order status
        enum:
          - ordering
          - ordered
          - kitting
          - shipped
          - received
          - cancelling
          - cancelled
          - failed
        type: string
      shippingAddress:
        $ref: '#/definitions/ShippingAddressModel'
      shippingAddressId:
        description: Shipping address ID
        type: string
      shippingCost:
        description: Shipping cost
        format: double
        type: number
      shippingLabelNumber:
        description: Shipping label number
        type: string
      taxAmount:
        description: Tax amount
        format: double
        type: number
      totalAmount:
        description: Total amount
        format: double
        type: number
    type: object
  GetPaymentMethodResult:
    properties:
      errorCode:
        description: Error code (only if payment information is invalid)
        enum:
          - success
          - processing
          - invalid_request
          - invalid_number
          - incorrect_number
          - invalid_name
          - invalid_expiry_month
          - invalid_expiry_year
          - invalid_expiry
          - incorrect_expiry
          - invalid_cvc
          - incorrect_cvc
          - card_declined
          - missing
          - processing_error
        type: string
      errorMessage:
        description: Error message (only if payment information is invalid)
        type: string
      properties:
        description: Payment information
        type: string
      providerType:
        description: Provider type
        enum:
          - WebPay
        type: string
      updateDate:
        description: Update date
        example: yyyyMMddHHmmss
        type: string
    type: object
  GetPaymentTransactionResult:
    properties:
      amount:
        $ref: '#/definitions/PaymentAmount'
      description:
        $ref: '#/definitions/PaymentDescription'
      message:
        description: Message
        type: string
      messageCode:
        description: Message code
        enum:
          - success
          - processing
          - invalid_request
          - invalid_number
          - incorrect_number
          - invalid_name
          - invalid_expiry_month
          - invalid_expiry_year
          - invalid_expiry
          - incorrect_expiry
          - invalid_cvc
          - incorrect_cvc
          - card_declined
          - missing
          - processing_error
        type: string
      status:
        description: Status
        enum:
          - success
          - error
        type: string
    type: object
  GetShippingAddressResponse:
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      building:
        type: string
      city:
        type: string
      companyName:
        type: string
      department:
        type: string
      fullName:
        type: string
      phoneNumber:
        type: string
      shippingAddressId:
        description: 配送先 ID
        type: string
      shippingArea:
        description: 配送先エリア
        type: string
      state:
        type: string
      zipCode:
        type: string
    required:
      - addressLine1
      - city
      - phoneNumber
      - shippingAddressId
      - shippingArea
      - state
      - zipCode
    type: object
  GetUserPasswordResponse:
    properties:
      hasPassword:
        type: boolean
    type: object
  GetUserPermissionResponse:
    properties:
      permission:
        description: JSON string of permissions
        type: string
    required:
      - permission
    type: object
  GetVolumeDiscountResponse:
    properties:
      contractDateTime:
        description: Contract date time
        example: yyyyMMddHHmmss
        type: string
      contractId:
        description: Contract ID
        type: string
      contractTermMonth:
        default: 12
        description: Contract months
        format: int32
        type: integer
      endDate:
        description: End date
        example: yyyyMMdd
        type: string
      initialCost:
        description: Initial cost
        format: double
        type: number
      quantity:
        description: Quantity
        format: int32
        type: integer
      startDate:
        description: Start date
        example: yyyyMMdd
        type: string
      status:
        description: Status
        enum:
          - active
          - expired
        type: string
      unitPrice:
        description: Unit price
        format: double
        type: number
      volumeDiscountPaymentType:
        description: Payment type
        enum:
          - MONTHLY
          - PREPAYMENT
        type: string
      volumeDiscountType:
        description: Long term discount type
        enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
        type: string
    type: object
  GlobalSimAppletPLMNRecord:
    properties:
      containerId:
        format: int64
        type: integer
      mcc:
        type: string
      mnc:
        type: string
    required:
      - mcc
      - containerId
    type: object
  Group:
    properties:
      tags:
        $ref: '#/definitions/TagSet'
      configuration:
        $ref: '#/definitions/Map'
      createdTime:
        format: int64
        type: integer
      groupId:
        type: string
      lastModifiedTime:
        format: int64
        type: integer
      operatorId:
        type: string
    type: object
  GroupConfigurationUpdateRequest:
    properties:
      key:
        type: string
      value:
        type: string
    required:
      - key
      - value
    type: object
  HarvestExportedDataStatsResponse:
    properties:
      exportedBytes:
        description: exportedBytes
        type: integer
      yearMonth:
        description: yearMonth
        type: string
    type: object
  HarvestStatsResponse:
    properties:
      harvestStatsMap:
        additionalProperties:
          $ref: '#/definitions/SoracomHarvestStats'
        type: object
      unixtime:
        format: int64
        type: integer
    type: object
  ImeiLock:
    properties:
      imei:
        type: string
    type: object
  IndividualInformationModel:
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      building:
        type: string
      city:
        type: string
      countryCode:
        type: string
      fullName:
        type: string
      phoneNumber:
        type: string
      state:
        type: string
      zipCode:
        type: string
    required:
      - fullName
      - countryCode
      - zipCode
      - phoneNumber
    type: object
  Insight:
    properties:
      anomalyDetectedTimes:
        description: >-
          Times that possible anomaly behaviors were detected. The format
          depends on the timestamp of events relating to the category. (e.g.
          unixtime milliseconds for session category)
        items:
          type: string
        type: array
      category:
        enum:
          - data
          - session
          - sim
          - others
          - unknown
        type: string
      insightId:
        type: string
      message:
        type: string
      referenceUrls:
        description: Reference URLs that is related to the insight
        items:
          additionalProperties:
            $ref: '#/definitions/ReferenceUrl'
          type: object
        type: array
      severity:
        enum:
          - error
          - warning
          - info
          - none
          - unknown
        type: string
    type: object
  IpAddressMapEntry:
    properties:
      ipAddress:
        type: string
      key:
        type: string
      type:
        enum:
          - static
          - dynamic
          - customerGatePeer
          - gatePeer
        type: string
    type: object
  IssueAddEmailTokenRequest:
    properties:
      email:
        description: Email address to be added
        type: string
      password:
        description: Password of the operator
        type: string
    required:
      - email
      - password
    type: object
  IssuePasswordResetTokenRequest:
    properties:
      email:
        type: string
    required:
      - email
    type: object
  IssueSubscriberTransferTokenRequest:
    properties:
      transferDestinationOperatorEmail:
        description: 移管先オペレーターEmail
        type: string
      transferDestinationOperatorId:
        description: 移管先オペレーターID
        type: string
      transferImsi:
        description: 移管する IMSI リスト
        items:
          type: string
        type: array
    required:
      - transferDestinationOperatorEmail
      - transferDestinationOperatorId
      - transferImsi
    type: object
  IssueSubscriberTransferTokenResponse:
    properties:
      token:
        description: トークン
        type: string
    required:
      - token
    type: object
  JunctionInspectionConfiguration:
    properties:
      enabled:
        default: false
        type: boolean
      report:
        $ref: '#/definitions/FunnelConfiguration'
    type: object
  JunctionMirroringConfiguration:
    properties:
      peers:
        additionalProperties:
          $ref: '#/definitions/JunctionMirroringPeer'
        type: object
    type: object
  JunctionMirroringPeer:
    properties:
      description:
        type: string
      enabled:
        default: false
        type: boolean
      ipAddress:
        type: string
      protocol:
        enum:
          - gre
        type: string
    type: object
  JunctionRedirectionConfiguration:
    properties:
      description:
        type: string
      enabled:
        default: false
        type: boolean
      gateway:
        type: string
    type: object
  LagoonDashboardPermissionsResponse:
    properties:
      dashboardId:
        format: int64
        type: number
      dashboardTitle:
        type: string
      permissions:
        items:
          properties:
            dashboardId:
              format: int64
              type: number
            dashboardTitle:
              type: string
            permissionName:
              enum:
                - View
                - Edit
                - Admin
              type: string
            userEmail:
              type: string
            userId:
              format: int64
              type: number
          type: object
        type: array
    type: object
  LagoonDashboardPermissionsUpdatingRequest:
    properties:
      permissions:
        items:
          properties:
            permission:
              type: string
            userId:
              format: int64
              type: integer
          type: object
        type: array
    type: object
  LagoonLicensePackStatusResponse:
    properties:
      licensePackName:
        type: string
      quantity:
        format: int32
        type: integer
    type: object
  LagoonLicensePacksUpdatingRequest:
    properties:
      licensePackQuantities:
        items:
          properties:
            desiredQuantity:
              format: int32
              type: integer
            licensePackName:
              type: string
          type: object
        type: array
    type: object
  LagoonMigrationFromClassicRequest:
    properties:
      dashboardIds:
        description: A list of dashboard IDs to migrate
        items:
          type: string
        type: array
    type: object
  LagoonPlanChangingRequest:
    properties:
      plan:
        enum:
          - maker
          - pro
          - free
        type: string
    type: object
  LagoonRegistrationRequest:
    properties:
      plan:
        enum:
          - free
          - maker
          - pro
        type: string
      userPassword:
        description: This password is used by the initial user's login.
        type: string
    type: object
  LagoonRegistrationResponse:
    properties:
      lagoonUserEmail:
        description: This email address is used on login with the initial user.
        type: string
    type: object
  LagoonUser:
    properties:
      email:
        description: This value used on login.
        type: string
      id:
        type: number
      lastSeenAt:
        description: The last login datetime.
        type: string
      lastSeenAtAge:
        description: The last login datetime as age.
        type: string
      role:
        description: A role that represents the permission.
        enum:
          - Viewer
          - Editor
        type: string
    type: object
  LagoonUserCreationRequest:
    properties:
      role:
        description: A role that represents the permission.
        enum:
          - Viewer
          - Editor
        type: string
      userEmail:
        type: string
      userPassword:
        type: string
    type: object
  LagoonUserCreationResponse:
    properties:
      id:
        description: Lagoon user ID assigned to the created user.
        type: integer
    type: object
  LagoonUserEmailUpdatingRequest:
    properties:
      userEmail:
        type: string
    type: object
  LagoonUserPasswordUpdatingRequest:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  LagoonUserPermissionUpdatingRequest:
    properties:
      role:
        description: A role that represents the permission.
        enum:
          - Viewer
          - Editor
        type: string
    type: object
  LastSeen:
    properties:
      rssi:
        format: int32
        type: integer
      snr:
        format: int32
        type: integer
      time:
        format: date-time
        type: string
    type: object
  ListCouponResponse:
    properties:
      couponList:
        description: Coupons
        items:
          $ref: '#/definitions/CouponResponse'
        type: array
    type: object
  ListOrderResponse:
    properties:
      orderList:
        description: List of confirmed orders
        items:
          $ref: '#/definitions/GetOrderResponse'
        type: array
    type: object
  ListOrderedSubscriberResponse:
    properties:
      orderedSubscriberList:
        description: List of ordered SIMs
        items:
          $ref: '#/definitions/OrderedSubscriber'
        type: array
    type: object
  ListPaymentStatementResponse:
    properties:
      paymentStatementsList:
        description: Payment statements
        items:
          $ref: '#/definitions/PaymentStatementResponse'
        type: array
    type: object
  ListProductResponse:
    properties:
      productList:
        items:
          $ref: '#/definitions/ProductModel'
        type: array
      shippingCostList:
        items:
          $ref: '#/definitions/ShippingCostModel'
        type: array
    type: object
  ListRolesResponse:
    properties:
      createDateTime:
        format: int64
        type: integer
      description:
        type: string
      roleId:
        type: string
      updateDateTime:
        format: int64
        type: integer
    type: object
  ListShippingAddressResponse:
    properties:
      shippingAddresses:
        items:
          $ref: '#/definitions/GetShippingAddressResponse'
        type: array
    type: object
  ListVolumeDiscountResponse:
    properties:
      volumeDiscountList:
        description: Contracted long term discounts
        items:
          $ref: '#/definitions/GetVolumeDiscountResponse'
        type: array
    type: object
  LocationRegistrationStatus:
    properties:
      cs:
        $ref: '#components/schemas/LocationRegistrationStatusForNetwork'
        description: Information on location registration to the CS network
      eps:
        $ref: '#components/schemas/LocationRegistrationStatusForNetwork'
        description: Information on location registration to the EPS network
      ps:
        $ref: '#components/schemas/LocationRegistrationStatusForNetwork'
        description: Information on location registration to the PS network
    type: object
  LocationRegistrationStatusForNetwork:
    properties:
      lastModifiedTime:
        description: >-
          Timestamp of the last successful location registration (Unix time, in
          milliseconds)
        format: int64
        type: integer
      vplmn:
        description: PLMN ID of the visited network.
        type: string
    type: object
  LogEntry:
    properties:
      body:
        type: object
      resourceId:
        type: string
      resourceType:
        enum:
          - Subscriber
          - EventHandler
          - VirtualPrivateGateway
        type: string
      service:
        enum:
          - Air
          - Beam
          - Canal
          - Direct
          - Door
          - Endorse
          - Funnel
          - Gate
        type: string
      time:
        format: int64
        type: integer
    type: object
  LoraData:
    properties:
      data:
        type: string
      fPort:
        default: 2
        type: integer
    type: object
  LoraDevice:
    properties:
      tags:
        additionalProperties:
          type: string
        type: object
      device_id:
        type: string
      groupId:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      lastSeen:
        $ref: '#/definitions/LastSeen'
      operatorId:
        type: string
      status:
        enum:
          - active
          - ready
          - terminated
          - instock
        type: string
      terminationEnabled:
        default: false
        type: boolean
    type: object
  LoraGateway:
    properties:
      tags:
        additionalProperties:
          type: string
        type: object
      address:
        type: string
      createdTime:
        format: date-time
        type: string
      gatewayId:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      networkSetId:
        type: string
      online:
        default: false
        type: boolean
      operatorId:
        type: string
      owned:
        default: false
        type: boolean
      status:
        enum:
          - active
          - terminated
          - ready
          - instock
        type: string
      terminationEnabled:
        default: false
        type: boolean
    type: object
  LoraNetworkSet:
    properties:
      tags:
        additionalProperties:
          type: string
        type: object
      allowedOperators:
        items:
          type: string
        type: array
        uniqueItems: true
      createdTime:
        format: date-time
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      networkSetId:
        type: string
      operatorId:
        type: string
    type: object
  MFAAuthenticationRequest:
    properties:
      mfaOTPCode:
        type: string
    type: object
  MFAIssueRevokingTokenRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  MFARevokingTokenVerifyRequest:
    properties:
      backupCode:
        type: string
      email:
        type: string
      password:
        type: string
      token:
        type: string
    type: object
  MFAStatusOfUseResponse:
    properties:
      status:
        type: string
    type: object
  Map:
    additionalProperties:
      type: string
    type: object
  MappingEntries:
    properties:
      mappingEntries:
        items:
          $ref: '#/definitions/GlobalSimAppletPLMNRecord'
        type: array
    type: object
  MonthlyBill:
    properties:
      amount:
        description: 金額
        format: int64
        type: integer
      paymentStatus:
        description: 直近の課金ステータス
        enum:
          - lessThanMinimumCharge
          - paying
          - paid
          - refunding
          - refunded
          - fail
        type: string
      paymentTransactionId:
        description: 課金詳細取得用の ID
        type: string
      yearMonth:
        description: 年月
        example: yyyyMM
        type: string
    type: object
  NapterAuditLogDirection:
    properties:
      destinationIPAddress:
        type: string
      destinationPort:
        format: int64
        type: integer
      sourceIPAddress:
        type: string
      sourcePort:
        format: int64
        type: integer
    type: object
  NapterAuditLogEntry:
    properties:
      connectionId:
        type: string
      createdAt:
        format: int64
        type: integer
      direction:
        $ref: '#/definitions/NapterAuditLogDirection'
      imsi:
        type: string
      isTLS:
        type: boolean
      operatorId:
        type: string
      type:
        enum:
          - ACCESS
          - DENIED
          - CONNECTED
          - CLOSED
          - REFUSED
          - CREATED
          - DELETED
          - EXPIRED
        type: string
    type: object
  NapterAuditLogsExportedDataStatsResponse:
    properties:
      exportedBytes:
        description: exportedBytes
        type: integer
      yearMonth:
        description: yearMonth
        type: string
    type: object
  ObjectInstance:
    properties:
      id:
        format: int32
        type: integer
      observed:
        default: false
        type: boolean
      resources:
        additionalProperties:
          $ref: '#/definitions/ResourceInstance'
        type: object
    type: object
  OpenGateRequest:
    properties:
      privacySeparatorEnabled:
        default: false
        type: boolean
      vxlanId:
        default: 10
        format: int32
        type: integer
    type: object
  OperatorMFAVerifyingResponse:
    properties:
      backupCodes:
        items:
          type: string
        type: array
    type: object
  OrderItemModel:
    properties:
      productCode:
        description: Product code
        type: string
      quantity:
        description: Quantity
        format: int32
        type: integer
    type: object
  OrderedSubscriber:
    properties:
      imsi:
        description: IMSI
        type: string
      msisdn:
        description: MSISDN
        type: string
      serialNumber:
        description: serialNumber
        type: string
    type: object
  PacketCaptureSession:
    properties:
      createdTime:
        format: date-time
        type: string
      duration:
        format: int32
        type: integer
      endedTime:
        format: date-time
        type: string
      failedReason:
        type: string
      prefix:
        type: string
      startedTime:
        format: date-time
        type: string
      status:
        enum:
          - REQUESTED
          - ACCEPTED
          - CAPTURING
          - POST_PROCESSING
          - DONE
          - FAILED
        type: string
      url:
        format: uri
        type: string
    type: object
  PacketCaptureSessionRequest:
    properties:
      duration:
        format: int32
        maximum: 86400
        minimum: 30
        type: integer
      prefix:
        pattern: '^[0-9A-Za-z_\-]{0,100}$'
        type: string
    required:
      - duration
    type: object
  PaymentAmount:
    description: Payment amount
    properties:
      taxAmount:
        format: double
        type: number
      totalAmount:
        format: double
        type: number
    type: object
  PaymentDescription:
    description: Payment description
    properties:
      description:
        type: string
      itemList:
        items:
          type: string
        type: array
    type: object
  PaymentStatementResponse:
    properties:
      amount:
        description: Amount
        format: double
        type: number
      paymentDateTime:
        description: Payment date time
        format: int64
        type: integer
      paymentInstrument:
        description: Payment instrument
        type: string
      paymentMethod:
        description: Payment method
        type: string
      paymentStatementId:
        description: Payment statement ID
        type: string
      paymentStatementInfo:
        description: Payment statement information
        type: string
    type: object
  Placement:
    properties:
      region:
        default: eu-central-1
        type: string
    type: object
  PortMapping:
    properties:
      destination:
        $ref: '#/definitions/PortMappingDestination'
      duration:
        description: 'The duration that remote access is enabled, in seconds.'
        type: number
      endpoint:
        description: >-
          SORACOM Napter endpoint (IP address and port number) for remote
          access.
        type: string
      hostname:
        description: SORACOM Napter hostname for remote access.
        type: string
      ipAddress:
        description: SORACOM Napter IP Address for remote access.
        type: string
      port:
        description: SORACOM Napter port number for remote access.
        type: number
      source:
        $ref: '#/definitions/PortMappingSource'
      tlsRequired:
        description: Indicates TLS is required.
        type: boolean
    type: object
  PortMappingDestination:
    properties:
      imsi:
        description: The target IMSI of the subscriber.
        type: string
      port:
        description: The port on your device used for access.
        type: number
    required:
      - imsi
      - port
    type: object
  PortMappingSource:
    properties:
      ipRanges:
        description: >-
          The range of IP addresses in CIDR notation which will be allowed to
          access the port mapping.
        items:
          type: string
        type: array
    type: object
  PreviousSessionStatus:
    properties:
      cell:
        $ref: '#/definitions/Cell'
      createdTime:
        description: The time when the previous session was created.
        format: int64
        type: integer
      deletedTime:
        description: The time when the previous session was deleted.
        format: int64
        type: integer
      dnsServers:
        description: Array of IP address of the DNS servers.
        items:
          type: string
        type: array
      gatewayPrivateIpAddress:
        type: string
      gatewayPublicIpAddress:
        type: string
      imei:
        description: The IMEI of the device using the SIM.
        type: string
      ueIpAddress:
        description: The IP address of the device.
        type: string
      vpgId:
        description: The Virtual Private Gateway IP address configured.
        type: string
    type: object
  PriceByQuantity:
    properties:
      minQuantity:
        description: Min quantity
        format: int32
        type: integer
      price:
        description: Price
        format: double
        type: number
      taxIncludedPrice:
        description: TaxIncluded price
        format: double
        type: number
    type: object
  ProductModel:
    description: Product
    properties:
      campaignCode:
        description: Campaign code
        type: string
      consignorId:
        description: Consignor ID
        type: string
      consignorName:
        description: Consignor name
        type: string
      count:
        description: Count
        format: double
        type: number
      currency:
        description: Currency
        enum:
          - JPY
          - USD
        type: string
      description:
        description: Product Description
        type: string
      maxQuantity:
        description: Max quantity
        format: int32
        type: integer
      price:
        description: Price
        format: double
        type: number
      priceByQuantityList:
        items:
          $ref: '#/definitions/PriceByQuantity'
        type: array
      productCode:
        description: Product code
        type: string
      productInfoURL:
        description: URL of product page
        type: string
      productName:
        description: Product name
        type: string
      productType:
        description: Product type
        enum:
          - sim
          - lora
          - sigfox
          - network_module
          - misc
        type: string
      properties:
        additionalProperties:
          type: string
        description: Properties
        type: object
      regularPrice:
        description: Regular price
        format: double
        type: number
      taxIncludedPrice:
        description: Price
        format: double
        type: number
      taxIncludedRegularPrice:
        description: TaxIncluded regular price
        format: double
        type: number
    type: object
  PutIpAddressMapEntryRequest:
    properties:
      ipAddress:
        type: string
      key:
        type: string
    required:
      - key
      - ipAddress
    type: object
  ReferenceUrl:
    properties:
      title:
        type: string
      url:
        type: string
    type: object
  RegisterGatePeerRequest:
    properties:
      innerIpAddress:
        type: string
      outerIpAddress:
        type: string
    required:
      - outerIpAddress
    type: object
  RegisterLoraDeviceRequest:
    properties:
      tags:
        additionalProperties:
          type: string
        type: object
      groupId:
        type: string
      registrationSecret:
        type: string
    type: object
  RegisterOperatorsRequest:
    properties:
      email:
        type: string
      password:
        description: >-
          パスワードは以下の条件を満たしている必要があります：長さ 8 文字以上 100 文字以内、アルファベット小文字 (a-z) を 1
          文字以上使用、アルファベット大文字 (A-Z) を 1 文字以上使用、数字を 1 文字以上使用。記号なども使用できます。
        type: string
    required:
      - email
      - password
    type: object
  RegisterPayerInformationModel:
    properties:
      companyName:
        description: Company name
        type: string
      department:
        description: Department
        type: string
      fullName:
        description: Full name
        type: string
    type: object
  RegisterSimRequest:
    properties:
      tags:
        items:
          $ref: '#/definitions/TagUpdateRequest'
        type: array
      groupId:
        type: string
      registrationSecret:
        type: string
    required:
      - registrationSecret
    type: object
  RegisterSubscribersRequest:
    properties:
      tags:
        items:
          $ref: '#/definitions/TagUpdateRequest'
        type: array
      groupId:
        type: string
      registrationSecret:
        type: string
    required:
      - registrationSecret
    type: object
  ResourceInstance:
    properties:
      description:
        type: string
      id:
        format: int32
        type: integer
      mandatory:
        default: false
        type: boolean
      multiple:
        default: false
        type: boolean
      name:
        type: string
      observed:
        default: false
        type: boolean
      operations:
        enum:
          - NONE
          - R
          - W
          - RW
          - E
          - RE
          - WE
          - RWE
        type: string
      rangeEnumeration:
        type: string
      type:
        enum:
          - STRING
          - INTEGER
          - FLOAT
          - BOOLEAN
          - OPAQUE
          - TIME
          - OBJLNK
        type: string
      units:
        type: string
      value:
        type: object
      values:
        type: object
    type: object
  RoleResponse:
    properties:
      createDateTime:
        format: int64
        type: integer
      description:
        type: string
      permission:
        description: Permission の JSON
        type: string
      roleId:
        type: string
      updateDateTime:
        format: int64
        type: integer
    type: object
  RoutingFilterEntry:
    properties:
      action:
        description: >-
          Whether to allow or deny the outbound packets with a destination in
          the specified range
        enum:
          - allow
          - deny
        type: string
      ipRange:
        description: 'IPv4 address range in CIDR format, e.g. a.b.c.d/x'
        type: string
    required:
      - action
      - ipRange
    type: object
  RuleConfig:
    properties:
      properties:
        $ref: '#/definitions/RuleConfigProperty'
      type:
        enum:
          - SubscriberDailyTrafficRule
          - SubscriberMonthlyTrafficRule
          - SubscriberCumulativeTrafficRule
          - SubscriberFirstTrafficRule
          - SubscriberStatusAttributeRule
          - SubscriberSpeedClassAttributeRule
          - SubscriberExpiredRule
          - SubscriberImeiMismatchedRule
          - SimDailyTotalTrafficRule
          - SimMonthlyTotalTrafficRule
          - SimCumulativeTotalTrafficRule
          - SimStatusAttributeRule
          - SimSpeedClassAttributeRule
          - SimExpiredRule
          - SimImeiMismatchedRule
          - SimSubscriptionStatusRule
          - DailyTotalTrafficRule
          - MonthlyTotalTrafficRule
        type: string
    required:
      - properties
      - type
    type: object
  RuleConfigProperty:
    properties:
      inactiveTimeoutDateConst:
        enum:
          - IMMEDIATELY
          - BEGINNING_OF_NEXT_MONTH
          - BEGINNING_OF_NEXT_DAY
          - AFTER_ONE_DAY
          - NEVER
        type: string
      inactiveTimeoutOffsetMinutes:
        type: string
      limitTotalTrafficMegaByte:
        type: string
      runOnceAmongTarget:
        type: boolean
      targetOtaStatus:
        description: Only for SimSubscriptionStatusRule
        enum:
          - started
          - finished
          - failed
        type: string
      targetSpeedClass:
        description: 'Only for SubscriberSpeedClassAttributeRule, SimSpeedClassAttributeRule'
        enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
          - s1.4xfast
        type: string
      targetStatus:
        description: 'Only for SubscriberStatusAttributeRule, SimStatusAttributeRule'
        enum:
          - ready
          - active
          - inactive
          - standby
          - suspended
          - terminated
        type: string
    required:
      - inactiveTimeoutDateConst
      - limitTotalTrafficMegaByte
    type: object
  SessionEvent:
    properties:
      apn:
        description: The Access Point Name configured.
        type: string
      dns0:
        description: First IP address of DNS servers.
        type: string
      dns1:
        description: Second IP address of DNS servers.
        type: string
      event:
        description: >-
          The type of behavior for the event. Possible values are "Created"
          indicates the device created a new session, "Modified" indicates that
          an existing connection was modified, "Deleted" indicates a network
          connection was closed.
        type: string
      gatewayPrivateIpAddress:
        type: string
      gatewayPublicIpAddress:
        type: string
      imei:
        description: The IMEI of the device using the SIM.
        type: string
      imsi:
        description: The IMSI of the SIM.
        type: string
      operatorId:
        description: The operator ID of the session event.
        type: string
      time:
        description: The timestamp of the session event.
        format: int64
        type: integer
      ueIpAddress:
        description: The IP address of the device.
        type: string
      vpgId:
        description: The Virtual Private Gateway IP address configured.
        type: string
    type: object
  SessionStatus:
    properties:
      cell:
        $ref: '#/definitions/Cell'
      dnsServers:
        description: Array of IP address of the DNS servers.
        items:
          type: string
        type: array
      gatewayPrivateIpAddress:
        type: string
      gatewayPublicIpAddress:
        type: string
      imei:
        description: The IMEI of the device using the SIM.
        type: string
      lastUpdatedAt:
        format: int64
        type: integer
      online:
        description: Whether or not the SIM is online.
        type: boolean
      ueIpAddress:
        description: The IP address of the device.
        type: string
      vpgId:
        description: The Virtual Private Gateway IP address configured.
        type: string
    type: object
  SetDeviceObjectModelScopeRequest:
    properties:
      scope:
        type: string
    type: object
  SetGroupRequest:
    properties:
      tags:
        $ref: '#/definitions/TagSet'
      groupId:
        type: string
    type: object
  SetImeiLockRequest:
    properties:
      imei:
        type: string
    type: object
  SetNetworkSetRequest:
    properties:
      networkSetId:
        type: string
    type: object
  SetSystemNotificationsRequest:
    properties:
      emailIdList:
        items:
          type: string
        type: array
      password:
        description: Password of the operator. This is necessary when type is primary.
        type: string
    required:
      - emailIdList
    type: object
  SetUserPermissionRequest:
    properties:
      description:
        type: string
      permission:
        description: JSON string of permissions
        type: string
    required:
      - permission
    type: object
  ShippingAddressModel:
    description: Shipping address
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      building:
        type: string
      city:
        type: string
      companyName:
        type: string
      countryCode:
        type: string
      department:
        type: string
      email:
        type: string
      fullName:
        type: string
      phoneNumber:
        type: string
      state:
        type: string
      zipCode:
        type: string
    required:
      - addressLine1
      - city
      - state
      - zipCode
    type: object
  ShippingCostModel:
    description: Shipping cost
    properties:
      shippingArea:
        description: (Japan coverage only) Shipping area
        enum:
          - hokkaido
          - kita_tohoku
          - minami_tohoku
          - kanto
          - shinetsu
          - chubu
          - hokuriku
          - kansai
          - chugoku
          - shikoku
          - kyushu
          - okinawa
        type: string
      shippingAreaName:
        description: Shipping Area name
        type: string
      shippingCost:
        description: Shipping Cost
        format: double
        type: number
      size:
        description: Size
        format: int32
        type: integer
    type: object
  SigfoxData:
    properties:
      data:
        type: string
    type: object
  SigfoxDevice:
    properties:
      tags:
        additionalProperties:
          type: string
        type: object
      device_id:
        type: string
      groupId:
        type: string
      lastModifiedTime:
        format: date-time
        type: string
      lastSeen:
        $ref: '#/definitions/LastSeen'
      operatorId:
        type: string
      status:
        enum:
          - active
          - ready
          - terminated
          - instock
        type: string
      terminationEnabled:
        default: false
        type: boolean
    type: object
  SigfoxRegistrationRequest:
    properties:
      tags:
        additionalProperties:
          type: string
        type: object
      registrationSecret:
        type: string
    type: object
  Sim:
    properties:
      tags:
        $ref: '#/definitions/TagSet'
      activeProfileId:
        type: string
      arcSessionStatus:
        $ref: '#/definitions/ArcSessionStatus'
      capabilities:
        $ref: '#/definitions/Capabilities'
      createdTime:
        format: int64
        type: integer
      expiryAction:
        enum:
          - doNothing
          - deleteSession
          - deactivate
          - suspend
          - terminate
        type: string
      expiryTime:
        format: int64
        type: integer
      groupId:
        type: string
      imeiLock:
        $ref: '#/definitions/ImeiLock'
      lastModifiedTime:
        format: int64
        type: integer
      lastPortMappingCreatedTime:
        format: int64
        type: integer
      localInfo:
        $ref: '#/definitions/Map'
      moduleType:
        type: string
      operatorId:
        type: string
      otaSerialNumber:
        type: string
      pcapEndTime:
        format: int64
        type: integer
      pcapStartTime:
        format: int64
        type: integer
      previousSession:
        $ref: '#/definitions/PreviousSessionStatus'
      profiles:
        additionalProperties:
          $ref: '#/definitions/SimProfile'
        type: object
      serialNumber:
        type: string
      sessionStatus:
        $ref: '#/definitions/SessionStatus'
      simId:
        type: string
      speedClass:
        type: string
      status:
        type: string
      terminationEnabled:
        type: boolean
      type:
        enum:
          - euicc
          - uicc
          - virtual
        type: string
    type: object
  SimProfile:
    properties:
      arcClientPeerPrivateKey:
        type: string
      arcClientPeerPublicKey:
        type: string
      iccid:
        type: string
      otaSupported:
        type: boolean
      primaryImsi:
        type: string
      subscribers:
        additionalProperties:
          $ref: '#/definitions/SimplifiedSubscriber'
        type: object
    type: object
  SimplifiedSubscriber:
    properties:
      bundles:
        items:
          type: string
        type: array
      capabilities:
        $ref: '#/definitions/Capabilities'
      imsi:
        type: string
      msisdn:
        type: string
      status:
        type: string
      subscription:
        type: string
    type: object
  SmsForwardingReport:
    properties:
      messageId:
        type: string
    type: object
  SmsForwardingRequest:
    properties:
      encodingType:
        default: 2
        description: >-
          Encoding type of the message body. `1` indicates the body is
          `DCS_7BIT` that only supports single byte characters. `2` is
          `DCS_UCS2` that supports multi-byte text. When omitted, it is treated
          as `2` (`DCS_UCS2`).
        type: integer
      payload:
        type: string
    type: object
  SoracomBeamStats:
    properties:
      count:
        format: int64
        type: integer
    type: object
  SoracomFunkStats:
    properties:
      count:
        format: int64
        type: integer
    type: object
  SoracomFunnelStats:
    properties:
      count:
        format: int64
        type: integer
    type: object
  SoracomHarvestStats:
    properties:
      count:
        format: int64
        type: integer
    type: object
  Soralet:
    properties:
      createdTime:
        format: int64
        type: integer
      description:
        type: string
      operatorId:
        type: string
      soraletId:
        type: string
      updatedTime:
        format: int64
        type: integer
    type: object
  SoraletDataSource:
    properties:
      resourceId:
        type: string
      resourceType:
        type: string
    required:
      - resourceType
      - resourceId
    type: object
  SoraletLog:
    properties:
      createdTime:
        format: int64
        type: integer
      message:
        type: string
      operatorId:
        type: string
      soraletId:
        type: string
      version:
        format: int64
        type: integer
    type: object
  SoraletVersion:
    properties:
      createdTime:
        format: int64
        type: integer
      hash:
        type: string
      operatorId:
        type: string
      size:
        format: int64
        type: integer
      soraletId:
        type: string
      srn:
        type: string
      version:
        format: int64
        type: integer
    type: object
  Subscriber:
    properties:
      tags:
        $ref: '#/definitions/TagSet'
      apn:
        description: The Access Point Name configured.
        type: string
      bundles:
        items:
          type: string
        type: array
      createdAt:
        description: The timestamp that the SIM was created.
        format: int64
        type: integer
      expiredAt:
        description: The timestamp of a date and time where the SIM was expired.
        format: int64
        type: integer
      expiredTime:
        description: The timestamp of a date and time where the SIM was expired.
        format: int64
        type: integer
      expiryAction:
        enum:
          - doNothing
          - deleteSession
          - deactivate
          - suspend
          - terminate
        type: string
      groupId:
        description: The SIM group ID where the SIM belongs to.
        type: string
      iccid:
        description: The ICCID of the SIM.
        type: string
      imeiLock:
        $ref: '#/definitions/ImeiLock'
      imsi:
        description: The IMSI of the SIM.
        type: string
      ipAddress:
        type: string
      lastModifiedAt:
        description: The timestamp when the SIM information was modified.
        format: int64
        type: integer
      lastPortMappingCreatedTime:
        description: >-
          The timestamp (in Unix milliseconds) of the last instance where the
          Napter On-Demand Remote Access service was used with the subscriber.
          If Napter has never been used with the subscriber, null is returned.
        format: int64
        type: integer
      locationRegistrationStatus:
        $ref: '#/definitions/LocationRegistrationStatus'
        description: Location registration status for each network.
      moduleType:
        description: >-
          The form factor of the physical SIM. Possible values are "mini" for
          2FF SIM card, "micro" for 3FF SIM card, "nano" for 4FF SIM card,
          "trio" for a Universal 3-in-1 (2FF/3FF/4FF) SIM card, or "embedded"
          for MFF2 or Embedded SIM (eSIM).
        type: string
      msisdn:
        description: The MSISDN of the SIM.
        type: string
      operatorId:
        description: The Operator ID of the SIM.
        type: string
      plan:
        description: >-
          Whether or not the subscription supports SMS functionality. 0 = SMS
          not supported; 1 = SMS supported.
        type: integer
      previousSession:
        $ref: '#/definitions/PreviousSessionStatus'
      registeredTime:
        description: >-
          The timestamp (in Unix milliseconds) that the subscriber was manually
          registered to your account. When purchasing SIMs directly through the
          User Console, SIMs will automatically be registered to your account,
          and null is returned.
        format: int64
        type: integer
      serialNumber:
        description: The serial number of the SIM.
        type: string
      sessionStatus:
        $ref: '#/definitions/SessionStatus'
      simId:
        description: The SIM ID of the SIM.
        type: string
      speedClass:
        description: The speed class of the SIM.
        type: string
      status:
        description: >-
          The subscription status of the subscriber. Possible values are
          "ready", "active", "inactive", "standby", "suspended", or
          "terminated".
        type: string
      subscription:
        description: The name of the subscription for the SIM.
        type: string
      terminationEnabled:
        type: boolean
      type:
        description: The speed class of the SIM.
        type: string
    type: object
  SubscriptionContainer:
    properties:
      containerId:
        format: int64
        type: integer
      downloaded:
        type: boolean
      subscriber:
        additionalProperties:
          $ref: '#/definitions/Subscriber'
        type: object
    type: object
  SubscriptionContainerStatus:
    properties:
      containers:
        items:
          $ref: '#/definitions/SubscriptionContainer'
        type: array
      countryMapping:
        additionalProperties:
          properties:
            mappingRecord:
              properties:
                containerId:
                  format: int64
                  type: integer
                subscription:
                  type: string
              type: object
            plmnCode:
              type: string
          type: object
        type: object
    type: object
  SupportTokenResponse:
    properties:
      token:
        type: string
    required:
      - token
    type: object
  SystemNotificationsModel:
    properties:
      emailIdList:
        items:
          type: string
        type: array
      type:
        description: Notification type
        enum:
          - primary
          - recovery
          - billing
          - support
        type: string
      updateDateTime:
        format: int64
        type: integer
    type: object
  TagSet:
    additionalProperties:
      type: string
    description: >-
      An object which always contains at least one property "name" with a string
      value. If you give a subscriber/SIM a name, the name will be returned as
      the value of the "name" property. If the subscriber/SIM does not have a
      name, an empty string "" is returned. In addition, if you create any
      custom tags for the subscriber/SIM, each custom tag will appear as
      additional properties in the object.
    example:
      tagName1: tagValue1
      tagName2: tagValue2...
    type: object
  TagUpdateRequest:
    properties:
      tagName:
        type: string
      tagValue:
        type: string
    required:
      - tagName
      - tagValue
    type: object
  TrafficVolumeRanking:
    properties:
      imsi:
        type: string
      trafficVolume:
        format: int64
        type: integer
    type: object
  UpdateDefaultPermissionsRequest:
    properties:
      permissions:
        description: JSON string of permissions
        type: string
    required:
      - permissions
    type: object
  UpdateEventHandlerRequest:
    $ref: '#/definitions/CreateEventHandlerRequest'
  UpdatePasswordRequest:
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    required:
      - currentPassword
      - newPassword
    type: object
  UpdatePermissionRequest:
    properties:
      operatorId:
        type: string
    type: object
  UpdateSpeedClassRequest:
    properties:
      speedClass:
        enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
        type: string
    required:
      - speedClass
    type: object
  UpdateUserRequest:
    properties:
      description:
        type: string
    type: object
  UserDetailResponse:
    properties:
      authKeyList:
        items:
          $ref: '#/definitions/AuthKeyResponse'
        type: array
      createDateTime:
        format: int64
        type: integer
      description:
        type: string
      hasPassword:
        type: boolean
      permission:
        type: string
      roleList:
        items:
          $ref: '#/definitions/ListRolesResponse'
        type: array
      updateDateTime:
        format: int64
        type: integer
      userName:
        type: string
    type: object
  VerifyAddEmailTokenRequest:
    properties:
      token:
        description: Token sent by email
        type: string
    required:
      - token
    type: object
  VerifyOperatorsRequest:
    properties:
      token:
        type: string
    required:
      - token
    type: object
  VerifyPasswordResetTokenRequest:
    properties:
      password:
        type: string
      token:
        type: string
    required:
      - password
      - token
    type: object
  VerifySubscriberTransferTokenRequest:
    properties:
      token:
        description: トークン
        type: string
    required:
      - token
    type: object
  VerifySubscriberTransferTokenResponse:
    properties:
      transferredImsi:
        description: 移管された IMSI リスト
        items:
          type: string
        type: array
    required:
      - transferredImsi
    type: object
  VirtualPrivateGateway:
    properties:
      tags:
        $ref: '#/definitions/TagSet'
      createdTime:
        format: int64
        type: integer
      id:
        type: string
      lastModifiedTime:
        format: int64
        type: integer
      operatorId:
        type: string
      placement:
        $ref: '#/definitions/Placement'
      status:
        type: string
      type:
        enum:
          - 12
          - 13
          - 14
          - 15
        type: integer
      useInternetGateway:
        type: boolean
      virtualInterfaces:
        $ref: '#/definitions/Map'
      vpcPeeringConnections:
        $ref: '#/definitions/Map'
    type: object
  VolumeDiscountModel:
    description: Long term discount
    properties:
      contractTermMonth:
        default: 12
        description: Contract months
        format: int32
        type: integer
      endDate:
        description: End date
        example: yyyyMMdd
        type: string
      initialCost:
        description: Initial cost
        format: double
        type: number
      quantity:
        description: Quantity
        format: int32
        type: integer
      startDate:
        description: Start date
        example: yyyyMMdd
        type: string
      unitPrice:
        description: Unit price
        format: double
        type: number
      volumeDiscountPaymentType:
        description: Payment type
        enum:
          - MONTHLY
          - PREPAYMENT
        type: string
      volumeDiscountType:
        description: Long term discount type
        enum:
          - SORACOM_AIR_BASIC_CHARGE_V2
          - SORACOM_AIR_BASIC_CHARGE
          - SORACOM_AIR_MONTHLY_FIXED_BASIC_CHARGE
        type: string
    type: object
  VpcPeeringConnection:
    properties:
      destinationCidrBlock:
        type: string
      id:
        type: string
      peerOwnerId:
        type: string
      peerVpcId:
        type: string
    type: object
securityDefinitions:
  api_key:
    in: header
    name: X-Soracom-API-Key
    type: apiKey
  api_token:
    in: header
    name: X-Soracom-Token
    type: apiKey
x-components:
  examples:
    APITokenCredentials:
      value:
        credentials:
          token: sample_token
        type: api-token-credentials
    AWSCredentials:
      value:
        credentials:
          accessKeyId: sampleAccessKeyId
          secretAccessKey: sampleSecret
        type: aws-credentials
    AzureCredentials:
      value:
        credentials:
          key: your_key
          policyName: your_policy_name
        type: azure-credentials
    AzureIoTCredentials:
      value:
        credentials:
          sharedAccessKey: sample_access_key
          sharedAccessKeyName: sample
        type: azureIoT-credentials
    EsrijCredentials:
      value:
        credentials:
          refererUrl: 'https://example.com'
        type: esrij-credentials
    GoogleIoTCredentials:
      value:
        credentials:
          algorithm: RS256
          deviceId: sample_device
          privateKey: your_private_key
          projectId: sample_projectID
          region: asia-east1
          registryId: sample
        type: googleIoT-credentials
    GoogleServiceAccountJson:
      value:
        credentials:
          credentials: '{"sample": "value"}'
        type: google-service-account-json
    IAMRoleCredentials:
      value:
        credentials:
          externalId: your_external_id
          roleArn: sample_role
        type: aws-iam-role-credentials
    InfoteriaPlatioCredentials:
      value:
        credentials:
          secretToken: sample_secret
          tokenId: sample_token
        type: infoteria-platio-credentials
    KiiThingifCredentials:
      value:
        credentials:
          app_id: sample_app
          app_key: sample_key
          client_id: sample_id
          client_secret: sample_secret
        type: kii-thingif-credentials
    LandlogCredentials:
      value:
        credentials:
          client_id: sample_id
          client_secret: sample_secret
        type: landlog-credentials
    MmcloudCredentials:
      value:
        credentials:
          commandcode: sample_code
          customerid: sample_customer
          machineid: sample_id
          machineidtype: sample_type
        type: mmcloud-credentials
    MockmockDatarecorderCredentials:
      value:
        credentials:
          ca: sample_ca
          cert: sample_cert
          key: sample_key
        type: mockmock-datarecorder-credentials
    MotionboardCredentials:
      value:
        credentials:
          authkey: sample_auth
          template: temple_temp
          tenant: sample_tenant
        type: motionboard-credentials
    OptimCloudCredentials:
      value:
        credentials:
          client_id: sample_client
          client_secret: sample_secret
        type: optim-cloud-IoT-OS-credentials
    PreSharedKey:
      value:
        credentials:
          key: sample_key
        type: psk
    PubnubCredentials:
      value:
        credentials:
          pubKey: sample
          subKey: sample_sub
        type: pubnub-credentials
    SensorcorpusCredentials:
      value:
        credentials:
          session_code: sample_code
        type: sensorcorpus-credentials
    UsernamePasswordCredentials:
      value:
        credentials:
          password: sample_pass
          username: sample_user
        type: username-password-credentials
    WatsonIoTCredentials:
      value:
        credentials:
          authToken: sample_token
          deviceId: sample_id
          deviceType: sample_type
        type: watsonIoT-credentials
    X509Certificate:
      value:
        credentials:
          ca: sample_ca
          cert: sample_cert
          key: sample_key
        type: x509
  requestBodies:
    CreateAndUpdateCredentialsModel:
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/definitions/CreateAndUpdateCredentialsModel'
      description: credentials
      required: true
    DeviceObjectModel:
      content:
        application/json:
          schema:
            $ref: '#/definitions/DeviceObjectModel'
        application/xml:
          schema:
            $ref: '#/definitions/DeviceObjectModel'
      description: Device object model definition in either XML or JSON format.
      required: true
    ExpiryTime:
      content:
        application/json:
          schema:
            $ref: '#/definitions/ExpiryTime'
      description: 'Expiry time after the update (unixtime: in milliseconds).'
      required: true
    Group:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Group'
      description: Group (may include ID only).
      required: true
    LagoonPlanChangingRequest:
      content:
        application/json:
          schema:
            $ref: '#/definitions/LagoonPlanChangingRequest'
      description: req
      required: true
    MFAAuthenticationRequest:
      content:
        application/json:
          schema:
            $ref: '#/definitions/MFAAuthenticationRequest'
      description: request
      required: true

